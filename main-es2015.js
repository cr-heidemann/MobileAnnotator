(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"app\" fxLayout=\"column\" fxFill>\n    <app-menu-bar #toolbar></app-menu-bar>\n    <div fxFlex fxLayout=\"column\" class=\"content\">\n        <router-outlet></router-outlet>\n    </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/contentholder/contentholder.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/contentholder/contentholder.component.html ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"content\">\n    <div class=\"contentholder\" (swipeleft)=\"switchPage('+1')\" (swiperight)=\"switchPage('-1')\">\n        <div *ngFor=\"let entry of data\" class=\"entryDiv\" [style.background]=\"getBackground(entry)\"\n            [style.border]=\"entry.border\" [ngClass]=\"getClassesForEntry(entry)\" (press)=\"multiSelect(entry, $event)\"\n            (click)=\"onSelect(entry, $event)\" [matBadge]=\"getBadgeValue(entry)\" [matBadgeHidden]=\"isBadgeHidden(entry)\"\n            matBadgeSize=\"small\">\n            {{entry.label}} </div>\n    </div>\n    <div class=\"spacer\" (swipeleft)=\"switchPage('+1')\" (swiperight)=\"switchPage('-1')\"> </div>\n</div>\n\n<div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-icon-button fxFlex=\"none\" [disabled]=\"page === 0\" (click)=\"switchPage('fst')\">\n        <mat-icon>skip_previous</mat-icon>\n    </button>\n    <button mat-icon-button fxFlex=\"none\" [disabled]=\"page === 0\" (click)=\"switchPage('-1')\">\n        <mat-icon>chevron_left</mat-icon>\n    </button>\n    <span fxFlex=\"grow\" style=\"text-align: center;\">{{ 'CONTENT-CONTENTHOLDER.PAGE' | translate}}\n        {{ page + 1 }}/{{ maxPage + 1 }}</span>\n    <button mat-icon-button fxFlex=\"none\" [disabled]=\"page === maxPage\" (click)=\"switchPage('+1')\">\n        <mat-icon>chevron_right</mat-icon>\n    </button>\n    <button mat-icon-button fxFlex=\"none\" [disabled]=\"page === maxPage\" (click)=\"switchPage('lst')\">\n        <mat-icon>skip_next</mat-icon>\n    </button>\n</div>\n\n<div class=\"contextMenuContainer\" #contextMenuContainer [matMenuTriggerFor]=\"contextMenu\">\n    <mat-menu #contextMenu=\"matMenu\">\n        <button mat-menu-item *ngFor=\"let entry of contextMenuEntries\"\n            (click)=\"contextMenuEvent(entry)\">{{entry | translate}}</button>\n    </mat-menu>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/contentholderSemAF/contentholder.component.html":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/contentholderSemAF/contentholder.component.html ***!
  \**************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n\n\n\n<div id=\"mainContent\" class=\"content\" style=\"overflow-y: visible  !important; position: relative; margin-bottom: 40px;\">\n    <svg width=\"100%\" height=\"100%\" style=\"position: absolute; top: 0; left: 0; z-index: 0; pointer-events: none;\">\n        <defs>\n            <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"4\" markerWidth=\"4\" markerHeight=\"4\" orient=\"auto-start-reverse\"><polyline points=\"0,0 6,4, 0,8, 0,0\"></polyline></marker>\n        </defs>\n\n\n\n        <path *ngFor=\"let link of link_visu; index as i\" class=\"svg-arrow\"\n            [attr.d]=\"link\"></path>\n\n\n        \n  \n        <line  stroke=\"black\" />\n    </svg>\n    <div class=\"contentholder\" (swipeleft)=\"switchPage('+1')\" (swiperight)=\"switchPage('-1')\">\n        <div *ngFor=\"let entry of data; index as i\" class=\"entryDiv\"  [style.background]=\"getBackground(entry)\"\n            [id]=\"'entity'+entry.id.toString()\"\n            [style.border]=\"entry.border\" [ngClass]=\"getClassesForEntry(entry)\"\n            (click)=\"onSelect(entry, $event)\">\n            {{entry.label}} </div>\n    </div>\n    <div class=\"spacer\" (swipeleft)=\"switchPage('+1')\" (swiperight)=\"switchPage('-1')\"> </div>\n    <div id=\"links contentholder\">\n        <div *ngFor=\"let link of []\"  class=\"isolink entryDiv\" [style.background]=\"'lightgreen'\"\n            style=\"border: 4px solid lightgreen; display: flex; width: max-content\" (click)=\"onSelectLink(link.id, $event)\"\n            matBadgeSize=\"small\" >\n\n\n            <div class=\"entryDiv\" [style.margin-top]=\"'0'\" [style.background]=\"getBackground(link.from)\" [style.border]=\"link.from.border\"\n                [ngClass]=\"getClassesForEntry(link.from)\">\n                {{link.from.label}} </div> ->\n\n\n            <div class=\"entryDiv\"  [style.margin-top]=\"'0'\" [style.background]=\"getBackground(link.to)\" [style.border]=\"link.to.border\"\n                [ngClass]=\"getClassesForEntry(link.to)\">\n                {{link.to.label}} </div>\n\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n<div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-icon-button fxFlex=\"none\" [disabled]=\"page === 0\" (click)=\"switchPage('fst')\">\n        <mat-icon>skip_previous</mat-icon>\n    </button>\n    <button mat-icon-button fxFlex=\"none\" [disabled]=\"page === 0\" (click)=\"switchPage('-1')\">\n        <mat-icon>chevron_left</mat-icon>\n    </button>\n    <span fxFlex=\"grow\" style=\"text-align: center;\">{{ 'CONTENT-CONTENTHOLDER.PAGE' | translate}}\n        {{ page + 1 }}/{{ maxPage + 1 }}</span>\n    <button mat-icon-button fxFlex=\"none\" [disabled]=\"page === maxPage\" (click)=\"switchPage('+1')\">\n        <mat-icon>chevron_right</mat-icon>\n    </button>\n    <button mat-icon-button fxFlex=\"none\" [disabled]=\"page === maxPage\" (click)=\"switchPage('lst')\">\n        <mat-icon>skip_next</mat-icon>\n    </button>\n</div>\n\n<div class=\"contextMenuContainer\" #contextMenuContainer [matMenuTriggerFor]=\"contextMenu\">\n    <mat-menu #contextMenu=\"matMenu\">\n        <button mat-menu-item *ngFor=\"let entry of contextMenuEntries\" (click)=\"contextMenuEvent(entry)\">{{entry |\n            translate}}</button>\n    </mat-menu>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/document-select/document-select.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/document-select/document-select.component.html ***!
  \*************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<mat-card>\n    <mat-card-title>{{ 'CONTENT-DOCUMENT-SELECT.TITLE' | translate}}</mat-card-title>\n\n\n    <mat-card-content class=\"content\">\n        <div class=\"spinner-container\" *ngIf=\"isWaiting\">\n            <mat-spinner></mat-spinner>\n        </div>\n        <div>\n            <mat-table [dataSource]=\"dataSource\" matSort>\n                <ng-container matColumnDef=\"expandable\">\n                    <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <mat-icon *ngIf=\"element.leaf === false\">storage</mat-icon>\n                    </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"icon\">\n                    <mat-header-cell *matHeaderCellDef>{{'CONTENT-DOCUMENT-SELECT.TABLE-TYPE' | translate}}\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <mat-icon>{{getIconForType(element.type)}}</mat-icon>\n                    </mat-cell>\n                </ng-container>\n\n                <ng-container matColumnDef=\"text\">\n                    <mat-header-cell mat *matHeaderCellDef mat-sort-header>\n                        {{'CONTENT-DOCUMENT-SELECT.TABLE-NAME' | translate}}\n                    </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">{{element.text}}</mat-cell>\n                </ng-container>\n\n                <mat-header-row *matHeaderRowDef=\"displayColumns\" style=\"width: 100%;\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayColumns;\" (click)=\"openRepository(row)\"></mat-row>\n            </mat-table>\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons> </mat-paginator>\n    </mat-card-content>\n\n    <mat-card-actions class=\"actions\">\n        <button mat-raised-button color=\"primary\" *ngIf=\"currRootPath.length > 1\" (click)=\"closeRepository()\">\n            <mat-icon>arrow_back_ios</mat-icon>\n            <span>{{'CONTENT-DOCUMENT-SELECT.BACK' | translate}}</span>\n        </button>\n        <button mat-raised-button color=\"accent\"\n            (click)=\"navigateToDocument(undefined)\">{{'CONTENT-DOCUMENT-SELECT.CANCEL' | translate}}</button>\n    </mat-card-actions>\n</mat-card>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/document/document.component.html":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/document/document.component.html ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<mat-card>\n    <div class=\"spinner-container\" *ngIf=\"isWaiting\">\n        <mat-spinner></mat-spinner>\n    </div>\n\n    <mat-card-content>\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n            <mat-label>{{ 'CONTENT-DOCUMENT.CAS' | translate}}</mat-label>\n            <input matInput disabled=\"true\" style=\"color: black;\"\n                [value]=\"cas ? cas.name : 'CONTENT-DOCUMENT.NO-CAS' | translate\">\n            <mat-icon matSuffix (click)=\"selectDocument()\">folder_open</mat-icon>\n        </mat-form-field>\n\n        <mat-form-field *ngIf=\"cas\" appearance=\"outline\" style=\"width: 100%;\">\n            <mat-label>{{ 'CONTENT-DOCUMENT.VIEW' | translate}}</mat-label>\n            <mat-select [(ngModel)]=\"currentView\" (selectionChange)=\"viewSelected($event)\">\n                <mat-option *ngFor=\"let view of views\" [value]=\"view\">\n                    {{view.label | translate}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field *ngIf=\"currentView\" appearance=\"outline\" style=\"width: 100%;\">\n            <mat-label>{{ 'CONTENT-DOCUMENT.TOOL' | translate}}</mat-label>\n            <mat-select (selectionChange)=\"openTool($event.value)\">\n                <mat-option *ngFor=\"let tool of toolService.toolSelection\" [value]=\"tool\">\n                    {{tool.label | translate}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </mat-card-content>\n</mat-card>\n\n<div *ngIf=\"cas\">\n    <mat-card>\n        <mat-card-title>{{ 'CONTENT-DOCUMENT.TEXT' | translate }}</mat-card-title>\n\n        <mat-card-content>\n            <textarea matInput cdkTextareaAutosize readonly=\"true\" #autosize=\"cdkTextareaAutosize\"\n                cdkAutosizeMinRows=\"3\" style=\"width: 100%;\">{{cas.text}}</textarea>\n        </mat-card-content>\n    </mat-card>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/load-progress/load-progress.component.html":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/load-progress/load-progress.component.html ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<h3>\n    {{'MENU-LOAD-PROGRESS.TITLE' | translate}}\n</h3>\n\n<div>\n    <span class=\"span\">\n        {{ (loadStatus.casId[0]) | translate}}\n    </span>\n    <mat-icon [ngClass]=\"loadStatus.casId[1] == 'check' ? 'green' : 'yellow'\">\n        {{ loadStatus.casId[1]}}\n    </mat-icon>\n</div>\n\n<div>\n    <span class=\"span\">\n        {{ (loadStatus.view[0]) | translate}}\n    </span>\n    <mat-icon [ngClass]=\"loadStatus.view[1] == 'check' ? 'green' : 'yellow'\">\n        {{ loadStatus.view[1]}}\n    </mat-icon>\n</div>\n\n<div>\n    <span class=\"span\">\n        {{ (loadStatus.toolId[0]) | translate}}\n    </span>\n    <mat-icon [ngClass]=\"loadStatus.toolId[1] == 'check' ? 'green' : 'yellow'\">\n        {{ loadStatus.toolId[1]}}\n    </mat-icon>\n</div>\n\n<button mat-raised-button color=\"accent\" (click)=\"close(false)\"\n    style=\"width: 100%\">{{'MENU-LOAD-PROGRESS.CANCEL' | translate}}</button>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/menu-bar/menu-bar.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/menu-bar/menu-bar.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<mat-toolbar *ngIf=\"isVisible\" class=\"mat-elevation-z8\" color=\"primary\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div fxFlex=\"grow\" (click)=\"navigateDefault()\">\n        {{'MENU-BAR.TITLE' | translate}}\n    </div>\n\n    <mat-form-field fxFlex=\"none\" class=\"select\">\n        <mat-select (selectionChange)=\"changeLanguage($event.value.value)\" [(value)]=\"selectedValue\"\n            class=\"selectOption\">\n            <mat-select-trigger *ngIf=\"selectedValue\">\n                {{selectedValue.short}}\n            </mat-select-trigger>\n            <mat-option *ngFor='let lang of languages' [value]=\"lang\" class=\"selectOption\">\n                <img src=\"{{'assets/flags/' + lang.icon}}\" class=\"image\" />\n                <span>{{lang.label}}</span>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <button mat-mini-fab color=\"accent\" fxFlex=\"none\" [matMenuTriggerFor]=\"menu\">\n        <mat-icon>account_circle</mat-icon>\n    </button>\n\n    <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item *ngIf=\"isLoggedIn\" (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon>\n            <span>{{'MENU-BAR.LOGOUT' | translate}}</span>\n        </button>\n        <button mat-menu-item (click)=\"navigateDefault()\">\n            <mat-icon>dashboard</mat-icon>\n            <span>{{'USER-DASHBOARD.TITLE' | translate}}</span>\n        </button>\n    </mat-menu>\n</mat-toolbar>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/snack-bar/snack-bar.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/snack-bar/snack-bar.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"snackContent\">\n    <mat-icon mat-list-icon [ngClass]=\"displayMessage.level\">{{iconMap[displayMessage.level]}}</mat-icon>\n    <p>{{displayMessage.text | translate}}</p>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/tool-bar/tool-bar.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/tool-bar/tool-bar.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<mat-toolbar class=\"mat-elevation-z4 toolbar\" color=\"accent\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-raised-button fxFlex=\"none\" class=\"tools\" color=\"primary\" (click)=\"returnEvent()\">\n        <mat-icon>arrow_back_ios</mat-icon>\n        <span>{{'MENU-TOOL-BAR.BACK' | translate}}</span>\n    </button>\n    <div fxFlex=\"grow\" style=\"overflow-x: hidden; text-align: center;\">\n        <span>{{title | translate}}</span>\n    </div>\n    <button mat-mini-fab fxFlex=\"none\" color=\"primary\" #mainTrigger=\"matMenuTrigger\" [matMenuTriggerFor]=\"toolmenu\">\n        <mat-icon>build</mat-icon>\n    </button>\n\n    <mat-menu #toolmenu=\"matMenu\">\n        <ng-container *ngFor=\"let entry of menu\">\n            <div [ngSwitch]=\"entry.type\">\n                <button mat-menu-item *ngSwitchCase=\"'action'\" (click)=\"menuAction([entry.id])\" fxLayout=\"row\"\n                    fxLayoutAlign=\"center center\">\n                    <span fxFlex=\"grow\">{{entry.name | translate}}</span>\n                    <mat-icon *ngIf=\"entry.icon\" fxFlex=\"none\">{{entry.icon}}</mat-icon>\n                </button>\n\n                <ng-container *ngSwitchCase=\"'listing'\">\n                    <button mat-menu-item [matMenuTriggerFor]=\"submenu\"> {{entry.name | translate}} </button>\n                    <mat-menu #submenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let subentry of entry.list\"\n                            (click)=\"menuAction([subentry.id, entry.id])\" style=\"text-align: right;\">\n                            <mat-icon *ngIf=\"subentry.selected\">label_important</mat-icon>\n                            <span>{{subentry.name | translate}}</span>\n                        </button>\n                    </mat-menu>\n                </ng-container>\n            </div>\n        </ng-container>\n    </mat-menu>\n</mat-toolbar>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/comments/comments.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/comments/comments.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"header\">\n    <h3>{{'POPUP-COMMENTS.TITLE' | translate}}</h3>\n\n    <mat-card>\n        <mat-form-field>\n            <mat-label>{{'POPUP-COMMENTS.NEWCOMMENT' | translate}}</mat-label>\n            <textarea matInput [(ngModel)]=\"commentText\" cdkTextareaAutosize cdkAutosizeMaxRows=\"3\"\n                cdkAutosizeMinRows=\"3\" style=\"width: 100%;\"></textarea>\n        </mat-form-field>\n        <mat-card-actions>\n            <button mat-raised-button style=\"width: 100%;\" color=\"accent\" (tap)=\"submit()\">\n                <span>{{'POPUP-COMMENTS.SEND' | translate}}</span>\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n\n<div class=\"content\">\n    <mat-card *ngFor=\"let entry of displayData\" class=\"entryDiv\">\n        <mat-card-content>\n            <mat-form-field>\n                <mat-label>{{entry.user | translate}}</mat-label>\n                <textarea matInput cdkTextareaAutosize readonly=\"true\" #autosize=\"cdkTextareaAutosize\"\n                    cdkAutosizeMinRows=\"2\" style=\"width: 100%;\" [value]=\"entry.label\"></textarea>\n                <mat-hint>{{entry.create | date:'dd.MM.yyyy HH:mm:ss'}}</mat-hint>\n            </mat-form-field>\n        </mat-card-content>\n    </mat-card>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/filter/filter.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/filter/filter.component.html ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"header\">\n    <h3>{{'POPUP-FILTER.TITLE' | translate}}</h3>\n</div>\n\n<div class=\"content\">\n    <mat-tab-group *ngIf=\"filter.length > 1\">\n        <mat-tab class=\"contentholder\" *ngFor=\"let filters of filter\" [label]=\"filters[0] | translate\">\n            <div *ngFor=\"let entry of filters[1]\" class=\"entryDiv\" [style.background]=\"entry.rgb\"\n                (tap)=\"selected(entry)\" [ngClass]=\"getClassesForEntry(entry)\">\n                {{ entry.name }}\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n\n    <div *ngIf=\"filter.length === 1\">\n        <div *ngFor=\"let entry of filter[0][1]\" class=\"entryDiv\" [style.background]=\"entry.rgb\" (tap)=\"selected(entry)\"\n            [ngClass]=\"getClassesForEntry(entry)\">\n            {{ entry.name }}\n        </div>\n    </div>\n</div>\n\n<div class=\"footer\">\n\n    <button mat-raised-button color=\"primary\" style=\"width: 100%;\"\n        (tap)=\"close()\">{{'POPUP-FILTER.OK' | translate}}</button>\n\n    <button mat-stroked-button color=\"primary\" style=\"width: 100%; margin-top: 2%;\"\n        (tap)=\"unselectAll()\">{{'POPUP-FILTER.UNSELECT' | translate}}</button>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/picker/picker.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/picker/picker.component.html ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n<h1 mat-dialog-title>Welcome user</h1>\n<div mat-dialog-content>\n  <p>What's your favorite animal?</p>\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"data.animal\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCancel()\">No Thanks</button>\n  <button mat-button [mat-dialog-close]=\"data.animal\" \n             cdkFocusInitial>Ok</button>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/sem-af-link-picker/picker.component.html":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/sem-af-link-picker/picker.component.html ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"header\">\n    <div *ngIf=\"lastAnnotations.length\">\n        <h5>{{'POPUP-PICKER.LASTANNOS' | translate}}</h5>\n        <div *ngFor=\"let entry of lastAnnotations\" class=\"entryDiv\" [style.background]=\"entry.rgb\"\n            (tap)=\"selected(entry)\">\n            {{ entry.name }}\n        </div>\n    </div>\n</div>\n\n<mat-tab-group class=\"content\">\n    <mat-tab label=\"Entities\">\n        <div>\n            <h2>Entities</h2>\n            <div class=\"entry-entity\" *ngFor=\"let entry of annotations\">\n                <div (tap)=\"selected(entry)\" class=\"entryDiv entity\" [style.background]=\"entry.rgb\"\n                    [ngClass]=\"highlightAnnotation.has(entry.type) ? 'highlight' : ''\">\n                    <span>{{ entry.name }}</span>\n                    <mat-icon *ngIf=\"highlightAnnotation.get(entry.type)\" style=\"vertical-align: bottom;\">person</mat-icon>\n                </div>\n                <div (tap)=\"selected_after(entry)\" class=\"entryDiv entity-after\" [style.background]=\"entry.rgb\">\n                    <span>&#8631;</span>\n                </div>\n            </div>\n        \n        \n        \n            <ng-container *ngIf=\"index != -1\">\n                <h2>Attributes</h2>\n                <form [formGroup]=\"profileForm\">\n        \n                    <div *ngFor=\"let inp of text_inputs; index as i\">\n                        <mat-form-field [floatLabel]=\"true\" appearance=\"outline\">\n                            <mat-label>{{inp.key}}</mat-label>\n                            <input matInput formControlName={{inp.key}} placeholder=\"Just a placeholder\">\n                            <br />\n                        </mat-form-field>\n                    </div>\n        \n                    <div *ngFor=\"let feature of features_typed\">\n                        <ng-container *ngIf=\"feature[1].type == 0\">\n                            <mat-form-field [floatLabel]=\"true\" appearance=\"outline\">\n                                <mat-label>{{feature[1].display_name}}</mat-label>\n                                <mat-select formControlName={{feature[0]}}>\n                                    <mat-option *ngIf=\"feature[1].not_nullable !== true\" [value]=\"null\"></mat-option>\n                                    <mat-option *ngFor=\"let feature_value of feature[1].select_option\"\n                                        [value]=\"feature_value.value\">\n                                        {{feature_value.display_name}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </ng-container>\n                    </div>\n        \n                    <hr>\n                    <div *ngFor=\"let refe of reference\">\n                        <span>{{refe.display_name}}</span><br>\n                        <ng-container>\n                            <div style=\"width:100%; display: flex\">\n                                <div class=\"item-ref\">\n                                    <button (tap)=\"refe.text=null\" class=\"item-ref-button\" *ngIf=\"refe.text!=null\">\n                                        <span>{{refe.text}} <mat-icon class=\"backspace-icon\" aria-hidden=\"false\"\n                                                aria-label=\"Delete\">backspace</mat-icon></span>\n                                    </button>\n                                </div>\n                                <button style=\"margin-left:5px\" class=\"item-ref-button\" (tap)=\"selected_ref(refe.feature_name)\">\n                                    Select\n                                </button>\n                            </div>\n        \n                        </ng-container>\n        \n                        <hr>\n                    </div>\n        \n        \n                    <div *ngFor=\"let refe of referenceMulti\">\n                        <span>{{refe.display_name}}</span><br>\n                        <ng-container>\n                            <div style=\"width:100%; display: flex\">\n                                <div class=\"item-ref\">\n                                    <ng-container *ngFor=\"let value of refe.values\">\n                                        <button (tap)=\"value.text=null\" class=\"item-ref-button\" *ngIf=\"value.text!=null\">\n                                            <span>{{value.text}} <mat-icon class=\"backspace-icon\" aria-hidden=\"false\"\n                                                    aria-label=\"Delete\">backspace</mat-icon></span>\n                                        </button>\n                                    </ng-container>\n                                </div>\n                                <button style=\"margin-left:5px\" class=\"item-ref-button\" (tap)=\"selected_ref_multi(refe.feature_name)\">\n                                    Select\n                                </button>\n                            </div>\n        \n                        </ng-container>\n        \n                        <hr>\n                    </div>\n        \n        \n        \n        \n                </form>\n            </ng-container>\n        \n        </div>\n        \n    </mat-tab>\n    \n    <mat-tab label=\"Link\">\n        <div>\n        <h2>Add Link Starting here</h2>\n        <div *ngFor=\"let link of links\" class=\"entryDiv\" [style.background]=\"link.rgb\" (tap)=\"add_link(link)\">\n            <span>{{ link.name }}</span>\n        </div>\n    </div>\n\n\n    <h2>Links Starting here</h2>\n\n    <div id=\"links contentholder\">\n        <div *ngFor=\"let link of links_containing_self\"  class=\"isolink entryDiv\" [style.background]=\"'lightgreen'\"\n            style=\"border: 4px solid lightgreen; display: flex; width: max-content\" (click)=\"onSelectLink(link.id, $event)\"\n            matBadgeSize=\"small\" >\n\n\n            <div class=\"entryDiv\" [style.margin-top]=\"'0'\" [style.background]=\"getBackground(link.from)\" [style.border]=\"link.from.border\"\n                >\n                {{link.from.label}} </div> ->\n\n\n            <div class=\"entryDiv\"  [style.margin-top]=\"'0'\" [style.background]=\"getBackground(link.to)\" [style.border]=\"link.to.border\"\n                >\n                {{link.to.label}} </div>\n\n            <button mat-raised-button (click)=\"openDialog()\"[style.background]=\"'orange'\" >Change Attributes</button>\n\n        </div>\n    </div>\n\n    </mat-tab>\n</mat-tab-group>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/sem-af-picker/picker.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/sem-af-picker/picker.component.html ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"header\">\n    <div *ngIf=\"lastAnnotations.length\">\n        <h5>{{'POPUP-PICKER.LASTANNOS' | translate}}</h5>\n        <div *ngFor=\"let entry of lastAnnotations\" class=\"entryDiv\" [style.background]=\"entry.rgb\"\n            (tap)=\"selected(entry)\">\n            {{ entry.name }}\n        </div>\n    </div>\n</div>\n\n<mat-tab-group class=\"content\">\n    <mat-tab label=\"Entities\">\n        <div>\n            <h2>Entities</h2>\n            <div class=\"entry-entity\" *ngFor=\"let entry of annotations\">\n                <div (tap)=\"selected(entry)\" class=\"entryDiv entity\" [style.background]=\"entry.rgb\"\n                    [ngClass]=\"highlightAnnotation.has(entry.type) ? 'highlight' : ''\">\n                    <span>{{ entry.name }}</span>\n                    <mat-icon *ngIf=\"highlightAnnotation.get(entry.type)\" style=\"vertical-align: bottom;\">person\n                    </mat-icon>\n                </div>\n                <div (tap)=\"selected_after(entry)\" class=\"entryDiv entity-after\" [style.background]=\"entry.rgb\">\n                    <span>&#8631;</span>\n                </div>\n            </div>\n\n\n\n            <ng-container *ngIf=\"index != -1\">\n                <h2>Attributes</h2>\n                <form [formGroup]=\"profileForm\">\n\n                    <ng-container *ngFor=\"let feature of feature_visu; index as i\">\n                        <div *ngIf=\"feature.type == ft.Text\">\n                            <mat-form-field [floatLabel]=\"true\" appearance=\"outline\">\n                                <mat-label>{{feature.display_name}}</mat-label>\n                                <input matInput formControlName={{feature.key}} placeholder=\"Just a placeholder\">\n                                <br />\n                            </mat-form-field>\n                        </div>\n\n\n                        <div *ngIf=\"feature.type == ft.Select\">\n                            <mat-form-field [floatLabel]=\"true\" appearance=\"outline\">\n                                <mat-label>{{feature.display_name}}</mat-label>\n                                <mat-select formControlName={{feature.key}}>\n                                    <mat-option *ngIf=\"feature.data.not_nullable !== true\" [value]=\"null\"></mat-option>\n                                    <mat-option *ngFor=\"let feature_value of feature.data\"\n                                        [value]=\"feature_value.value\">\n                                        {{feature_value.display_name}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n\n                        <div *ngIf=\"feature.type == ft.Reference\">\n                            <span>{{feature.display_name}}</span><br>\n                            <ng-container>\n                                <div style=\"width:100%; display: flex\">\n                                    <div class=\"item-ref\">\n                                        <button (tap)=\"feature.data.text=null\" [style.background]=\"feature.data.color\" \n                                        class=\"item-ref-button\" *ngIf=\"feature.data.text!=null\">\n                                            <span>{{feature.data.text}} <mat-icon class=\"backspace-icon\" aria-hidden=\"false\"\n                                                    aria-label=\"Delete\">backspace</mat-icon></span>\n                                        </button>\n                                    </div>\n                                    <button style=\"margin-left:5px\" class=\"item-ref-button\"\n                                        (tap)=\"selected_ref(feature.data.feature_name)\">\n                                        Select\n                                    </button>\n                                </div>\n    \n                            </ng-container>\n                            <br>\n                            \n                        </div>\n\n                        <div *ngIf=\"feature.type == ft.ReferenceMulti\">\n                            <span>{{feature.data.display_name}}</span><br>\n                            <ng-container>\n                                <div style=\"width:100%; display: flex\">\n                                    <div class=\"item-ref\">\n                                        <ng-container *ngFor=\"let value of feature.data.values; index as i\">\n                                            <button (tap)=\"value.text=null\" class=\"item-ref-button\"\n                                                *ngIf=\"value.text!=null\" [style.background]=\"value.color\" >\n                                                <span>{{value.text}} <mat-icon class=\"backspace-icon\" aria-hidden=\"false\"\n                                                        aria-label=\"Delete\">backspace</mat-icon></span>\n                                            </button>\n                                        </ng-container>\n                                    </div>\n                                    <button style=\"margin-left:5px\" class=\"item-ref-button\"\n                                        (tap)=\"selected_ref_multi(feature.data.feature_name)\">\n                                        Select\n                                    </button>\n                                </div>\n    \n                            </ng-container>\n                            <br>\n                        </div>\n\n                    </ng-container>\n\n\n                </form>\n            </ng-container>\n\n        </div>\n\n    </mat-tab>\n\n    <mat-tab label=\"Link\">\n        <div>\n            <h2>Add Link Starting here</h2>\n            <div *ngFor=\"let link of links\" class=\"entryDiv\" [style.background]=\"link.rgb\" (tap)=\"add_link(link)\">\n                <span>{{ link.name }}</span>\n            </div>\n        </div>\n\n\n        <h2>Links Starting here</h2>\n\n        <div id=\"links contentholder\">\n            <div *ngFor=\"let link of links_containing_self\" class=\"isolink entryDiv\" [style.background]=\"'lightgreen'\"\n                style=\"border: 4px solid lightgreen; display: flex; width: max-content\"\n                (click)=\"onSelectLink(link.id, $event)\" matBadgeSize=\"small\">\n\n\n                <div class=\"entryDiv\" [style.margin-top]=\"'0'\" [style.background]=\"getBackground(link.from)\"\n                    [style.border]=\"link.from.border\">\n                    {{link.from.label}} </div> ->\n\n\n                <div class=\"entryDiv\" [style.margin-top]=\"'0'\" [style.background]=\"getBackground(link.to)\"\n                    [style.border]=\"link.to.border\">\n                    {{link.to.label}} </div>\n\n                <button mat-raised-button (click)=\"openDialog()\" [style.background]=\"'orange'\">Change\n                    Attributes</button>\n\n            </div>\n        </div>\n\n    </mat-tab>\n</mat-tab-group>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/knowledge-base/knowledge-base.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/knowledge-base/knowledge-base.component.html ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<app-tool-bar [menu]=\"toolbarMenu\" [title]=\"'TOOL-KNOWLEDGEBASE.TITLE'\" (menuEvent)=\"onMenuSelect($event)\">\n</app-tool-bar>\n\n<app-contentholder class=\"content\" [inData]=\"data\" [pageSize]=\"pageSize\" (selectionChanged)=\"tokenSelect($event)\"\n    (createMultiToken)=\"createMultiToken($event)\" (removeMultiToken)=\"removeMultiToken($event)\" [showLastTapped]=\"true\"\n    [inAnnotations]=\"annoData\" [filters]=\"activeFilters\">\n</app-contentholder>\n\n<div class=\"footer\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <button mat-raised-button color=\"accent\" class=\"fillWidth\" fxFlex=\"none\" (click)=\"createAnnotation()\"\n        [disabled]=\"selectedElement == null\">{{'TOOL-KNOWLEDGEBASE.NEW-ANNO' | translate}}</button>\n\n    <div style=\"overflow-y: auto; width: 100%;\">\n        <table mat-table [dataSource]=\"annotationDataSource\" class=\"mat-elevation-z8 fillWidth\" fxFlex=\"grow\"\n            style=\"overflow-y: auto;\" multiTemplateDataRows>\n            <ng-container matColumnDef=\"icon\">\n                <td mat-cell *matCellDef=\"let element\" [style.border-left]=\"'10px solid ' + element.rgb\">\n                    <img *ngIf=\"element.icon\" [src]=\"element.icon\" style=\"max-height: 32px; max-width: 32px;\" />\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"source\">\n                <td mat-cell *matCellDef=\"let element\">\n                    <span>{{element.source}}</span>\n                    <mat-icon *ngIf=\"element.userAnnotation\" style=\"vertical-align: bottom;\">person</mat-icon>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"expanded\">\n                <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columns.length\">\n                    <div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n                        <img [src]=\"element.extended.image\" *ngIf=\"element.extended.image\"\n                            style=\"max-height: 90%; width: 30%;\" fxFlex=\"none\" />\n                        <div fxFlex=\"grow\">\n                            <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                                <mat-form-field fxFlex=\"grow\">\n                                    <input matInput readonly=\"true\" style=\"text-align: center;\"\n                                        [value]=\"element.extended.label\" />\n                                    <mat-label style=\"padding-left: 3%;\">{{element.identifier}}</mat-label>\n                                </mat-form-field>\n                                <button mat-icon-button fxFlex=\"none\" (tap)=\"removeAnnotation(element)\">\n                                    <mat-icon>delete</mat-icon>\n                                </button>\n                            </div>\n                            <textarea matInput cdkTextareaAutosize readonly=\"true\" #autosize=\"cdkTextareaAutosize\"\n                                cdkAutosizeMinRows=\"3\" cdkAutosizeMaxRows=\"8\"\n                                style=\"width: 96%; padding: 2%;\">{{element.extended.text}}</textarea>\n                        </div>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-row *matRowDef=\"let row; columns: columns\" class=\"example-element-row\"\n                [class.example-element-row]=\"isExpanded(0,row)\" (click)=\"expand(row)\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expanded']; when: isExpanded.bind(this)\"\n                class=\"example-detail-row\">\n            </tr>\n        </table>\n    </div>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.html":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.html ***!
  \****************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"header\">\n    <h3>{{'TOOL-KNOWLEDGEBASE.KNOWLEDGE-PICKER-TITLE' | translate}}</h3>\n\n    <mat-card>\n        <mat-card-content>\n            <mat-form-field>\n                <mat-label>{{'TOOL-KNOWLEDGEBASE.KNOWLEDGE-PICKER-SOURCE' | translate}}</mat-label>\n                <mat-select [(value)]=\"selectedSource\">\n                    <mat-option [value]=\"entry\" *ngFor=\"let entry of searchSources\">\n                        {{entry.label}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>{{'TOOL-KNOWLEDGEBASE.KNOWLEDGE-PICKER-INPUT' | translate}}</mat-label>\n                <input matInput [(ngModel)]=\"input\" cdkTextareaAutosize cdkAutosizeMaxRows=\"3\" cdkAutosizeMinRows=\"3\"\n                    style=\"width: 100%;\" />\n            </mat-form-field>\n        </mat-card-content>\n\n        <mat-card-actions>\n            <button mat-raised-button style=\"width: 100%;\" color=\"accent\" (tap)=\"search()\">\n                <span>{{'TOOL-KNOWLEDGEBASE.KNOWLEDGE-PICKER-SEARCH' | translate}}</span>\n            </button>\n        </mat-card-actions>\n    </mat-card>\n\n    <h4>{{'TOOL-KNOWLEDGEBASE.KNOWLEDGE-PICKER-SEARCHRESULT' | translate}}</h4>\n</div>\n\n<mat-accordion class=\"content\">\n\n    <mat-expansion-panel *ngFor=\"let entry of searchResult\">\n        <mat-expansion-panel-header>\n            <img [src]=\"entry.image\" style=\"max-width: 32px; max-height: 32px;\" />\n            <span>{{entry.label}}</span>\n        </mat-expansion-panel-header>\n        <div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n            <img [src]=\"entry.image\" *ngIf=\"entry.image\" style=\"max-height: 90%; width: 30%;\" fxFlex=\"none\" />\n            <div fxFlex=\"grow\">\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                    <mat-form-field fxFlex=\"grow\">\n                        <input matInput readonly=\"true\" style=\"text-align: center;\" [value]=\"entry.label\" />\n                        <mat-label style=\"padding-left: 3%;\">{{entry.identifier}}</mat-label>\n                    </mat-form-field>\n                </div>\n                <textarea matInput cdkTextareaAutosize readonly=\"true\" #autosize=\"cdkTextareaAutosize\"\n                    cdkAutosizeMinRows=\"3\" cdkAutosizeMaxRows=\"8\"\n                    style=\"width: 96%; padding: 2%;\">{{entry.text}}</textarea>\n            </div>\n        </div>\n        <button mat-raised-button color=\"primary\" style=\"width: 100%;\" (click)=\"select(entry)\">\n            {{'TOOL-KNOWLEDGEBASE.KNOWLEDGE-PICKER-PICK' | translate}}\n        </button>\n    </mat-expansion-panel>\n</mat-accordion>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/quick-anno/quick-anno.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/quick-anno/quick-anno.component.html ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<app-tool-bar [menu]=\"toolbarMenu\" [title]=\"'TOOL-QUICKANNO.TITLE'\" (menuEvent)=\"onMenuSelect($event)\">\n</app-tool-bar>\n\n<app-contentholder class=\"content\" [inData]=\"data\" [pageSize]=\"pageSize\" (selectionChanged)=\"tokenSelect($event)\"\n    (createMultiToken)=\"createMultiToken($event)\" (removeMultiToken)=\"removeMultiToken($event)\"\n    [inAnnotations]=\"mode === 2 ? commentData : annoData\" [filters]=\"mode != 2 ? activeFilters : []\">\n</app-contentholder>\n\n<div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"mode === 0\">\n    <button mat-stroked-button fxFlex=\"grow\" style=\"margin: 1%;\"\n        [style.background]=\"selectedAnnotation && selectedAnnotation.rgb || '#FFFFFF'\"\n        (click)=\"chooseClass()\">{{ selectedAnnotation ? selectedAnnotation.name : ('TOOL-QUICKANNO.NOSELECT' | translate) }}</button>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/sem-af/sem-af.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/sem-af/sem-af.component.html ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<app-tool-bar [menu]=\"toolbarMenu\" [title]=\"'TOOL-SEM-AF.TITLE'\" (menuEvent)=\"onMenuSelect($event)\">\n</app-tool-bar>\n\n<div style=\"font-size: large; text-align: center;\" *ngIf=\"help_text !== null\">\n    <span>{{help_text}}</span>\n</div>\n\n<app-contentholder-semaf class=\"content\" [inData]=\"data\" [links]=\"links\" [pageSize]=\"pageSize\" (selectionChanged)=\"tokenSelect($event)\"\n    (selectionLinkChanged)=\"select_link($event)\"\n    [filters]=\"activeFilters\">\n</app-contentholder-semaf>\n\n<div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"mode === 0\">\n    <button mat-stroked-button fxFlex=\"grow\" style=\"margin: 1%;\"\n        [style.background]=\"selectedAnnotation && selectedAnnotation.rgb || '#FFFFFF'\"\n        >{{ selectedAnnotation ? selectedAnnotation.name : ('TOOL-QUICKANNO.NOSELECT' | translate) }}</button>\n</div>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/user/dashboard/dashboard.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/user/dashboard/dashboard.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<mat-card>\n    <mat-card-title>{{ 'USER-DASHBOARD.TITLE' | translate}}</mat-card-title>\n    <mat-card-subtitle>{{userData.fullName}}</mat-card-subtitle>\n\n    <mat-card-content class=\"content\">\n        <h3>{{ 'USER-DASHBOARD.TASKS' | translate}}</h3>\n\n        <mat-table [dataSource]=\"dataSource\" matSort>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell *matHeaderCellDef fxFlex=\"grow\">{{'USER-DASHBOARD.TABLE-TOOL' | translate}}\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\" (click)=\"openTask(element.id)\" fxFlex=\"grow\">\n                    {{element.toolLabel | translate}}\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"done\">\n                <mat-header-cell *matHeaderCellDef fxFlex=\"none\">{{'USER-DASHBOARD.TABLE-DONE' | translate}}\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\" fxFlex=\"none\">\n                    <button mat-icon-button color=\"primary\" (click)=\"markTaskAsDone(element.id)\">\n                        <mat-icon>done_outline</mat-icon>\n                    </button>\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"displayColumns\" style=\"width: 100%;\" fxFlexLayout=\"center center\">\n            </mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: displayColumns;\" fxFlexLayout=\"center center\"></mat-row>\n        </mat-table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons> </mat-paginator>\n\n    </mat-card-content>\n\n    <mat-card-actions class=\"actions\">\n        <button mat-raised-button color=\"accent\"\n            (click)=\"navigateToDocument()\">{{'USER-DASHBOARD.OPEN-DOCUMENTS' | translate}}</button>\n    </mat-card-actions>\n</mat-card>");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/user/login/login.component.html":
/*!**************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/user/login/login.component.html ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<form #loginForm=\"ngForm\" class=\"form\" (ngSubmit)=\"login(false)\" id=\"loginForm\">\n    <mat-card>\n        <mat-card-title>{{ 'USER-LOGIN.TITLE' | translate}}</mat-card-title>\n        <mat-card-content class=\"content\">\n            <div class=\"spinner-container\" *ngIf=\"isWaiting\">\n                <mat-spinner></mat-spinner>\n            </div>\n\n            <mat-form-field class=\"formfield\">\n                <input matInput ngModel style=\"width: 100%\" required placeholder=\"{{'USER-LOGIN.USERNAME' | translate}}\"\n                    [(ngModel)]=\"username\" name=\"username\">\n            </mat-form-field>\n            <mat-form-field class=\"formfield\">\n                <input matInput ngModel style=\"width: 100%\" required type=\"password\"\n                    placeholder=\"{{'USER-LOGIN.PASSWORD' | translate}}\" [(ngModel)]=\"password\" name=\"password\">\n            </mat-form-field>\n        </mat-card-content>\n        <mat-card-actions align=\"end\" class=\"actions\">\n            <button mat-raised-button type=\"submit\" form=\"loginForm\" [disabled]=\"loginForm.form.invalid\"\n                color=\"primary\">\n                {{ 'USER-LOGIN.LOGIN' | translate}} </button>\n            <button mat-raised-button type=\"button\" (click)=\"loginAsPublic()\" form=\"loginForm\" color=\"accent\">\n                {{ 'USER-LOGIN.GUEST' | translate}} </button>\n        </mat-card-actions>\n    </mat-card>\n</form>");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _components_user_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/user/dashboard/dashboard.component */ "./src/app/components/user/dashboard/dashboard.component.ts");
/* harmony import */ var _components_user_login_login_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/user/login/login.component */ "./src/app/components/user/login/login.component.ts");
/* harmony import */ var _guards_login_guard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./guards/login.guard */ "./src/app/guards/login.guard.ts");
/* harmony import */ var _guards_auth_guard__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./guards/auth.guard */ "./src/app/guards/auth.guard.ts");
/* harmony import */ var _components_content_document_select_document_select_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/content/document-select/document-select.component */ "./src/app/components/content/document-select/document-select.component.ts");
/* harmony import */ var _components_content_document_document_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/content/document/document.component */ "./src/app/components/content/document/document.component.ts");
/* harmony import */ var _components_tools_quick_anno_quick_anno_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/tools/quick-anno/quick-anno.component */ "./src/app/components/tools/quick-anno/quick-anno.component.ts");
/* harmony import */ var _components_tools_knowledge_base_knowledge_base_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/tools/knowledge-base/knowledge-base.component */ "./src/app/components/tools/knowledge-base/knowledge-base.component.ts");
/* harmony import */ var _guards_tool_guard__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./guards/tool.guard */ "./src/app/guards/tool.guard.ts");
/* harmony import */ var _components_tools_sem_af_sem_af_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/tools/sem-af/sem-af.component */ "./src/app/components/tools/sem-af/sem-af.component.ts");













const routes = [
    {
        path: 'login',
        canActivate: [_guards_login_guard__WEBPACK_IMPORTED_MODULE_5__["LoginGuard"]],
        component: _components_user_login_login_component__WEBPACK_IMPORTED_MODULE_4__["LoginComponent"],
    },
    {
        path: 'dashboard',
        canActivate: [_guards_auth_guard__WEBPACK_IMPORTED_MODULE_6__["AuthGuard"]],
        component: _components_user_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_3__["DashboardComponent"],
    },
    {
        path: 'document',
        canActivate: [_guards_auth_guard__WEBPACK_IMPORTED_MODULE_6__["AuthGuard"]],
        component: _components_content_document_document_component__WEBPACK_IMPORTED_MODULE_8__["DocumentComponent"],
    },
    {
        path: 'quickanno',
        canActivate: [_guards_tool_guard__WEBPACK_IMPORTED_MODULE_11__["ToolGuard"]],
        component: _components_tools_quick_anno_quick_anno_component__WEBPACK_IMPORTED_MODULE_9__["QuickAnnoComponent"],
    },
    {
        path: 'knowledgebase',
        canActivate: [_guards_tool_guard__WEBPACK_IMPORTED_MODULE_11__["ToolGuard"]],
        component: _components_tools_knowledge_base_knowledge_base_component__WEBPACK_IMPORTED_MODULE_10__["KnowledgeBaseComponent"],
    },
    {
        path: 'selectdocument',
        canActivate: [_guards_auth_guard__WEBPACK_IMPORTED_MODULE_6__["AuthGuard"]],
        component: _components_content_document_select_document_select_component__WEBPACK_IMPORTED_MODULE_7__["DocumentSelectComponent"],
    },
    {
        path: 'sem-af',
        canActivate: [_guards_tool_guard__WEBPACK_IMPORTED_MODULE_11__["ToolGuard"]],
        component: _components_tools_sem_af_sem_af_component__WEBPACK_IMPORTED_MODULE_12__["SemAF"],
    },
    {
        path: '**',
        redirectTo: 'dashboard'
    },
];
let AppRoutingModule = class AppRoutingModule {
};
AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], AppRoutingModule);



/***/ }),

/***/ "./src/app/app.component.scss":
/*!************************************!*\
  !*** ./src/app/app.component.scss ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".app {\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-start;\n  height: 100%;\n}\n\n.toolbar {\n  width: 100%;\n}\n\n.content {\n  overflow-y: scroll;\n  overflow-x: hidden;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxpQkFBQTtFQUNBLDJCQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFwcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4udG9vbGJhciB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5jb250ZW50IHtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xufSIsIi5hcHAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi50b29sYmFyIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jb250ZW50IHtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG59Il19 */");

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/user.service */ "./src/app/services/user.service.ts");



let AppComponent = class AppComponent {
    constructor(userService) {
        this.userService = userService;
        this.title = 'textanno';
        this.isToolbarVisible = true;
    }
    ngOnInit() {
        this.userService.tryLogginWithCookie();
    }
};
AppComponent.ctorParameters = () => [
    { type: _services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"] }
];
AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/app.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./app.component.scss */ "./src/app/app.component.scss")).default]
    })
], AppComponent);



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm2015/animations.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/flex-layout */ "./node_modules/@angular/flex-layout/esm2015/flex-layout.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _components_menu_menu_bar_menu_bar_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/menu/menu-bar/menu-bar.component */ "./src/app/components/menu/menu-bar/menu-bar.component.ts");
/* harmony import */ var _components_content_contentholder_contentholder_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/content/contentholder/contentholder.component */ "./src/app/components/content/contentholder/contentholder.component.ts");
/* harmony import */ var _components_content_contentholderSemAF_contentholder_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/content/contentholderSemAF/contentholder.component */ "./src/app/components/content/contentholderSemAF/contentholder.component.ts");
/* harmony import */ var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-cookie-service */ "./node_modules/ngx-cookie-service/ngx-cookie-service.js");
/* harmony import */ var _components_user_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/user/dashboard/dashboard.component */ "./src/app/components/user/dashboard/dashboard.component.ts");
/* harmony import */ var _modules_material_material_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/material/material.module */ "./src/app/modules/material/material.module.ts");
/* harmony import */ var _modules_language_language_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./modules/language/language.module */ "./src/app/modules/language/language.module.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _components_user_login_login_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/user/login/login.component */ "./src/app/components/user/login/login.component.ts");
/* harmony import */ var _components_menu_snack_bar_snack_bar_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/menu/snack-bar/snack-bar.component */ "./src/app/components/menu/snack-bar/snack-bar.component.ts");
/* harmony import */ var _components_content_document_select_document_select_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/content/document-select/document-select.component */ "./src/app/components/content/document-select/document-select.component.ts");
/* harmony import */ var _components_content_document_document_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/content/document/document.component */ "./src/app/components/content/document/document.component.ts");
/* harmony import */ var _components_tools_quick_anno_quick_anno_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/tools/quick-anno/quick-anno.component */ "./src/app/components/tools/quick-anno/quick-anno.component.ts");
/* harmony import */ var _components_menu_load_progress_load_progress_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./components/menu/load-progress/load-progress.component */ "./src/app/components/menu/load-progress/load-progress.component.ts");
/* harmony import */ var _components_popups_picker_picker_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/popups/picker/picker.component */ "./src/app/components/popups/picker/picker.component.ts");
/* harmony import */ var _hammerConfig__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./hammerConfig */ "./src/app/hammerConfig.ts");
/* harmony import */ var _components_popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./components/popups/filter/filter.component */ "./src/app/components/popups/filter/filter.component.ts");
/* harmony import */ var _components_tools_knowledge_base_knowledge_base_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./components/tools/knowledge-base/knowledge-base.component */ "./src/app/components/tools/knowledge-base/knowledge-base.component.ts");
/* harmony import */ var _components_popups_comments_comments_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/popups/comments/comments.component */ "./src/app/components/popups/comments/comments.component.ts");
/* harmony import */ var _components_tools_knowledge_base_knowledge_picker_knowledge_picker_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/tools/knowledge-base/knowledge-picker/knowledge-picker.component */ "./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.ts");
/* harmony import */ var _components_menu_tool_bar_tool_bar_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/menu/tool-bar/tool-bar.component */ "./src/app/components/menu/tool-bar/tool-bar.component.ts");
/* harmony import */ var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/material/tabs */ "./node_modules/@angular/material/esm2015/tabs.js");
/* harmony import */ var _components_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/popups/sem-af-picker/picker.component */ "./src/app/components/popups/sem-af-picker/picker.component.ts");
/* harmony import */ var _components_popups_sem_af_link_picker_picker_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/popups/sem-af-link-picker/picker.component */ "./src/app/components/popups/sem-af-link-picker/picker.component.ts");
/* harmony import */ var _components_tools_sem_af_sem_af_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./components/tools/sem-af/sem-af.component */ "./src/app/components/tools/sem-af/sem-af.component.ts");


































let AppModule = class AppModule {
};
AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        declarations: [
            _app_component__WEBPACK_IMPORTED_MODULE_7__["AppComponent"],
            _components_menu_menu_bar_menu_bar_component__WEBPACK_IMPORTED_MODULE_8__["MenuBarComponent"],
            _components_content_contentholder_contentholder_component__WEBPACK_IMPORTED_MODULE_9__["ContentholderComponent"],
            _components_content_contentholderSemAF_contentholder_component__WEBPACK_IMPORTED_MODULE_10__["ContentholderComponentSemAF"],
            _components_user_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_12__["DashboardComponent"],
            _components_user_login_login_component__WEBPACK_IMPORTED_MODULE_16__["LoginComponent"],
            _components_menu_snack_bar_snack_bar_component__WEBPACK_IMPORTED_MODULE_17__["SnackBarComponent"],
            _components_content_document_select_document_select_component__WEBPACK_IMPORTED_MODULE_18__["DocumentSelectComponent"],
            _components_content_document_document_component__WEBPACK_IMPORTED_MODULE_19__["DocumentComponent"],
            _components_tools_quick_anno_quick_anno_component__WEBPACK_IMPORTED_MODULE_20__["QuickAnnoComponent"],
            _components_menu_load_progress_load_progress_component__WEBPACK_IMPORTED_MODULE_21__["LoadProgressComponent"],
            _components_popups_picker_picker_component__WEBPACK_IMPORTED_MODULE_22__["PickerComponent"],
            _components_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_30__["PickerComponent"],
            _components_popups_sem_af_link_picker_picker_component__WEBPACK_IMPORTED_MODULE_31__["PickerComponent"],
            _components_popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_24__["FilterComponent"],
            _components_tools_knowledge_base_knowledge_base_component__WEBPACK_IMPORTED_MODULE_25__["KnowledgeBaseComponent"],
            _components_popups_comments_comments_component__WEBPACK_IMPORTED_MODULE_26__["CommentsComponent"],
            _components_tools_knowledge_base_knowledge_picker_knowledge_picker_component__WEBPACK_IMPORTED_MODULE_27__["KnowledgePickerComponent"],
            _components_menu_tool_bar_tool_bar_component__WEBPACK_IMPORTED_MODULE_28__["ToolBarComponent"],
            _components_tools_sem_af_sem_af_component__WEBPACK_IMPORTED_MODULE_32__["SemAF"]
        ],
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_15__["AppRoutingModule"],
            _modules_material_material_module__WEBPACK_IMPORTED_MODULE_13__["MaterialModule"],
            _modules_language_language_module__WEBPACK_IMPORTED_MODULE_14__["LanguageModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClientModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClientJsonpModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"],
            _angular_material_tabs__WEBPACK_IMPORTED_MODULE_29__["MatTabsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["ReactiveFormsModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_3__["BrowserAnimationsModule"],
            _angular_flex_layout__WEBPACK_IMPORTED_MODULE_4__["FlexLayoutModule"],
        ],
        providers: [
            ngx_cookie_service__WEBPACK_IMPORTED_MODULE_11__["CookieService"], {
                provide: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["HAMMER_GESTURE_CONFIG"],
                useClass: _hammerConfig__WEBPACK_IMPORTED_MODULE_23__["HammerConfig"]
            }
        ],
        entryComponents: [
            _components_menu_snack_bar_snack_bar_component__WEBPACK_IMPORTED_MODULE_17__["SnackBarComponent"],
            _components_user_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_12__["DashboardComponent"],
            _components_menu_load_progress_load_progress_component__WEBPACK_IMPORTED_MODULE_21__["LoadProgressComponent"],
            _components_popups_picker_picker_component__WEBPACK_IMPORTED_MODULE_22__["PickerComponent"],
            _components_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_30__["PickerComponent"],
            _components_popups_sem_af_link_picker_picker_component__WEBPACK_IMPORTED_MODULE_31__["PickerComponent"],
            _components_popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_24__["FilterComponent"],
            _components_popups_comments_comments_component__WEBPACK_IMPORTED_MODULE_26__["CommentsComponent"],
            _components_tools_knowledge_base_knowledge_picker_knowledge_picker_component__WEBPACK_IMPORTED_MODULE_27__["KnowledgePickerComponent"],
        ],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_7__["AppComponent"]]
    })
], AppModule);



/***/ }),

/***/ "./src/app/components/content/contentholder/contentholder.component.scss":
/*!*******************************************************************************!*\
  !*** ./src/app/components/content/contentholder/contentholder.component.scss ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".contentholder {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  padding: 0.5em;\n  z-index: 1;\n}\n\n.spacer {\n  flex-grow: 1;\n  z-index: 1;\n}\n\n@-webkit-keyframes wobble {\n  from {\n    transform: rotate(1deg);\n  }\n  to {\n    transform: rotate(-1deg);\n  }\n}\n\n@keyframes wobble {\n  from {\n    transform: rotate(1deg);\n  }\n  to {\n    transform: rotate(-1deg);\n  }\n}\n\n.selected {\n  border-radius: 38%;\n  padding: 0.2em;\n  border: 0.2em solid black;\n}\n\n.longpress {\n  -webkit-animation-name: wobble;\n          animation-name: wobble;\n  -webkit-animation-duration: 0.2s;\n          animation-duration: 0.2s;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-direction: alternate;\n          animation-direction: alternate;\n}\n\n.unselected {\n  padding: 0.4em;\n}\n\n.filtered {\n  opacity: 0.6;\n}\n\n.entryDiv {\n  border-radius: 38%;\n  margin: 0.2em;\n  text-align: center;\n  box-shadow: 0 2px 5px 0 rgba(52, 47, 51, 0.63);\n  z-index: 2;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  z-index: 0;\n}\n\n.contextMenuContainer {\n  position: absolute;\n}\n\n.footer {\n  flex-grow: 0;\n  flex-shrink: 0;\n  color: #ffffff;\n  background-color: #00618F;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL2NvbnRlbnQvY29udGVudGhvbGRlci9jb250ZW50aG9sZGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2NvbnRlbnQvY29udGVudGhvbGRlci9jb250ZW50aG9sZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLFVBQUE7QUNDSjs7QURFQTtFQUNJLFlBQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSTtJQUFNLHVCQUFBO0VDRVI7RURERTtJQUFJLHdCQUFBO0VDSU47QUFDRjs7QURQQTtFQUNJO0lBQU0sdUJBQUE7RUNFUjtFRERFO0lBQUksd0JBQUE7RUNJTjtBQUNGOztBREZBO0VBQ0ksa0JBQUE7RUFDQSxjQUFBO0VBQ0EseUJBQUE7QUNJSjs7QUREQTtFQUNJLDhCQUFBO1VBQUEsc0JBQUE7RUFDQSxnQ0FBQTtVQUFBLHdCQUFBO0VBQ0EsMkNBQUE7VUFBQSxtQ0FBQTtFQUNBLHNDQUFBO1VBQUEsOEJBQUE7QUNJSjs7QUREQTtFQUNJLGNBQUE7QUNJSjs7QUREQTtFQUNJLFlBQUE7QUNJSjs7QUREQTtFQUNJLGtCQUFBO0VBR0EsYUFBQTtFQUlBLGtCQUFBO0VBQ0EsOENBQUE7RUFDQSxVQUFBO0FDREo7O0FESUE7RUFDSSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtFQUNBLFVBQUE7QUNESjs7QURJQTtFQUNJLGtCQUFBO0FDREo7O0FESUE7RUFDSSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7RUFDQSx5QkFBQTtBQ0RKOztBRElBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtBQ0RKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb250ZW50L2NvbnRlbnRob2xkZXIvY29udGVudGhvbGRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50aG9sZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBwYWRkaW5nOiAwLjVlbTtcbiAgICB6LWluZGV4OiAxO1xufVxuXG4uc3BhY2VyIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgei1pbmRleDogMTtcbn1cblxuQGtleWZyYW1lcyB3b2JibGUge1xuICAgIGZyb20ge3RyYW5zZm9ybTogcm90YXRlKDFkZWcpO31cbiAgICB0byB7dHJhbnNmb3JtOiByb3RhdGUoLTFkZWcpO31cbn1cblxuLnNlbGVjdGVkIHtcbiAgICBib3JkZXItcmFkaXVzOiAzOCU7XG4gICAgcGFkZGluZzogMC4yZW07XG4gICAgYm9yZGVyOiAwLjJlbSBzb2xpZCBibGFjaztcbn1cblxuLmxvbmdwcmVzcyB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IHdvYmJsZTtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuMnM7XG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XG4gICAgYW5pbWF0aW9uLWRpcmVjdGlvbjogYWx0ZXJuYXRlO1xufVxuXG4udW5zZWxlY3RlZCB7XG4gICAgcGFkZGluZzogMC40ZW1cbn1cblxuLmZpbHRlcmVkIHtcbiAgICBvcGFjaXR5OiAwLjY7XG59XG5cbi5lbnRyeURpdiB7XG4gICAgYm9yZGVyLXJhZGl1czogMzglO1xuICAgIC8vc2V0IHRoaXMgc21hbGxlciBmb3IgbGVzcyByb3VuZFxuICAgIC8vYm9yZGVyLXJhZGl1czoxNSU7XG4gICAgbWFyZ2luOiAwLjJlbTtcbiAgICAvL2NoYW5nZSBtYXJnaW4gZm9yIG1vcmUgc3BhY2VcbiAgICAvL21hcmdpbjogMCAxMHB4O1xuICAgIC8vbWFyZ2luLXRvcDogMWNtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3gtc2hhZG93OiAwIDJweCA1cHggMCByZ2JhKDUyLDQ3LDUxLC42Myk7XG4gICAgei1pbmRleDogMjtcbn1cblxuLmNvbnRlbnQge1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgZmxleC1ncm93OiAxO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIHotaW5kZXg6IDA7XG59XG5cbi5jb250ZXh0TWVudUNvbnRhaW5lcntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5mb290ZXIge1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBmbGV4LXNocmluazogMDtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA2MThGO1xufVxuXG46aG9zdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGhlaWdodDogMTAwJTtcbn0iLCIuY29udGVudGhvbGRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIHBhZGRpbmc6IDAuNWVtO1xuICB6LWluZGV4OiAxO1xufVxuXG4uc3BhY2VyIHtcbiAgZmxleC1ncm93OiAxO1xuICB6LWluZGV4OiAxO1xufVxuXG5Aa2V5ZnJhbWVzIHdvYmJsZSB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDFkZWcpO1xuICB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMWRlZyk7XG4gIH1cbn1cbi5zZWxlY3RlZCB7XG4gIGJvcmRlci1yYWRpdXM6IDM4JTtcbiAgcGFkZGluZzogMC4yZW07XG4gIGJvcmRlcjogMC4yZW0gc29saWQgYmxhY2s7XG59XG5cbi5sb25ncHJlc3Mge1xuICBhbmltYXRpb24tbmFtZTogd29iYmxlO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuMnM7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlO1xuICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7XG59XG5cbi51bnNlbGVjdGVkIHtcbiAgcGFkZGluZzogMC40ZW07XG59XG5cbi5maWx0ZXJlZCB7XG4gIG9wYWNpdHk6IDAuNjtcbn1cblxuLmVudHJ5RGl2IHtcbiAgYm9yZGVyLXJhZGl1czogMzglO1xuICBtYXJnaW46IDAuMmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoNTIsIDQ3LCA1MSwgMC42Myk7XG4gIHotaW5kZXg6IDI7XG59XG5cbi5jb250ZW50IHtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgZmxleC1ncm93OiAxO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICB6LWluZGV4OiAwO1xufVxuXG4uY29udGV4dE1lbnVDb250YWluZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5mb290ZXIge1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjE4Rjtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/content/contentholder/contentholder.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/components/content/contentholder/contentholder.component.ts ***!
  \*****************************************************************************/
/*! exports provided: ContentholderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentholderComponent", function() { return ContentholderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/menu */ "./node_modules/@angular/material/esm2015/menu.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");




var eContextMenu;
(function (eContextMenu) {
    eContextMenu["DeleteMulti"] = "CONTENT-CONTENTHOLDER.DELETE-MULTI";
})(eContextMenu || (eContextMenu = {}));
let ContentholderComponent = 
/**
 * Komponente für die tokenweise Darstellung der Texte
 */
class ContentholderComponent {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        this.data = [];
        this.currentSelected = undefined;
        this.lastTapped = undefined;
        this.pageSizes = [50, 100, 150];
        this.maxPage = 0;
        this.contextMenuEntries = [];
        this.longpress = false;
        this.inAnnotations = {};
        this.pageSize = 50;
        this.page = 0;
        this.filters = [];
        this.showLastTapped = false;
        this.selectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.createMultiToken = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.removeMultiToken = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnChanges(changes) {
        if (changes) {
            if (changes.pageSize != null || changes.page != null || changes.inData != null) {
                if (changes.inData != null || changes.pageSize != null) {
                    this.maxPage = Math.floor(this.inData.length / this.pageSize);
                }
                this.pageChanged();
            }
            if (changes.filters) {
                this.filterSet = new Set(this.filters);
            }
        }
    }
    /**
     * Händelt die Auswahl eines Tokens
     */
    onSelect(entry, event) {
        event.preventDefault();
        this.preventDefault(event);
        if (this.longpress) {
            this.longpress = false;
            return;
        }
        if (this.currentSelected) {
            if (this.currentSelected === entry.id) {
                this.currentSelected = undefined;
                return;
            }
            this.createMultiToken.emit([this.currentSelected, entry.id]);
            this.currentSelected = undefined;
        }
        else {
            this.selectionChanged.emit(entry);
            this.lastTapped = entry.id;
        }
    }
    /**
     * Verhindert das ungewollte weiterlaufen eines Mausevents
     */
    preventDefault(event) {
        if (!event) {
            return;
        }
        event.preventDefault();
        event.stopImmediatePropagation();
        event.stopPropagation();
    }
    /**
     * Ändert die Anzahl an Token, die pro Seite dargestellt werden
     */
    sizeChange(size) {
        if (this.pageSize !== size) {
            this.pageSize = size;
            this.maxPage = Math.floor(this.inData.length / this.pageSize);
            this.pageChanged();
        }
    }
    /**
     * Ändert die momentan ausgewählte Seite des Textes
     */
    switchPage(dir) {
        switch (dir) {
            case 'fst':
                this.page = 0;
                break;
            case '+1':
                ++this.page;
                break;
            case '-1':
                --this.page;
                break;
            case 'lst':
                this.page = this.maxPage;
                break;
        }
        this.pageChanged();
    }
    /**
     * Markiert ein Token als "longpress"-gewählt
     */
    multiSelect(entry, event) {
        this.longpress = true;
        event.preventDefault();
        this.preventDefault(event.srcEvent);
        this.lastTapped = undefined;
        this.selectionChanged.emit(undefined);
        this.currentSelected = entry.id;
        this.contextMenuRef.nativeElement.style.left = event.center.x + 'px';
        this.contextMenuRef.nativeElement.style.top = event.center.y + 'px';
        this.contextMenuEntries = [];
        const childs = entry.data.features.children;
        if (childs && Array.isArray(childs) && childs.length) {
            this.contextMenuEntries.push(eContextMenu.DeleteMulti);
        }
        if (this.contextMenuEntries.length) {
            this.contextMenuTrigger.openMenu();
        }
    }
    /**
     * Wird aufgerufen sollte ein Kontextmenü Eintrag gewählt werden
     */
    contextMenuEvent(event) {
        this.contextMenuTrigger.closeMenu();
        switch (event) {
            case eContextMenu.DeleteMulti:
                this.removeMultiToken.emit(this.currentSelected);
                this.currentSelected = undefined;
                break;
        }
    }
    /**
     * Bestimmt welche CSS Klassen für das Token gelten sollen
     */
    getClassesForEntry(entry) {
        let retval = '';
        const annoData = this.inAnnotations[entry.id];
        if (this.filterSet.size && (!annoData || !Object.keys(annoData.annotations).some((a) => this.filterSet.has(a)))) {
            retval += 'filtered ';
        }
        if (entry.id === this.currentSelected) {
            retval += 'selected longpress ';
        }
        else if (this.showLastTapped && entry.id === this.lastTapped) {
            retval += 'selected ';
        }
        else {
            retval += 'unselected ';
        }
        return retval;
    }
    /**
     * Gibt einen Farbwert oder Style für den Background zurück
     */
    getBackground(entry) {
        const rgbs = this.inAnnotations[entry.id] && this.inAnnotations[entry.id].rgb || [];
        if (rgbs.length < 2) {
            // Fall: es gibt (k)einen Farbwert durch Annotationen
            return rgbs[0] || '#ffffff';
        }
        // Fall: es gibt mehr als zwei Farbwerte durch Annotationen
        let retval = 'linear-gradient(45deg, ';
        const percent = 100 / rgbs.length;
        for (const [idx, color] of rgbs.entries()) {
            retval += color + ` ${percent * idx}%, ` + color + ` ${percent * (idx + 1)}%`;
            retval += (idx !== rgbs.length - 1 ? ', ' : ')');
        }
        return this.sanitizer.bypassSecurityTrustStyle(retval);
    }
    /**
     * Ob die Badge des Tokens unsichtbar sein soll
     */
    isBadgeHidden(entry) {
        if (!this.inAnnotations[entry.id]) {
            return true;
        }
        return !this.inAnnotations[entry.id].badge;
    }
    /**
     * Gibt den Zahlenwert für die Anzeige innerhalb der Badge zurück
     */
    getBadgeValue(entry) {
        if (!this.inAnnotations[entry.id]) {
            return 0;
        }
        return this.inAnnotations[entry.id].badge || 0;
    }
    pageChanged() {
        if (this.page < 0) {
            this.page = 0;
        }
        if (this.page > this.maxPage) {
            this.page = this.maxPage;
        }
        this.data = this.inData.slice(this.page * this.pageSize, (this.page + 1) * this.pageSize);
    }
};
ContentholderComponent.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["DomSanitizer"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('contextMenuContainer', { static: true })
], ContentholderComponent.prototype, "contextMenuRef", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_menu__WEBPACK_IMPORTED_MODULE_2__["MatMenuTrigger"], { static: true })
], ContentholderComponent.prototype, "contextMenuTrigger", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponent.prototype, "inData", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponent.prototype, "inAnnotations", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponent.prototype, "pageSize", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponent.prototype, "page", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponent.prototype, "filters", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponent.prototype, "showLastTapped", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ContentholderComponent.prototype, "selectionChanged", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ContentholderComponent.prototype, "createMultiToken", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ContentholderComponent.prototype, "removeMultiToken", void 0);
ContentholderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-contentholder',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./contentholder.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/contentholder/contentholder.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./contentholder.component.scss */ "./src/app/components/content/contentholder/contentholder.component.scss")).default]
    })
    /**
     * Komponente für die tokenweise Darstellung der Texte
     */
], ContentholderComponent);



/***/ }),

/***/ "./src/app/components/content/contentholderSemAF/contentholder.component.scss":
/*!************************************************************************************!*\
  !*** ./src/app/components/content/contentholderSemAF/contentholder.component.scss ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".contentholder {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  padding: 0.5em;\n  z-index: 1;\n}\n\n.spacer {\n  flex-grow: 1;\n  z-index: 1;\n}\n\n@-webkit-keyframes wobble {\n  from {\n    transform: rotate(1deg);\n  }\n  to {\n    transform: rotate(-1deg);\n  }\n}\n\n@keyframes wobble {\n  from {\n    transform: rotate(1deg);\n  }\n  to {\n    transform: rotate(-1deg);\n  }\n}\n\n.selected {\n  border-radius: 38%;\n  padding: 0.2em;\n  border: 0.2em solid black;\n}\n\n.longpress {\n  -webkit-animation-name: wobble;\n          animation-name: wobble;\n  -webkit-animation-duration: 0.2s;\n          animation-duration: 0.2s;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-direction: alternate;\n          animation-direction: alternate;\n}\n\n.unselected {\n  padding: 0.4em;\n}\n\n.filtered {\n  opacity: 0.6;\n}\n\n.entryDiv {\n  border-radius: 15%;\n  margin: 0 10px;\n  margin-top: 2cm;\n  text-align: center;\n  box-shadow: 0 2px 5px 0 rgba(52, 47, 51, 0.63);\n  z-index: 2;\n}\n\n.content {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  overflow-y: visible;\n  z-index: 0;\n}\n\n.contextMenuContainer {\n  position: absolute;\n}\n\n.footer {\n  flex-grow: 0;\n  flex-shrink: 0;\n  color: #ffffff;\n  background-color: #00618F;\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.svg-arrow {\n  stroke-width: 4;\n  stroke: #BBB;\n  fill: none;\n  marker-end: url(#arrow);\n  stroke-opacity: 0.6;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL2NvbnRlbnQvY29udGVudGhvbGRlclNlbUFGL2NvbnRlbnRob2xkZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvY29udGVudC9jb250ZW50aG9sZGVyU2VtQUYvY29udGVudGhvbGRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsVUFBQTtBQ0NKOztBREVBO0VBQ0k7SUFBTSx1QkFBQTtFQ0VSO0VEREU7SUFBSSx3QkFBQTtFQ0lOO0FBQ0Y7O0FEUEE7RUFDSTtJQUFNLHVCQUFBO0VDRVI7RURERTtJQUFJLHdCQUFBO0VDSU47QUFDRjs7QURGQTtFQUNJLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLHlCQUFBO0FDSUo7O0FEREE7RUFDSSw4QkFBQTtVQUFBLHNCQUFBO0VBQ0EsZ0NBQUE7VUFBQSx3QkFBQTtFQUNBLDJDQUFBO1VBQUEsbUNBQUE7RUFDQSxzQ0FBQTtVQUFBLDhCQUFBO0FDSUo7O0FEREE7RUFDSSxjQUFBO0FDSUo7O0FEREE7RUFDSSxZQUFBO0FDSUo7O0FEREE7RUFHSSxrQkFBQTtFQUdBLGNBQUE7RUFDQSxlQUFBO0VBRUEsa0JBQUE7RUFDQSw4Q0FBQTtFQUNBLFVBQUE7QUNESjs7QURJQTtFQUNJLFlBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFVBQUE7QUNESjs7QURJQTtFQUNJLGtCQUFBO0FDREo7O0FESUE7RUFDSSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7QUNESjs7QURJQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7QUNESjs7QURJQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udGVudC9jb250ZW50aG9sZGVyU2VtQUYvY29udGVudGhvbGRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50aG9sZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBwYWRkaW5nOiAwLjVlbTtcbiAgICB6LWluZGV4OiAxO1xufVxuXG4uc3BhY2VyIHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgei1pbmRleDogMTtcbn1cblxuQGtleWZyYW1lcyB3b2JibGUge1xuICAgIGZyb20ge3RyYW5zZm9ybTogcm90YXRlKDFkZWcpO31cbiAgICB0byB7dHJhbnNmb3JtOiByb3RhdGUoLTFkZWcpO31cbn1cblxuLnNlbGVjdGVkIHtcbiAgICBib3JkZXItcmFkaXVzOiAzOCU7XG4gICAgcGFkZGluZzogMC4yZW07XG4gICAgYm9yZGVyOiAwLjJlbSBzb2xpZCBibGFjaztcbn1cblxuLmxvbmdwcmVzcyB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IHdvYmJsZTtcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuMnM7XG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XG4gICAgYW5pbWF0aW9uLWRpcmVjdGlvbjogYWx0ZXJuYXRlO1xufVxuXG4udW5zZWxlY3RlZCB7XG4gICAgcGFkZGluZzogMC40ZW1cbn1cblxuLmZpbHRlcmVkIHtcbiAgICBvcGFjaXR5OiAwLjY7XG59XG5cbi5lbnRyeURpdiB7XG4gICAgXG4gICAgLy9zZXQgdGhpcyBzbWFsbGVyIGZvciBsZXNzIHJvdW5kXG4gICAgYm9yZGVyLXJhZGl1czoxNSU7XG4gICAgXG4gICAgLy9jaGFuZ2UgbWFyZ2luIGZvciBtb3JlIHNwYWNlLCBiZWNhdXNlIGFsbCBhcmUgZmxleCBvYmplY3RzIHlvdSBjYW50IGp1c3Qgc2V0IGV4dHJhIGxpbmUtc3BhY2VcbiAgICBtYXJnaW46IDAgMTBweDtcbiAgICBtYXJnaW4tdG9wOiAyY207XG5cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1Miw0Nyw1MSwuNjMpO1xuICAgIHotaW5kZXg6IDI7XG59XG5cbi5jb250ZW50IHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG92ZXJmbG93LXk6IHZpc2libGU7XG4gICAgei1pbmRleDogMDtcbn1cblxuLmNvbnRleHRNZW51Q29udGFpbmVye1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuLmZvb3RlciB7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDYxOEY7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xufVxuXG46aG9zdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLnN2Zy1hcnJvd3tcbiAgICBzdHJva2Utd2lkdGg6IDQ7XG4gICAgc3Ryb2tlOiAjQkJCO1xuICAgIGZpbGw6IG5vbmU7XG4gICAgbWFya2VyLWVuZDogdXJsKCNhcnJvdyk7XG4gICAgc3Ryb2tlLW9wYWNpdHk6IDAuNjtcbn0iLCIuY29udGVudGhvbGRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIHBhZGRpbmc6IDAuNWVtO1xuICB6LWluZGV4OiAxO1xufVxuXG4uc3BhY2VyIHtcbiAgZmxleC1ncm93OiAxO1xuICB6LWluZGV4OiAxO1xufVxuXG5Aa2V5ZnJhbWVzIHdvYmJsZSB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDFkZWcpO1xuICB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMWRlZyk7XG4gIH1cbn1cbi5zZWxlY3RlZCB7XG4gIGJvcmRlci1yYWRpdXM6IDM4JTtcbiAgcGFkZGluZzogMC4yZW07XG4gIGJvcmRlcjogMC4yZW0gc29saWQgYmxhY2s7XG59XG5cbi5sb25ncHJlc3Mge1xuICBhbmltYXRpb24tbmFtZTogd29iYmxlO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuMnM7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlO1xuICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7XG59XG5cbi51bnNlbGVjdGVkIHtcbiAgcGFkZGluZzogMC40ZW07XG59XG5cbi5maWx0ZXJlZCB7XG4gIG9wYWNpdHk6IDAuNjtcbn1cblxuLmVudHJ5RGl2IHtcbiAgYm9yZGVyLXJhZGl1czogMTUlO1xuICBtYXJnaW46IDAgMTBweDtcbiAgbWFyZ2luLXRvcDogMmNtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoNTIsIDQ3LCA1MSwgMC42Myk7XG4gIHotaW5kZXg6IDI7XG59XG5cbi5jb250ZW50IHtcbiAgZmxleC1ncm93OiAxO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBvdmVyZmxvdy15OiB2aXNpYmxlO1xuICB6LWluZGV4OiAwO1xufVxuXG4uY29udGV4dE1lbnVDb250YWluZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5mb290ZXIge1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjE4RjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xufVxuXG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnN2Zy1hcnJvdyB7XG4gIHN0cm9rZS13aWR0aDogNDtcbiAgc3Ryb2tlOiAjQkJCO1xuICBmaWxsOiBub25lO1xuICBtYXJrZXItZW5kOiB1cmwoI2Fycm93KTtcbiAgc3Ryb2tlLW9wYWNpdHk6IDAuNjtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/content/contentholderSemAF/contentholder.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/components/content/contentholderSemAF/contentholder.component.ts ***!
  \**********************************************************************************/
/*! exports provided: ContentholderComponentSemAF */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentholderComponentSemAF", function() { return ContentholderComponentSemAF; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/menu */ "./node_modules/@angular/material/esm2015/menu.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tools/sem-af/sem-af.utils */ "./src/app/components/tools/sem-af/sem-af.utils.ts");
/* harmony import */ var _tools_sem_af_uima__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../tools/sem-af/uima */ "./src/app/components/tools/sem-af/uima.ts");
/* harmony import */ var _contentholder_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./contentholder.utils */ "./src/app/components/content/contentholderSemAF/contentholder.utils.ts");







var eContextMenu;
(function (eContextMenu) {
    eContextMenu["DeleteMulti"] = "CONTENT-CONTENTHOLDER.DELETE-MULTI";
})(eContextMenu || (eContextMenu = {}));
let ContentholderComponentSemAF = 
/**
 * Komponente für die tokenweise Darstellung der Texte
 */
class ContentholderComponentSemAF {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        this.data = [];
        this.currentSelected = undefined;
        this.lastTapped = undefined;
        this.pageSizes = [50, 100, 150];
        this.maxPage = 0;
        this.contextMenuEntries = [];
        this.link_visu = [];
        this.linksPos = [];
        this.filterSet = new Set();
        this.longpress = false;
        this.links = [];
        this.pageSize = 50;
        this.page = 0;
        this.filters = [];
        this.showLastTapped = false;
        this.selectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.selectionLinkChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"](); // number is the id of the link
    }
    ngOnChanges(changes) {
        console.log("ngOnChanges", changes);
        if (changes) {
            if (changes.pageSize != null || changes.page != null || changes.inData != null) {
                if (changes.inData != null || changes.pageSize != null) {
                    this.maxPage = Math.floor(this.inData.length / this.pageSize);
                }
                this.pageChanged();
            }
            if (changes.filters) {
                this.filterSet = Object(_tools_sem_af_uima__WEBPACK_IMPORTED_MODULE_5__["make_filter"])(this.filters);
            }
            if (changes.links) {
                setTimeout(() => { this.test(this.links); }, 100); // Ensure entities are rendered
            }
        }
    }
    test(links) {
        const base = document.querySelector("#mainContent").getBoundingClientRect();
        const li = [];
        if (this.links === undefined)
            return;
        this.link_visu = [];
        for (const link of links) {
            const from_ = document.querySelector(`#entity${link.from.id}`);
            const to_ = document.querySelector(`#entity${link.to.id}`);
            if (!from_ || !to_)
                return; // maybe something else here
            const from = from_.getBoundingClientRect();
            const to = to_.getBoundingClientRect();
            // https://github.com/henlein/TextAnnotator/blob/main/WebApplication/app/view/tool/semaf/SemAFPanelController.js
            // At about line 1239
            const pos = {
                start: {
                    x: from.x + from.width / 2 + window.scrollX,
                    y: from.y - base.y + window.scrollY
                },
                end: {
                    x: to.x + to.width / 2 + window.scrollX,
                    y: to.y - base.y + window.scrollY
                }
            };
            if (pos.start.y == pos.end.y) { // Both Nodes are on the same line
            }
            const a = Object(_contentholder_utils__WEBPACK_IMPORTED_MODULE_6__["getLinkPointsString"])(from_, to_, false, 1, null);
            this.link_visu.push(a.pathStr);
            console.log("svg Link a", a);
            li.push({
                start: {
                    x: from.x + from.width / 2 + window.scrollX,
                    y: from.y - base.y + window.scrollY
                },
                end: {
                    x: to.x + to.width / 2 + window.scrollX,
                    y: to.y - base.y + window.scrollY
                }
            });
            console.log("link", from, to, link);
        }
        this.linksPos = li;
        console.log("document.getElementById('loginInput')", li);
    }
    ngAfterViewInit() {
    }
    /**
     * Händelt die Auswahl eines Tokens
     */
    onSelect(entry, event) {
        console.log("enty", JSON.stringify(entry, null, 4));
        event.preventDefault();
        this.preventDefault(event);
        if (!this.filterSet.has(entry.data._type) && this.filterSet.size)
            return;
        if (this.longpress) {
            this.longpress = false;
            return;
        }
        if (this.currentSelected) {
            if (this.currentSelected === entry.id) {
                this.currentSelected = undefined;
                return;
            }
            this.currentSelected = undefined;
        }
        else {
            this.selectionChanged.emit(entry);
            this.lastTapped = entry.id;
        }
    }
    onSelectLink(id, event) {
        event.preventDefault();
        this.preventDefault(event);
        this.selectionLinkChanged.emit(id);
    }
    /**
     * Verhindert das ungewollte weiterlaufen eines Mausevents
     */
    preventDefault(event) {
        if (!event) {
            return;
        }
        event.preventDefault();
        event.stopImmediatePropagation();
        event.stopPropagation();
    }
    /**
     * Ändert die Anzahl an Token, die pro Seite dargestellt werden
     */
    sizeChange(size) {
        if (this.pageSize !== size) {
            this.pageSize = size;
            this.maxPage = Math.floor(this.inData.length / this.pageSize);
            this.pageChanged();
        }
    }
    /**
     * Ändert die momentan ausgewählte Seite des Textes
     */
    switchPage(dir) {
        switch (dir) {
            case 'fst':
                this.page = 0;
                break;
            case '+1':
                ++this.page;
                break;
            case '-1':
                --this.page;
                break;
            case 'lst':
                this.page = this.maxPage;
                break;
        }
        this.pageChanged();
    }
    /**
     * Wird aufgerufen sollte ein Kontextmenü Eintrag gewählt werden
     */
    contextMenuEvent(event) {
        this.contextMenuTrigger.closeMenu();
        switch (event) {
            case eContextMenu.DeleteMulti:
                this.currentSelected = undefined;
                break;
        }
    }
    /**
     * Bestimmt welche CSS Klassen für das Token gelten sollen
     */
    getClassesForEntry(entry) {
        let retval = '';
        const annoData = {};
        if (this.filterSet.size && !this.filterSet.has(entry.data._type)) {
            retval += 'filtered ';
        }
        if (entry.id === this.currentSelected) {
            retval += 'selected longpress ';
        }
        else if (this.showLastTapped && entry.id === this.lastTapped) {
            retval += 'selected ';
        }
        else {
            retval += 'unselected ';
        }
        return retval;
    }
    /**
     * Gibt einen Farbwert oder Style für den Background zurück
     */
    getBackground(entry) {
        const val = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["defaultAnnotationClasses"].find((x) => x.type == entry.data._type);
        return (val === undefined) ? "#fff" : val.rgb;
    }
    /**
     * Ob die Badge des Tokens unsichtbar sein soll
     */
    isBadgeHidden(entry) {
        /** */
        return true; // Delete this later not nessacary anymore
    }
    links_to_string() {
        return JSON.stringify(this.links, null, 4);
    }
    /**
     * Gibt den Zahlenwert für die Anzeige innerhalb der Badge zurück
     */
    getBadgeValue(entry) {
        return 0;
        // Delete this later not nessacary anymore
    }
    pageChanged() {
        if (this.page < 0) {
            this.page = 0;
        }
        if (this.page > this.maxPage) {
            this.page = this.maxPage;
        }
        this.data = this.inData.slice(this.page * this.pageSize, (this.page + 1) * this.pageSize);
    }
};
ContentholderComponentSemAF.ctorParameters = () => [
    { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["DomSanitizer"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('contextMenuContainer', { static: true })
], ContentholderComponentSemAF.prototype, "contextMenuRef", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_menu__WEBPACK_IMPORTED_MODULE_2__["MatMenuTrigger"], { static: true })
], ContentholderComponentSemAF.prototype, "contextMenuTrigger", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponentSemAF.prototype, "inData", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponentSemAF.prototype, "links", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponentSemAF.prototype, "pageSize", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponentSemAF.prototype, "page", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponentSemAF.prototype, "filters", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ContentholderComponentSemAF.prototype, "showLastTapped", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ContentholderComponentSemAF.prototype, "selectionChanged", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ContentholderComponentSemAF.prototype, "selectionLinkChanged", void 0);
ContentholderComponentSemAF = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-contentholder-semaf',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./contentholder.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/contentholderSemAF/contentholder.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./contentholder.component.scss */ "./src/app/components/content/contentholderSemAF/contentholder.component.scss")).default]
    })
    /**
     * Komponente für die tokenweise Darstellung der Texte
     */
], ContentholderComponentSemAF);



/***/ }),

/***/ "./src/app/components/content/contentholderSemAF/contentholder.utils.ts":
/*!******************************************************************************!*\
  !*** ./src/app/components/content/contentholderSemAF/contentholder.utils.ts ***!
  \******************************************************************************/
/*! exports provided: getLinkPointsString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLinkPointsString", function() { return getLinkPointsString; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

// Copied from https://github.com/henlein/TextAnnotator/blob/main/WebApplication/app/view/tool/semaf/SemAFPanelController.js
function getLinkPointsString(leftNode, rightNode, isReversed, level, type, hStartOffsetDirection = 0, hEndOffsetDirection = 0) {
    let start = {}, end = {}, p0 = {}, p1 = {}, p2 = {}, p3 = {}, cp1 = {}, cp2 = {}, cp3 = {}, cp4 = {};
    let nodeOffset = 2;
    let endOffset = 4;
    let leftNodeHOffset;
    let rightNodeHOffset;
    if (!isReversed) {
        leftNodeHOffset = hStartOffsetDirection * 7;
        rightNodeHOffset = hEndOffsetDirection * 7;
    }
    else {
        leftNodeHOffset = hEndOffsetDirection * 7;
        rightNodeHOffset = hStartOffsetDirection * 7;
    }
    start.x = ~~(leftNode.offsetLeft + leftNode.offsetWidth / 2) + leftNodeHOffset;
    end.x = ~~(rightNode.offsetLeft + rightNode.offsetWidth / 2) + rightNodeHOffset;
    if (rightNode.offsetTop > leftNode.offsetTop) {
        start.y = leftNode.offsetTop + leftNode.offsetHeight - nodeOffset;
        end.y = rightNode.offsetTop + nodeOffset;
        if (!isReversed) {
            end.y -= endOffset;
        }
        else
            start.y += endOffset;
        cp1.dx = 0;
        cp1.dy = 15;
        cp2.dx = 0;
        cp2.dy = 15;
        cp1.x = start.x + cp1.dx;
        cp1.y = start.y + cp1.dy;
        cp4.x = end.x - cp1.dx;
        cp4.y = end.y - cp1.dy;
        let dy = cp4.y - cp1.y;
        let dx = cp4.x - cp1.x;
        p1.dx = cp1.dx + 0.1 * dx;
        p1.dy = cp1.dy + 0.1 * dy;
        cp2.x = start.x + cp2.dx;
        cp2.y = start.y + cp2.dy;
        p1.x = start.x + p1.dx;
        p1.y = start.y + p1.dy;
        cp3.x = end.x - cp2.dx;
        cp3.y = end.y - cp2.dy;
        p2.x = end.x - p1.dx;
        p2.y = end.y - p1.dy;
    }
    else if (rightNode.offsetTop == leftNode.offsetTop) {
        start.y = leftNode.offsetTop + nodeOffset;
        end.y = rightNode.offsetTop + nodeOffset;
        cp1.dx = 0;
        cp1.dy = -20 * level;
        cp2.dx = 0;
        cp2.dy = cp1.dy;
        p1.dx = leftNode.offsetLeft != rightNode.offsetLeft ? 20 : 6;
        p1.dy = cp1.dy;
        cp1.x = start.x + cp1.dx;
        cp1.y = start.y + cp1.dy;
        cp2.x = start.x + cp2.dx;
        cp2.y = start.y + cp2.dy;
        p1.x = start.x + p1.dx;
        p1.y = start.y + p1.dy;
        p2.x = end.x - p1.dx;
        p2.y = end.y + p1.dy;
        cp3.x = end.x;
        cp3.y = end.y + cp1.dy;
        cp4.x = end.x;
        cp4.y = end.y + cp1.dy;
        if (level > 1) {
            p0.x = cp1.x;
            p0.y = cp1.y + 20;
            p3.x = cp3.x;
            p3.y = cp3.y + 20;
        }
        if (!isReversed)
            end.y -= endOffset;
        else
            start.y -= endOffset;
    }
    else {
        start.y = leftNode.offsetTop + nodeOffset;
        end.y = rightNode.offsetTop + rightNode.offsetHeight - nodeOffset;
        if (!isReversed)
            end.y += endOffset;
        else
            start.y -= endOffset;
        cp1.dx = 0;
        cp1.dy = -15;
        cp2.dx = 0;
        cp2.dy = -15;
        cp1.x = start.x + cp1.dx;
        cp1.y = start.y + cp1.dy;
        cp4.x = end.x - cp1.dx;
        cp4.y = end.y - cp1.dy;
        let dy = cp4.y - cp1.y;
        let dx = cp4.x - cp1.x;
        p1.dx = cp1.dx + 0.1 * dx;
        p1.dy = cp1.dy + 0.1 * dy;
        cp2.x = start.x + cp2.dx;
        cp2.y = start.y + cp2.dy;
        p1.x = start.x + p1.dx;
        p1.y = start.y + p1.dy;
        cp3.x = end.x - cp2.dx;
        cp3.y = end.y - cp2.dy;
        p2.x = end.x - p1.dx;
        p2.y = end.y - p1.dy;
    }
    let points = { start, cp1, cp2, p1, p2, cp3, cp4, end };
    let pathStr;
    if (!p0.x) {
        pathStr =
            `M ${start.x}, ${start.y}
C ${cp1.x}, ${cp1.y}
${cp2.x}, ${cp2.y}
${p1.x}, ${p1.y}
L ${p2.x}, ${p2.y}
C ${cp3.x}, ${cp3.y}
${cp4.x}, ${cp4.y}
${end.x}, ${end.y}`;
    }
    else {
        pathStr =
            `M ${start.x}, ${start.y}
L ${p0.x}, ${p0.y}
C ${cp1.x}, ${cp1.y}
${cp2.x}, ${cp2.y}
${p1.x}, ${p1.y}
L ${p2.x}, ${p2.y}
C ${cp3.x}, ${cp3.y}
${cp4.x}, ${cp4.y}
${p3.x}, ${p3.y}
L ${end.x}, ${end.y}`;
    }
    return { pathStr, points };
}


/***/ }),

/***/ "./src/app/components/content/document-select/document-select.component.scss":
/*!***********************************************************************************!*\
  !*** ./src/app/components/content/document-select/document-select.component.scss ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".content {\n  width: 100%;\n}\n\n.actions {\n  text-align: right;\n}\n\n.mat-header-cell:first-child, .mat-cell:first-child {\n  width: 3em;\n  flex: 0 1 auto;\n}\n\n.mat-header-cell:nth-child(2), .mat-cell:nth-child(2) {\n  width: 3em;\n  flex: 0 1 auto;\n}\n\n.mat-header-cell:last-child, .mat-cell:last-child {\n  flex: 1 0 auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL2NvbnRlbnQvZG9jdW1lbnQtc2VsZWN0L2RvY3VtZW50LXNlbGVjdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9jb250ZW50L2RvY3VtZW50LXNlbGVjdC9kb2N1bWVudC1zZWxlY3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksVUFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLFVBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvbnRlbnQvZG9jdW1lbnQtc2VsZWN0L2RvY3VtZW50LXNlbGVjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLmFjdGlvbnMge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ubWF0LWhlYWRlci1jZWxsOmZpcnN0LWNoaWxkLC5tYXQtY2VsbDpmaXJzdC1jaGlsZHtcbiAgICB3aWR0aDogM2VtO1xuICAgIGZsZXg6IDAgMSBhdXRvO1xufVxuXG4ubWF0LWhlYWRlci1jZWxsOm50aC1jaGlsZCgyKSwubWF0LWNlbGw6bnRoLWNoaWxkKDIpe1xuICAgIHdpZHRoOiAzZW07XG4gICAgZmxleDogMCAxIGF1dG87XG59XG5cbi5tYXQtaGVhZGVyLWNlbGw6bGFzdC1jaGlsZCwubWF0LWNlbGw6bGFzdC1jaGlsZHtcbiAgICBmbGV4OiAxIDAgYXV0bztcbn0iLCIuY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYWN0aW9ucyB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ubWF0LWhlYWRlci1jZWxsOmZpcnN0LWNoaWxkLCAubWF0LWNlbGw6Zmlyc3QtY2hpbGQge1xuICB3aWR0aDogM2VtO1xuICBmbGV4OiAwIDEgYXV0bztcbn1cblxuLm1hdC1oZWFkZXItY2VsbDpudGgtY2hpbGQoMiksIC5tYXQtY2VsbDpudGgtY2hpbGQoMikge1xuICB3aWR0aDogM2VtO1xuICBmbGV4OiAwIDEgYXV0bztcbn1cblxuLm1hdC1oZWFkZXItY2VsbDpsYXN0LWNoaWxkLCAubWF0LWNlbGw6bGFzdC1jaGlsZCB7XG4gIGZsZXg6IDEgMCBhdXRvO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/content/document-select/document-select.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/components/content/document-select/document-select.component.ts ***!
  \*********************************************************************************/
/*! exports provided: DocumentSelectComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentSelectComponent", function() { return DocumentSelectComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_document_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/document.service */ "./src/app/services/document.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm2015/table.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/esm2015/paginator.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm2015/sort.js");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");








let DocumentSelectComponent = 
/**
 * Komponente für die Ansicht der Dokument Selektion
 */
class DocumentSelectComponent {
    constructor(router, documentService, menuService) {
        this.router = router;
        this.documentService = documentService;
        this.menuService = menuService;
        this.currRootPath = [];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]([]);
        this.isWaiting = false;
        this.displayColumns = ['expandable', 'icon', 'text'];
        this.subscriptions = [];
    }
    ngOnInit() {
        this.openRepository(undefined);
        this.menuService.showMenubar();
    }
    ngOnDestroy() {
        // Beende die momentanen Subscriptions
        for (const subscription of this.subscriptions) {
            subscription.unsubscribe();
        }
    }
    /**
     * Reagiert auf die Anwahl eines Repository Eintrages in der Dokumenten Selektions Ansicht
     */
    openRepository(elem) {
        if (elem == null) {
            this.currRootPath.unshift('root');
            this.loadRepository('root');
            return;
        }
        switch (elem.type) {
            case 'repository':
                if (!elem.leaf) {
                    this.currRootPath.unshift(elem.id);
                    this.loadRepository(elem.id);
                }
                break;
            case 'file':
                this.isWaiting = true;
                const observer = {
                    next: (data) => this.navigateToDocument(elem.id),
                };
                this.subscriptions.push(this.documentService.casOpened.subscribe(observer));
                this.documentService.openCAS(elem.id);
                break;
        }
    }
    /**
     * Öffnet in der Dokumenten Ansicht einen Unterordner und lädt dessen Daten
     */
    loadRepository(id) {
        this.isWaiting = true;
        const documentObserver = {
            next: (data) => {
                this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"](data);
                this.dataSource.paginator = this.paginator;
                this.dataSource.sort = this.sort;
                this.isWaiting = false;
            },
            error: (err) => {
                this.isWaiting = false;
            },
            complete: () => { },
        };
        this.documentService.getDocuments(id).subscribe(documentObserver);
    }
    /**
     * Navigiert in der Dokumenten Selektions Ansicht einen Schritt zurück
     */
    closeRepository() {
        this.currRootPath.shift();
        this.loadRepository(this.currRootPath[0]);
    }
    /**
     * Navigiere zur Dokumenten Ansicht
     */
    navigateToDocument(id) {
        this.router.navigate(['/document'], { queryParams: { cas: id } });
    }
    /**
     * Gibt den Icon Namen für den jeweiligen Repository Eintrag zurück
     */
    getIconForType(type) {
        switch (type) {
            case 'repository':
                return 'folder';
            case 'file':
                return 'description';
            default:
                return '';
        }
    }
};
DocumentSelectComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: src_app_services_document_service__WEBPACK_IMPORTED_MODULE_2__["DocumentService"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_7__["MenuService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"], { static: true })
], DocumentSelectComponent.prototype, "paginator", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"], { static: true })
], DocumentSelectComponent.prototype, "sort", void 0);
DocumentSelectComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-document-select',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./document-select.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/document-select/document-select.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./document-select.component.scss */ "./src/app/components/content/document-select/document-select.component.scss")).default]
    })
    /**
     * Komponente für die Ansicht der Dokument Selektion
     */
], DocumentSelectComponent);



/***/ }),

/***/ "./src/app/components/content/document/document.component.scss":
/*!*********************************************************************!*\
  !*** ./src/app/components/content/document/document.component.scss ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29udGVudC9kb2N1bWVudC9kb2N1bWVudC5jb21wb25lbnQuc2NzcyJ9 */");

/***/ }),

/***/ "./src/app/components/content/document/document.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/components/content/document/document.component.ts ***!
  \*******************************************************************/
/*! exports provided: DocumentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentComponent", function() { return DocumentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_document_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/document.service */ "./src/app/services/document.service.ts");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/esm2015/paginator.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm2015/sort.js");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
/* harmony import */ var src_app_services_tool_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/tool.service */ "./src/app/services/tool.service.ts");








let DocumentComponent = 
/**
 * Komponente für die "Dokumenten Ansicht"
 */
class DocumentComponent {
    constructor(route, router, documentService, menuService, toolService) {
        this.route = route;
        this.router = router;
        this.documentService = documentService;
        this.menuService = menuService;
        this.toolService = toolService;
        this.isWaiting = false;
        this.loadedViews = [];
        this.subscriptions = [];
    }
    ngOnInit() {
        this.updateData(this.documentService.currentCAS);
        this.loadedViews = this.documentService.loadedViews;
        [this.currentView] = this.documentService.currentView && this.loadedViews ?
            this.loadedViews.filter(({ view }) => view === this.documentService.currentView.view) : [undefined];
        const viewsObserver = {
            next: (data) => {
                if (data && this.document && data.casId === this.document.casId) {
                    this.loadedViews = data.views;
                }
            },
        };
        this.subscriptions.push(this.documentService.viewsLoaded.subscribe(viewsObserver));
        this.subscribeView();
        let viewId;
        // Auf Änderungen bezüglich des geladenen Cas reagieren
        const casObserver = {
            next: (data) => {
                if (this.document == null || this.document.casId !== data.casId) {
                    this.updateData(data);
                    this.loadedViews = this.documentService.loadedViews;
                }
                // this.route.queryParamMap.subscribe((params) => {
                //   const view = params.get('view');
                if (viewId) {
                    this.documentService.openView(data.casId, viewId);
                }
                // });
            },
        };
        this.subscriptions.push(this.documentService.casOpened.subscribe(casObserver));
        this.route.queryParamMap.subscribe((params) => {
            const id = params.get('cas');
            viewId = params.get('view');
            if (id && (!this.documentService.currentCAS || id !== this.documentService.currentCAS.casId)) {
                this.isWaiting = true;
                this.documentService.openCAS(id);
            }
        });
        this.menuService.showMenubar();
    }
    ngOnDestroy() {
        // Beende die momentanen Subscriptions
        this.viewSubscription = undefined;
        for (const subscription of this.subscriptions) {
            subscription.unsubscribe();
        }
    }
    /**
     * Navigiere zur Dokumenten Selektions Ansicht
     */
    selectDocument() {
        this.router.navigate(['/selectdocument']);
    }
    get cas() {
        return this.document;
    }
    get views() {
        return this.loadedViews;
    }
    /**
     * Navigiert zur Ansicht des ausgewählten Werkzeuges
     */
    openTool(entry) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            if (!this.document || !this.currentView) {
                return;
            }
            // Workaround gegen unerwünschte Nebenwirkungen beim laden der Werkzeug Daten
            this.unsubscribeView();
            const success = yield this.router.navigate(entry.url, { queryParams: { cas: this.document.casId, view: this.currentView.view } });
            if (!success) {
                this.subscribeView();
            }
        });
    }
    /**
     * Setzt eine neue ausgewählte View
     */
    viewSelected(event) {
        const currView = this.documentService.currentView;
        if (!currView || currView.view !== event.value.view) {
            this.isWaiting = true;
            this.documentService.openView(this.cas.casId, event.value.view);
        }
    }
    subscribeView() {
        if (this.viewSubscription) {
            return;
        }
        // oberserver um auf Änderungen der geladenen View zu reagieren
        const observer = {
            next: (data) => {
                this.isWaiting = false;
                [this.currentView] = this.loadedViews.filter(({ view }) => view === data.view);
                // View als Query Parameter mit in den URL der aktuellen Ansicht
                this.router.navigate(['/document'], { queryParams: { cas: this.document.casId, view: data.view } });
            },
        };
        this.viewSubscription = this.documentService.viewOpened.subscribe(observer);
        this.subscriptions.push(this.viewSubscription);
    }
    unsubscribeView() {
        if (this.viewSubscription) {
            this.viewSubscription.unsubscribe();
        }
    }
    updateData(data) {
        this.document = data;
        this.isWaiting = false;
    }
};
DocumentComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: src_app_services_document_service__WEBPACK_IMPORTED_MODULE_3__["DocumentService"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_6__["MenuService"] },
    { type: src_app_services_tool_service__WEBPACK_IMPORTED_MODULE_7__["ToolService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"], { static: true })
], DocumentComponent.prototype, "paginator", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"], { static: true })
], DocumentComponent.prototype, "sort", void 0);
DocumentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-document',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./document.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/content/document/document.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./document.component.scss */ "./src/app/components/content/document/document.component.scss")).default]
    })
    /**
     * Komponente für die "Dokumenten Ansicht"
     */
], DocumentComponent);



/***/ }),

/***/ "./src/app/components/menu/load-progress/load-progress.component.scss":
/*!****************************************************************************!*\
  !*** ./src/app/components/menu/load-progress/load-progress.component.scss ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".green {\n  color: #737C45;\n  vertical-align: middle;\n}\n\n.yellow {\n  color: #E3BA0F;\n  vertical-align: middle;\n}\n\n.span {\n  vertical-align: middle;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL21lbnUvbG9hZC1wcm9ncmVzcy9sb2FkLXByb2dyZXNzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL21lbnUvbG9hZC1wcm9ncmVzcy9sb2FkLXByb2dyZXNzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLHNCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0Esc0JBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL21lbnUvbG9hZC1wcm9ncmVzcy9sb2FkLXByb2dyZXNzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyZWVuIHtcbiAgICBjb2xvcjogIzczN0M0NTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4ueWVsbG93IHtcbiAgICBjb2xvcjogI0UzQkEwRjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uc3BhbiB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn0iLCIuZ3JlZW4ge1xuICBjb2xvcjogIzczN0M0NTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLnllbGxvdyB7XG4gIGNvbG9yOiAjRTNCQTBGO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uc3BhbiB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/menu/load-progress/load-progress.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/components/menu/load-progress/load-progress.component.ts ***!
  \**************************************************************************/
/*! exports provided: LoadProgressComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadProgressComponent", function() { return LoadProgressComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var src_app_services_document_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/document.service */ "./src/app/services/document.service.ts");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
/* harmony import */ var src_app_services_task_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/task.service */ "./src/app/services/task.service.ts");






let LoadProgressComponent = 
/**
 * Diese Komponente stellt sicher, dass beim Öffnen eines Werkzeuges alle dafür nötigen Daten geladen wurden
 */
class LoadProgressComponent {
    constructor(dialogRef, menuServie, documentService, taskService, data) {
        this.dialogRef = dialogRef;
        this.menuServie = menuServie;
        this.documentService = documentService;
        this.taskService = taskService;
        this.data = data;
        this.loadStatus = {
            casId: ['MENU-LOAD-PROGRESS.CAS-PENDING', ''],
            view: ['MENU-LOAD-PROGRESS.VIEW-PENDING', ''],
            toolId: ['MENU-LOAD-PROGRESS.TOOL-PENDING', ''],
        };
        this.subscriptions = [];
    }
    ngOnInit() {
        this.dialogRef.disableClose = true;
        if (!this.data.casId) {
            this.close(false);
            return;
        }
        const { casId, view, toolId, task } = this.data;
        // Stell sicher, dass das Dokument geladen ist
        const casObserver = {
            next: () => {
                this.loadStatus.casId = ['MENU-LOAD-PROGRESS.CAS-LOADED', 'check'];
                if (view) {
                    this.loadStatus.view = ['MENU-LOAD-PROGRESS.LOAD-VIEW', 'get_app'];
                    this.documentService.openView(casId, view);
                }
                else {
                    this.menuServie.showMessage({
                        text: 'MENU-LOAD-PROGRESS.LOAD-ERROR-VIEW',
                        level: 'error',
                    });
                    this.close(false);
                }
            },
            error: () => {
                this.menuServie.showMessage({
                    text: 'MENU-LOAD-PROGRESS.LOAD-ERROR-CAS',
                    level: 'error',
                });
                this.close(false);
            }
        };
        this.subscriptions.push(this.documentService.casOpened.subscribe(casObserver));
        // Stell sicher, dass die View geladen ist
        const viewObserver = {
            next: () => {
                this.loadStatus.view = ['MENU-LOAD-PROGRESS.VIEW-LOADED', 'check'];
                if (toolId) {
                    this.loadStatus.toolId = ['MENU-LOAD-PROGRESS.LOAD-TOOL', 'get_app'];
                    this.documentService.openTool(casId, view, toolId);
                }
                else {
                    this.menuServie.showMessage({
                        text: 'MENU-LOAD-PROGRESS.LOAD-ERROR-TOOL',
                        level: 'error',
                    });
                    this.close(false);
                }
            },
            error: () => {
                this.menuServie.showMessage({
                    text: 'MENU-LOAD-PROGRESS.LOAD-ERROR-VIEW',
                    level: 'error',
                });
                this.close(false);
            }
        };
        this.subscriptions.push(this.documentService.viewOpened.subscribe(viewObserver));
        // Stell sicher, dass das Dokument mit dem Werkzeug bearbeitet werden kann
        const toolObserver = {
            next: () => {
                this.loadStatus.toolId = ['MENU-LOAD-PROGRESS.TOOL-LOADED', 'check'];
                if (task) {
                    this.taskService.getTask(task);
                }
                this.close(true);
            },
            error: () => {
                this.menuServie.showMessage({
                    text: 'MENU-LOAD-PROGRESS.LOAD-ERROR-TOOL',
                    level: 'error',
                });
                this.close(false);
            }
        };
        this.subscriptions.push(this.documentService.toolOpened.subscribe(toolObserver));
        this.loadStatus.casId = ['MENU-LOAD-PROGRESS.LOAD-CAS', 'get_app'];
        this.documentService.openCAS(this.data.casId);
    }
    ngOnDestroy() {
        // Beende die momentanen Subscriptions
        for (const subscription of this.subscriptions) {
            subscription.unsubscribe();
        }
    }
    /**
     * Schließt den Dialog
     */
    close(bool) {
        this.dialogRef.close(bool);
    }
};
LoadProgressComponent.ctorParameters = () => [
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__["MenuService"] },
    { type: src_app_services_document_service__WEBPACK_IMPORTED_MODULE_3__["DocumentService"] },
    { type: src_app_services_task_service__WEBPACK_IMPORTED_MODULE_5__["TaskService"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] }
];
LoadProgressComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-load-progress',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./load-progress.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/load-progress/load-progress.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./load-progress.component.scss */ "./src/app/components/menu/load-progress/load-progress.component.scss")).default]
    })
    /**
     * Diese Komponente stellt sicher, dass beim Öffnen eines Werkzeuges alle dafür nötigen Daten geladen wurden
     */
    ,
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))
], LoadProgressComponent);



/***/ }),

/***/ "./src/app/components/menu/menu-bar/menu-bar.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/components/menu/menu-bar/menu-bar.component.scss ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".select {\n  text-align: center;\n  margin-top: 0.5%;\n  margin-right: 1em;\n  margin-bottom: 0.5%;\n  width: 3em;\n  font-size: 0.8em;\n}\n\n.selectOption {\n  text-align: center;\n}\n\n.image {\n  width: 1em;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL21lbnUvbWVudS1iYXIvbWVudS1iYXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS9tZW51LWJhci9tZW51LWJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0FDQUo7O0FER0E7RUFDSSxrQkFBQTtBQ0FKOztBRElBO0VBQ0ksVUFBQTtBQ0RKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9tZW51L21lbnUtYmFyL21lbnUtYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uc2VsZWN0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMC41JTtcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjUlO1xuICAgIHdpZHRoOiAzZW07XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbn1cblxuLnNlbGVjdE9wdGlvbiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIFxufVxuXG4uaW1hZ2Uge1xuICAgIHdpZHRoOiAxZW07XG59IiwiLnNlbGVjdCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMC41JTtcbiAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNSU7XG4gIHdpZHRoOiAzZW07XG4gIGZvbnQtc2l6ZTogMC44ZW07XG59XG5cbi5zZWxlY3RPcHRpb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5pbWFnZSB7XG4gIHdpZHRoOiAxZW07XG59Il19 */");

/***/ }),

/***/ "./src/app/components/menu/menu-bar/menu-bar.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/components/menu/menu-bar/menu-bar.component.ts ***!
  \****************************************************************/
/*! exports provided: MenuBarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MenuBarComponent", function() { return MenuBarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var src_app_services_user_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
/* harmony import */ var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-cookie-service */ "./node_modules/ngx-cookie-service/ngx-cookie-service.js");







let MenuBarComponent = 
/**
 * Komponente für die Menüleiste der Anwendung
 */
class MenuBarComponent {
    constructor(translate, router, cookieService, userService, menuService) {
        this.translate = translate;
        this.router = router;
        this.cookieService = cookieService;
        this.userService = userService;
        this.menuService = menuService;
        this.languages = [
            { label: 'English', value: 'en', icon: 'en32square.png', short: 'EN' },
            { label: 'Deutsch', value: 'de', icon: 'de32square.png', short: 'DE' },
        ];
        this.isVisible = true;
        this.subscriptions = [];
    }
    ngOnInit() {
        // Übernimm die zuletzt gewählte Sprache aus den Cookies
        const useLang = this.cookieService.get('language') || 'en';
        [this.selectedValue] = this.languages.filter(({ value }) => value === useLang);
        this.translate.use(useLang);
        const observer = {
            next: (isVisible) => this.isVisible = isVisible,
        };
        this.subscriptions.push(this.menuService.menubarVisibilitySubject.subscribe(observer));
    }
    ngOnDestroy() {
        // Beende die momentanen Subscriptions
        for (const subscription of this.subscriptions) {
            subscription.unsubscribe();
        }
    }
    /**
     * Ändere die aktuell gewählte Sprache
     */
    changeLanguage(lan) {
        if (this.translate.currentLang !== lan) {
            this.translate.use(lan);
            this.cookieService.set('language', lan);
        }
    }
    // Navigiere zur "Home" Ansicht
    navigateDefault() {
        this.router.navigate(['']);
    }
    // Navigiere zur Dokumenten Ansicht
    navigateDocument() {
        this.router.navigate(['document']);
    }
    // Abmeldung des Benutzeres
    logout() {
        this.userService.logout();
    }
    // Ob der Benutzer über eine gültige Anmeldung verfügt
    get isLoggedIn() {
        return this.userService.isLoggedIn;
    }
};
MenuBarComponent.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"] },
    { type: src_app_services_user_service__WEBPACK_IMPORTED_MODULE_4__["UserService"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_5__["MenuService"] }
];
MenuBarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-menu-bar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./menu-bar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/menu-bar/menu-bar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./menu-bar.component.scss */ "./src/app/components/menu/menu-bar/menu-bar.component.scss")).default]
    })
    /**
     * Komponente für die Menüleiste der Anwendung
     */
], MenuBarComponent);



/***/ }),

/***/ "./src/app/components/menu/snack-bar/snack-bar.component.scss":
/*!********************************************************************!*\
  !*** ./src/app/components/menu/snack-bar/snack-bar.component.scss ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".snackContent {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.snackContent mat-icon {\n  margin-right: 0.5em;\n}\n.snackText * {\n  margin: 0;\n}\n.error {\n  color: #B3062C;\n}\n.info {\n  color: #48A9DA;\n}\n.success {\n  color: #A5AB52;\n}\n.warning {\n  color: #C96215;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL21lbnUvc25hY2stYmFyL3NuYWNrLWJhci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9tZW51L3NuYWNrLWJhci9zbmFjay1iYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQ0NGO0FEQ0U7RUFDRSxtQkFBQTtBQ0NKO0FESUU7RUFDRSxTQUFBO0FDREo7QURLQTtFQUNFLGNBQUE7QUNGRjtBREtBO0VBQ0UsY0FBQTtBQ0ZGO0FES0E7RUFDSSxjQUFBO0FDRko7QURLQTtFQUNFLGNBQUE7QUNGRiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS9zbmFjay1iYXIvc25hY2stYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNuYWNrQ29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIFxuICBtYXQtaWNvbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiAuNWVtO1xuICB9XG59XG5cbi5zbmFja1RleHQge1xuICAqIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cblxuLmVycm9yIHtcbiAgY29sb3I6ICNCMzA2MkM7XG59XG5cbi5pbmZvIHtcbiAgY29sb3I6ICM0OEE5REE7XG59XG5cbi5zdWNjZXNzIHtcbiAgICBjb2xvcjogI0E1QUI1Mjtcbn1cblxuLndhcm5pbmcge1xuICBjb2xvcjogI0M5NjIxNTtcbn1cbiIsIi5zbmFja0NvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLnNuYWNrQ29udGVudCBtYXQtaWNvbiB7XG4gIG1hcmdpbi1yaWdodDogMC41ZW07XG59XG5cbi5zbmFja1RleHQgKiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmVycm9yIHtcbiAgY29sb3I6ICNCMzA2MkM7XG59XG5cbi5pbmZvIHtcbiAgY29sb3I6ICM0OEE5REE7XG59XG5cbi5zdWNjZXNzIHtcbiAgY29sb3I6ICNBNUFCNTI7XG59XG5cbi53YXJuaW5nIHtcbiAgY29sb3I6ICNDOTYyMTU7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/menu/snack-bar/snack-bar.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/components/menu/snack-bar/snack-bar.component.ts ***!
  \******************************************************************/
/*! exports provided: SnackBarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SnackBarComponent", function() { return SnackBarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/snack-bar */ "./node_modules/@angular/material/esm2015/snack-bar.js");



let SnackBarComponent = 
/**
 * Komponente für die Anzeige von Informations- und Fehlermeldungen
 */
class SnackBarComponent {
    constructor(data) {
        this.data = data;
        this.iconMap = {
            error: 'error',
            info: 'info',
            warning: 'warning',
            success: 'done',
        };
    }
    ngOnInit() {
        this.displayMessage = this.data;
    }
};
SnackBarComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_2__["MAT_SNACK_BAR_DATA"],] }] }
];
SnackBarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-snack-bar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./snack-bar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/snack-bar/snack-bar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./snack-bar.component.scss */ "./src/app/components/menu/snack-bar/snack-bar.component.scss")).default]
    })
    /**
     * Komponente für die Anzeige von Informations- und Fehlermeldungen
     */
    ,
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_2__["MAT_SNACK_BAR_DATA"]))
], SnackBarComponent);



/***/ }),

/***/ "./src/app/components/menu/tool-bar/tool-bar.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/components/menu/tool-bar/tool-bar.component.scss ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS90b29sLWJhci90b29sLWJhci5jb21wb25lbnQuc2NzcyJ9 */");

/***/ }),

/***/ "./src/app/components/menu/tool-bar/tool-bar.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/components/menu/tool-bar/tool-bar.component.ts ***!
  \****************************************************************/
/*! exports provided: returnEventId, menuRootName, ToolBarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "returnEventId", function() { return returnEventId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "menuRootName", function() { return menuRootName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolBarComponent", function() { return ToolBarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


const returnEventId = 'ExitPage';
const menuRootName = 'root';
let ToolBarComponent = 
/**
 * Komponente für die Werkzeug spezifische Menüleiste
 */
class ToolBarComponent {
    constructor() {
        /**
         * Array von Menüeinträgen die angezeigt werden sollen
         */
        this.menu = [];
        /**
         * Titel, welcher in der Menüleiste dargestellt werden soll
         */
        this.title = '';
        this.menuEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
    }
    /**
     * Schließt das Kontextmenü und emitted den angewählten Eintrag als Event
     */
    menuAction(id) {
        this.mainTrigger.closeMenu();
        this.menuEvent.next(id);
    }
    /**
     * Emitted das Event, dass der "Zurück" Button gewählt wurde
     */
    returnEvent() {
        this.menuEvent.next([returnEventId]);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ToolBarComponent.prototype, "menu", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ToolBarComponent.prototype, "title", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ToolBarComponent.prototype, "menuEvent", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('mainTrigger', { static: true })
], ToolBarComponent.prototype, "mainTrigger", void 0);
ToolBarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-tool-bar',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./tool-bar.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/menu/tool-bar/tool-bar.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./tool-bar.component.scss */ "./src/app/components/menu/tool-bar/tool-bar.component.scss")).default]
    })
    /**
     * Komponente für die Werkzeug spezifische Menüleiste
     */
], ToolBarComponent);



/***/ }),

/***/ "./src/app/components/popups/comments/comments.component.scss":
/*!********************************************************************!*\
  !*** ./src/app/components/popups/comments/comments.component.scss ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".contentholder {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.entryDiv {\n  padding: 0.2em;\n  margin: 0.2em;\n  text-align: left;\n  box-shadow: 0 2px 5px 0 rgba(52, 47, 51, 0.63);\n  overflow-x: hidden;\n}\n\n.header {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9jb21tZW50cy9jb21tZW50cy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9wb3B1cHMvY29tbWVudHMvY29tbWVudHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtFQUNBLDhDQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUNJLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcG9wdXBzL2NvbW1lbnRzL2NvbW1lbnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnRob2xkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuLmVudHJ5RGl2IHtcbiAgICBwYWRkaW5nOiAwLjJlbTtcbiAgICBtYXJnaW46IDAuMmVtO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1Miw0Nyw1MSwuNjMpO1xuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLmhlYWRlciB7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xufVxuXG4uY29udGVudCB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBmbGV4LWdyb3c6IDE7XG59XG5cbjpob3N0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiAxMDAlO1xufSIsIi5jb250ZW50aG9sZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4uZW50cnlEaXYge1xuICBwYWRkaW5nOiAwLjJlbTtcbiAgbWFyZ2luOiAwLjJlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1MiwgNDcsIDUxLCAwLjYzKTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG4uaGVhZGVyIHtcbiAgZmxleC1ncm93OiAwO1xuICBmbGV4LXNocmluazogMDtcbn1cblxuLmNvbnRlbnQge1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/popups/comments/comments.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/components/popups/comments/comments.component.ts ***!
  \******************************************************************/
/*! exports provided: CommentsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentsComponent", function() { return CommentsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var src_app_services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/user.service */ "./src/app/services/user.service.ts");




let CommentsComponent = 
/**
 * Komponente für den Kommentar Dialog des QuickAnnotators
 */
class CommentsComponent {
    constructor(dialogRef, data, userservice) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.userservice = userservice;
        this.displayData = [];
        this.commentText = '';
    }
    ngOnInit() {
        const display = [];
        for (const { label, user, create } of this.data.sort((a, b) => b.create - a.create)) {
            const idx = display.length;
            // Benutzer Namen müssen async geladen werden
            const observer = {
                next: (result) => {
                    display[idx].user = result.result.description;
                }
            };
            display.push({
                label,
                create,
                user: 'POPUP-COMMENTS.USER-LOADING',
            });
            this.userservice.getUserInfo(user).subscribe(observer);
        }
        this.displayData = display;
    }
    /**
     * Neuen Kommentar absenden
     */
    submit() {
        this.dialogRef.close(this.commentText);
    }
};
CommentsComponent.ctorParameters = () => [
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: Array, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
    { type: src_app_services_user_service__WEBPACK_IMPORTED_MODULE_3__["UserService"] }
];
CommentsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-comments',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./comments.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/comments/comments.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./comments.component.scss */ "./src/app/components/popups/comments/comments.component.scss")).default]
    })
    /**
     * Komponente für den Kommentar Dialog des QuickAnnotators
     */
    ,
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))
], CommentsComponent);



/***/ }),

/***/ "./src/app/components/popups/filter/filter.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/components/popups/filter/filter.component.scss ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".contentholder {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.entryDiv {\n  border-radius: 9%;\n  padding: 0.2em;\n  margin: 0.2em;\n  text-align: center;\n  box-shadow: 0 2px 5px 0 rgba(52, 47, 51, 0.63);\n}\n\n.highlight {\n  border: 0.3em solid black;\n}\n\n.filtered {\n  opacity: 0.75;\n}\n\n.header {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n  padding-bottom: 2%;\n  border-bottom: 2px solid darkgray;\n}\n\n.footer {\n  padding-top: 2%;\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9maWx0ZXIvZmlsdGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9maWx0ZXIvZmlsdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUNJLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLDhDQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0ksYUFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsaUNBQUE7QUNDSjs7QURFQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wb3B1cHMvZmlsdGVyL2ZpbHRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50aG9sZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi5lbnRyeURpdiB7XG4gICAgYm9yZGVyLXJhZGl1czogOSU7XG4gICAgcGFkZGluZzogMC4yZW07XG4gICAgbWFyZ2luOiAwLjJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1Miw0Nyw1MSwuNjMpO1xufVxuXG4uaGlnaGxpZ2h0IHtcbiAgICBib3JkZXI6IDAuM2VtIHNvbGlkIGJsYWNrO1xufVxuXG4uZmlsdGVyZWQge1xuICAgIG9wYWNpdHk6IDAuNzU7XG59XG5cbi5oZWFkZXIge1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBmbGV4LXNocmluazogMDtcbn1cblxuLmNvbnRlbnQge1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmctYm90dG9tOiAyJTtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgZGFya2dyYXk7XG59XG5cbi5mb290ZXIge1xuICAgIHBhZGRpbmctdG9wOiAyJTtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgZmxleC1zaHJpbms6IDA7XG59XG5cbjpob3N0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiAxMDAlO1xufSIsIi5jb250ZW50aG9sZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4uZW50cnlEaXYge1xuICBib3JkZXItcmFkaXVzOiA5JTtcbiAgcGFkZGluZzogMC4yZW07XG4gIG1hcmdpbjogMC4yZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1MiwgNDcsIDUxLCAwLjYzKTtcbn1cblxuLmhpZ2hsaWdodCB7XG4gIGJvcmRlcjogMC4zZW0gc29saWQgYmxhY2s7XG59XG5cbi5maWx0ZXJlZCB7XG4gIG9wYWNpdHk6IDAuNzU7XG59XG5cbi5oZWFkZXIge1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuXG4uY29udGVudCB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGZsZXgtZ3JvdzogMTtcbiAgcGFkZGluZy1ib3R0b206IDIlO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgZGFya2dyYXk7XG59XG5cbi5mb290ZXIge1xuICBwYWRkaW5nLXRvcDogMiU7XG4gIGZsZXgtZ3JvdzogMDtcbiAgZmxleC1zaHJpbms6IDA7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/popups/filter/filter.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/components/popups/filter/filter.component.ts ***!
  \**************************************************************/
/*! exports provided: FilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterComponent", function() { return FilterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");



let FilterComponent = 
/**
 * Komponente für den Filter Dialog des QuickAnnotator und KnowledgeBaseLinkers
 */
class FilterComponent {
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.filter = [];
        this.selectedFilter = new Set();
    }
    ngOnInit() {
        const [filterData, highlights] = this.data;
        if (filterData.type === 'single') {
            this.filter = [['', filterData.data.sort((a, b) => a.name < b.name ? -1 : 1)]];
        }
        else {
            for (const [name, list] of Object.entries(filterData.data)) {
                this.filter.push([name, list.sort((a, b) => a.name < b.name ? -1 : 1)]);
            }
        }
        this.selectedFilter = new Set(highlights);
    }
    /**
     * Aktualisiert die gewählten Filter aufgrund der neuen Auswahl
     */
    selected(entry) {
        if (this.selectedFilter.has(entry.type)) {
            this.selectedFilter.delete(entry.type);
        }
        else {
            this.selectedFilter.add(entry.type);
        }
    }
    /**
     * Bestimmt welche CSS Klassen für den Eintrag gelten sollen
     */
    getClassesForEntry(entry) {
        let retval = '';
        if (this.selectedFilter.has(entry.type)) {
            retval += 'highlight';
        }
        else if (this.selectedFilter.size > 0) {
            retval += 'filtered';
        }
        return retval;
    }
    /**
     * Setzt die ausgewählten Filter zurück
     */
    unselectAll() {
        this.selectedFilter = new Set();
    }
    /**
     * Schließt den Filter Dialog
     */
    close() {
        this.dialogRef.close(this.selectedFilter);
    }
};
FilterComponent.ctorParameters = () => [
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: Array, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] }
];
FilterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-filter',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./filter.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/filter/filter.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./filter.component.scss */ "./src/app/components/popups/filter/filter.component.scss")).default]
    })
    /**
     * Komponente für den Filter Dialog des QuickAnnotator und KnowledgeBaseLinkers
     */
    ,
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))
], FilterComponent);



/***/ }),

/***/ "./src/app/components/popups/picker/picker.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/components/popups/picker/picker.component.scss ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".contentholder {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.entryDiv {\n  border-radius: 9%;\n  padding: 0.2em;\n  margin: 0.2em;\n  text-align: center;\n  box-shadow: 0 2px 5px 0 rgba(52, 47, 51, 0.63);\n}\n\n.highlight {\n  border: 0.3em solid black;\n}\n\n.header {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9waWNrZXIvcGlja2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9waWNrZXIvcGlja2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUNJLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLDhDQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wb3B1cHMvcGlja2VyL3BpY2tlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50aG9sZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi5lbnRyeURpdiB7XG4gICAgYm9yZGVyLXJhZGl1czogOSU7XG4gICAgcGFkZGluZzogMC4yZW07XG4gICAgbWFyZ2luOiAwLjJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1Miw0Nyw1MSwuNjMpO1xufVxuXG4uaGlnaGxpZ2h0IHtcbiAgICBib3JkZXI6IDAuM2VtIHNvbGlkIGJsYWNrO1xufVxuXG4uaGVhZGVyIHtcbiAgICBmbGV4LWdyb3c6IDA7XG4gICAgZmxleC1zaHJpbms6IDA7XG59XG5cbi5jb250ZW50IHtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIGZsZXgtZ3JvdzogMTtcbn1cblxuOmhvc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBoZWlnaHQ6IDEwMCU7XG59IiwiLmNvbnRlbnRob2xkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi5lbnRyeURpdiB7XG4gIGJvcmRlci1yYWRpdXM6IDklO1xuICBwYWRkaW5nOiAwLjJlbTtcbiAgbWFyZ2luOiAwLjJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3gtc2hhZG93OiAwIDJweCA1cHggMCByZ2JhKDUyLCA0NywgNTEsIDAuNjMpO1xufVxuXG4uaGlnaGxpZ2h0IHtcbiAgYm9yZGVyOiAwLjNlbSBzb2xpZCBibGFjaztcbn1cblxuLmhlYWRlciB7XG4gIGZsZXgtZ3JvdzogMDtcbiAgZmxleC1zaHJpbms6IDA7XG59XG5cbi5jb250ZW50IHtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgZmxleC1ncm93OiAxO1xufVxuXG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/popups/picker/picker.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/components/popups/picker/picker.component.ts ***!
  \**************************************************************/
/*! exports provided: PickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PickerComponent", function() { return PickerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");



let PickerComponent = 
/**
 * Komponente für die Auswahl einer Kategorie des QuickAnnotators
 */
class PickerComponent {
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.annotations = [];
        this.concepts = [];
        this.methapher = false;
        this.metonym = false;
        this.highlightAnnotation = new Map();
        this.lastAnnotations = [];
    }
    ngOnInit() {
        const annotationList = [];
        const conceptList = [];
        const { entries, methapher, metonym, highlights, last } = this.data;
        this.methapher = methapher;
        this.metonym = metonym;
        this.lastAnnotations = last;
        this.highlightAnnotation = new Map(highlights || []);
        for (const entry of entries) {
            if (entry.concept) {
                conceptList.push(entry);
            }
            else {
                annotationList.push(entry);
            }
        }
        this.annotations = annotationList.sort((a, b) => a.name < b.name ? -1 : 1);
        this.concepts = conceptList.sort((a, b) => a.name < b.name ? -1 : 1);
    }
    /**
     * Schließen des Dialogs mit Übergabe der gewählten Kategorie
     */
    selected(entry) {
        this.dialogRef.close([entry, this.methapher, this.metonym]);
    }
    /**
     * Update der Slider für Methapher und Metonym
     */
    sliderChange(id, event) {
        switch (id) {
            case 0:
                this.methapher = event.checked;
                break;
            case 1:
                this.metonym = event.checked;
        }
    }
};
PickerComponent.ctorParameters = () => [
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] }
];
PickerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-picker',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./picker.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/picker/picker.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./picker.component.scss */ "./src/app/components/popups/picker/picker.component.scss")).default]
    })
    /**
     * Komponente für die Auswahl einer Kategorie des QuickAnnotators
     */
    ,
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))
], PickerComponent);



/***/ }),

/***/ "./src/app/components/popups/sem-af-link-picker/picker.component.scss":
/*!****************************************************************************!*\
  !*** ./src/app/components/popups/sem-af-link-picker/picker.component.scss ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".contentholder {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.entryDiv {\n  border-radius: 9%;\n  padding: 0.2em;\n  margin: 0.2em;\n  text-align: center;\n  box-shadow: 0 2px 5px 0 rgba(52, 47, 51, 0.63);\n}\n\n.highlight {\n  border: 0.3em solid black;\n}\n\n.header {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.entry-entity {\n  display: flex;\n}\n\ndiv.entry-entity > div.entity {\n  flex-grow: 1;\n}\n\n.backspace-icon {\n  width: unset;\n  height: unset;\n  font-size: 15px;\n  vertical-align: middle;\n}\n\n.item-ref-button {\n  background-color: #cacaca;\n  border: #a29e9e solid 2px;\n  padding: 6px;\n  border-radius: 7px;\n}\n\n.item-ref {\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  flex: 1;\n  padding: 4px;\n  border-radius: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9zZW0tYWYtbGluay1waWNrZXIvcGlja2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9zZW0tYWYtbGluay1waWNrZXIvcGlja2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURJQTtFQUNJLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLDhDQUFBO0FDREo7O0FESUE7RUFDSSx5QkFBQTtBQ0RKOztBRElBO0VBQ0ksWUFBQTtFQUNBLGNBQUE7QUNESjs7QURJQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtBQ0RKOztBRElBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtBQ0RKOztBREdBO0VBQ0ksYUFBQTtBQ0FKOztBREdBO0VBQ0ksWUFBQTtBQ0FKOztBREdBO0VBQ0ksWUFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7QUNBSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURDQTtFQUNJLHFDQUFBO0VBQ0osT0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0VBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wb3B1cHMvc2VtLWFmLWxpbmstcGlja2VyL3BpY2tlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50aG9sZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cblxuXG4uZW50cnlEaXYge1xuICAgIGJvcmRlci1yYWRpdXM6IDklO1xuICAgIHBhZGRpbmc6IDAuMmVtO1xuICAgIG1hcmdpbjogMC4yZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoNTIsNDcsNTEsLjYzKTtcbn1cblxuLmhpZ2hsaWdodCB7XG4gICAgYm9yZGVyOiAwLjNlbSBzb2xpZCBibGFjaztcbn1cblxuLmhlYWRlciB7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xufVxuXG4uY29udGVudCB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBmbGV4LWdyb3c6IDE7XG59XG5cbjpob3N0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuZGl2LmVudHJ5LWVudGl0eSB7XG4gICAgZGlzcGxheTogZmxleDtcblxufVxuZGl2LmVudHJ5LWVudGl0eSA+IGRpdi5lbnRpdHl7XG4gICAgZmxleC1ncm93OiAxO1xufVxuXG4uYmFja3NwYWNlLWljb257XG4gICAgd2lkdGg6IHVuc2V0O1xuICAgIGhlaWdodDogdW5zZXQ7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG4uaXRlbS1yZWYtYnV0dG9ue1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNjYWNhY2E7XG4gICAgYm9yZGVyOiAjYTI5ZTllIHNvbGlkIDJweDtcbiAgICBwYWRkaW5nOiA2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xufVxuLml0ZW0tcmVme1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7XG5mbGV4OiAxO1xucGFkZGluZzogNHB4O1xuYm9yZGVyLXJhZGl1czogNXB4O1xufSIsIi5jb250ZW50aG9sZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4uZW50cnlEaXYge1xuICBib3JkZXItcmFkaXVzOiA5JTtcbiAgcGFkZGluZzogMC4yZW07XG4gIG1hcmdpbjogMC4yZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1MiwgNDcsIDUxLCAwLjYzKTtcbn1cblxuLmhpZ2hsaWdodCB7XG4gIGJvcmRlcjogMC4zZW0gc29saWQgYmxhY2s7XG59XG5cbi5oZWFkZXIge1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuXG4uY29udGVudCB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGZsZXgtZ3JvdzogMTtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbmRpdi5lbnRyeS1lbnRpdHkge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG5kaXYuZW50cnktZW50aXR5ID4gZGl2LmVudGl0eSB7XG4gIGZsZXgtZ3JvdzogMTtcbn1cblxuLmJhY2tzcGFjZS1pY29uIHtcbiAgd2lkdGg6IHVuc2V0O1xuICBoZWlnaHQ6IHVuc2V0O1xuICBmb250LXNpemU6IDE1cHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5pdGVtLXJlZi1idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2FjYWNhO1xuICBib3JkZXI6ICNhMjllOWUgc29saWQgMnB4O1xuICBwYWRkaW5nOiA2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDdweDtcbn1cblxuLml0ZW0tcmVmIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTtcbiAgZmxleDogMTtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/popups/sem-af-link-picker/picker.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/components/popups/sem-af-link-picker/picker.component.ts ***!
  \**************************************************************************/
/*! exports provided: return_type, find_id, PickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "return_type", function() { return return_type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find_id", function() { return find_id; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PickerComponent", function() { return PickerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tools/sem-af/sem-af.utils */ "./src/app/components/tools/sem-af/sem-af.utils.ts");





var return_type;
(function (return_type) {
    return_type[return_type["change_attribute"] = 0] = "change_attribute";
    return_type[return_type["selected"] = 1] = "selected";
    return_type[return_type["selected_after"] = 2] = "selected_after";
    return_type[return_type["selected_ref"] = 3] = "selected_ref";
    return_type[return_type["selected_ref_multi"] = 4] = "selected_ref_multi";
    return_type[return_type["add_link"] = 5] = "add_link";
    return_type[return_type["remove_selected"] = 6] = "remove_selected";
})(return_type || (return_type = {}));
function find_id(x, id) {
    for (const [key, val] of Object.entries(x)) {
        if (val[id] !== undefined) {
            return val[id];
        }
    }
}
let PickerComponent = 
/**
 * Komponente für die Auswahl einer Kategorie des QuickAnnotators
 */
class PickerComponent {
    constructor(dialog, dialogRef, data) {
        this.dialog = dialog;
        this.dialogRef = dialogRef;
        this.data = data;
        this.annotations = [];
        this.links = [];
        this.highlightAnnotation = new Map();
        this.lastAnnotations = [];
        this.features_json = "";
        this.new_features = {};
        this.text_inputs = [];
        this.current_sel = null;
        this.ft = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["FeatureType"];
    }
    ngOnInit() {
        this.links = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["defaultLinkClasses"];
        const annotationList = [];
        const { entries, highlights, last, features, annoData, text, links, id } = this.data;
        console.log("links.fi", links.filter((x) => { return x.from.id === id || x.to.id === id; }));
        this.lastAnnotations = last;
        this.highlightAnnotation = new Map();
        if (highlights != null) {
            this.highlightAnnotation.set(highlights, true);
        }
        this.features = features;
        console.log("this.datathis.data", this.data);
        this.current_sel = highlights;
        this.links_containing_self = links.filter((x) => { return x.from.id === id || x.to.id === id; });
        console.log("1");
        this.dialogRef.disableClose = true; //disable default close operation
        this.dialogRef.backdropClick().subscribe(result => {
            //this.gather();
            this.dialogRef.close({ type: return_type.change_attribute, data: this.gather() });
        });
        var forms = {};
        console.log("1");
        this.index = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["defaultAnnotationClasses"].findIndex((x) => { return x.type == highlights; });
        if (this.index != -1) {
            const annon = JSON.parse(JSON.stringify(_tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["defaultAnnotationClasses"][this.index]));
            const featues = annon.features;
            console.log("featues", featues, features);
            let reference = [];
            let referenceMulti = [];
            for (const [key, value] of Object.entries(featues)) {
                if (key in ["begin", "end"])
                    continue; // begin and end are not changeable by the user
                /**
                 * Sometimes the an Attribute send by uima is not present but should be
                 * Manily observed with Comment
                 */
                if (!(key in features)) {
                    if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["FeatureType"].Text) {
                        forms[key] = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](value.value);
                        console.log("forms0: ", key, value.value, features);
                        this.text_inputs.push({
                            key: key,
                            value: `${value.value}`,
                            org_string: `${value.value}`,
                        });
                        continue;
                    }
                }
                featues[key].value = features[key];
                const text_value = featues[key].value;
                if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["FeatureType"].Text) {
                    this.text_inputs.push({
                        key: key,
                        value: `${text_value}`,
                        org_string: `${text_value}`,
                    });
                    forms[key] = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](text_value);
                    console.log("forms1: ", key, text_value);
                }
                else if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["FeatureType"].Select) {
                    forms[key] = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](text_value !== "" ? text_value : null);
                    console.log("forms2: ", key, text_value, typeof (text_value));
                }
                else if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["FeatureType"].Reference) {
                    let text_ = null;
                    try {
                        if (text_value !== "null") {
                            const m = find_id(annoData, text_value);
                            if (m) {
                                const { begin, end } = m["features"];
                                text_ = text.slice(begin, end);
                            }
                        }
                    }
                    catch (error) {
                    }
                    reference.push({ feature_name: key, text: text_, text_org: text_, display_name: value.display_name });
                    console.log("forms3: ", key, text_value, typeof (text_value), text_);
                }
                else if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["FeatureType"].ReferenceMulti) {
                    let text_ = [];
                    if (text_value !== null && text_value !== undefined) {
                        let values = text_value;
                        for (const valu of values) {
                            try {
                                const m = find_id(annoData, valu);
                                if (m) {
                                    const { begin, end } = m["features"];
                                    const txt = text.slice(begin, end);
                                    text_.push({ text_org: txt, text: txt, id: valu });
                                }
                            }
                            catch (error) {
                                //console.log("error:",error)
                            }
                        }
                    }
                    referenceMulti.push({ feature_name: key, display_name: value.display_name, values: text_ });
                    console.log("forms4: ", key, text_, text_value);
                }
            }
            console.log("reference", reference);
            console.log("referenceMulti", referenceMulti);
            this.reference = reference;
            this.referenceMulti = referenceMulti;
            this.features_typed = Object.entries(featues);
            this.features_dict = featues;
            const t = featues[0];
            console.log("annon", JSON.stringify(this.text_inputs, null, 4));
            this.profileForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"](forms);
            console.log(this.profileForm);
            this.features_json = JSON.stringify(features, null, 4);
            console.log(this.features_json);
            this.new_features = features;
        }
        else {
            this.profileForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({});
        }
        console.log("1");
        for (const entry of entries) {
            annotationList.push(entry);
        }
        this.annotations = annotationList.sort((a, b) => a.name < b.name ? -1 : 1);
        console.log("1");
    }
    gather(ignore_select = null) {
        if (this.index == -1)
            return {};
        var new_features = {};
        console.log("controls", this.profileForm.controls);
        for (const [key, elem] of Object.entries(this.profileForm.controls)) {
            const val = this.profileForm.get(key).value;
            if (this.profileForm.get(key).dirty) {
                new_features[key] = val;
            }
        }
        for (const refe of this.reference) {
            if (refe.text != refe.text_org && refe.text === null && refe.feature_name !== ignore_select) {
                new_features[refe.feature_name] = null;
            }
        }
        console.log("Gather", JSON.stringify(new_features, null, 4));
        return new_features;
        console.log("Gather", JSON.stringify(new_features, null, 4));
    }
    getBackground(entry) {
        const val = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_4__["defaultAnnotationClasses"].find((x) => x.type == entry.data._type);
        return (val === undefined) ? "#fff" : val.rgb;
    }
    /**
     * Schließen des Dialogs mit Übergabe der gewählten Kategorie
     */
    selected(entry) {
        const e = entry;
        if (this.current_sel === e.type) {
            this.dialogRef.close({ type: return_type.remove_selected, entry: entry, features: this.features });
            return;
        }
        this.dialogRef.close({ type: return_type.selected, entry: entry, features: this.new_features });
    }
    /**
     * Close the Dialog and make the user select start and end of the link
     */
    add_link(entry) {
        this.dialogRef.close({ type: return_type.add_link, entry: entry });
    }
    selected_ref(feature_name) {
        //console.log("xx1",{ type: return_type.change_attribute, data: this.gather() });
        this.dialogRef.close({
            type: return_type.selected_ref,
            data: this.gather(feature_name),
            feature_name: feature_name,
            allowed_type: this.features_dict[feature_name].reference_option
        });
        //console.log("xx1",feature_name);
    }
    selected_ref_multi(feature_name) {
        //console.log("xx1",{ type: return_type.change_attribute, data: this.gather() });
        const feat = this.referenceMulti.find((x) => { return x.feature_name == feature_name; });
        const current_id = feat.values.filter((x) => (x.text !== null)).map((x) => x.id);
        //console.log(current_id)
        this.dialogRef.close({
            type: return_type.selected_ref_multi,
            data: this.gather(feature_name),
            feature_name: feature_name,
            current_ids: current_id,
            allowed_type: this.features_dict[feature_name].reference_option
        });
        //console.log("xx1",feature_name);
    }
    selected_after(entry) {
        this.dialogRef.close({ type: return_type.selected_after, entry: entry, features: this.new_features });
    }
};
PickerComponent.ctorParameters = () => [
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialog"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"],] }] }
];
PickerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-picker',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./picker.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/sem-af-link-picker/picker.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./picker.component.scss */ "./src/app/components/popups/sem-af-link-picker/picker.component.scss")).default]
    })
    /**
     * Komponente für die Auswahl einer Kategorie des QuickAnnotators
     */
    ,
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]))
], PickerComponent);



/***/ }),

/***/ "./src/app/components/popups/sem-af-picker/picker.component.scss":
/*!***********************************************************************!*\
  !*** ./src/app/components/popups/sem-af-picker/picker.component.scss ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".contentholder {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.entryDiv {\n  border-radius: 9%;\n  padding: 0.2em;\n  margin: 0.2em;\n  text-align: center;\n  box-shadow: 0 2px 5px 0 rgba(52, 47, 51, 0.63);\n}\n\n.highlight {\n  border: 0.3em solid black;\n}\n\n.header {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\ndiv.entry-entity {\n  display: flex;\n}\n\ndiv.entry-entity > div.entity {\n  flex-grow: 1;\n}\n\n.backspace-icon {\n  width: unset;\n  height: unset;\n  font-size: 15px;\n  vertical-align: middle;\n}\n\n.item-ref-button {\n  background-color: #cacaca;\n  border: #a29e9e solid 2px;\n  padding: 6px;\n  border-radius: 7px;\n}\n\n.item-ref {\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  flex: 1;\n  padding: 4px;\n  border-radius: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9zZW0tYWYtcGlja2VyL3BpY2tlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9wb3B1cHMvc2VtLWFmLXBpY2tlci9waWNrZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQ0NKOztBRElBO0VBQ0ksaUJBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsOENBQUE7QUNESjs7QURJQTtFQUNJLHlCQUFBO0FDREo7O0FESUE7RUFDSSxZQUFBO0VBQ0EsY0FBQTtBQ0RKOztBRElBO0VBQ0ksZ0JBQUE7RUFDQSxZQUFBO0FDREo7O0FESUE7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0FDREo7O0FER0E7RUFDSSxhQUFBO0FDQUo7O0FER0E7RUFDSSxZQUFBO0FDQUo7O0FER0E7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQTtBQ0FKOztBREVBO0VBQ0kseUJBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0NKOztBRENBO0VBQ0kscUNBQUE7RUFDSixPQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FDRUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3BvcHVwcy9zZW0tYWYtcGlja2VyL3BpY2tlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50aG9sZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cblxuXG4uZW50cnlEaXYge1xuICAgIGJvcmRlci1yYWRpdXM6IDklO1xuICAgIHBhZGRpbmc6IDAuMmVtO1xuICAgIG1hcmdpbjogMC4yZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoNTIsNDcsNTEsLjYzKTtcbn1cblxuLmhpZ2hsaWdodCB7XG4gICAgYm9yZGVyOiAwLjNlbSBzb2xpZCBibGFjaztcbn1cblxuLmhlYWRlciB7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xufVxuXG4uY29udGVudCB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBmbGV4LWdyb3c6IDE7XG59XG5cbjpob3N0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuZGl2LmVudHJ5LWVudGl0eSB7XG4gICAgZGlzcGxheTogZmxleDtcblxufVxuZGl2LmVudHJ5LWVudGl0eSA+IGRpdi5lbnRpdHl7XG4gICAgZmxleC1ncm93OiAxO1xufVxuXG4uYmFja3NwYWNlLWljb257XG4gICAgd2lkdGg6IHVuc2V0O1xuICAgIGhlaWdodDogdW5zZXQ7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG4uaXRlbS1yZWYtYnV0dG9ue1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNjYWNhY2E7XG4gICAgYm9yZGVyOiAjYTI5ZTllIHNvbGlkIDJweDtcbiAgICBwYWRkaW5nOiA2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xufVxuLml0ZW0tcmVme1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7XG5mbGV4OiAxO1xucGFkZGluZzogNHB4O1xuYm9yZGVyLXJhZGl1czogNXB4O1xufSIsIi5jb250ZW50aG9sZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4uZW50cnlEaXYge1xuICBib3JkZXItcmFkaXVzOiA5JTtcbiAgcGFkZGluZzogMC4yZW07XG4gIG1hcmdpbjogMC4yZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSg1MiwgNDcsIDUxLCAwLjYzKTtcbn1cblxuLmhpZ2hsaWdodCB7XG4gIGJvcmRlcjogMC4zZW0gc29saWQgYmxhY2s7XG59XG5cbi5oZWFkZXIge1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuXG4uY29udGVudCB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGZsZXgtZ3JvdzogMTtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbmRpdi5lbnRyeS1lbnRpdHkge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG5kaXYuZW50cnktZW50aXR5ID4gZGl2LmVudGl0eSB7XG4gIGZsZXgtZ3JvdzogMTtcbn1cblxuLmJhY2tzcGFjZS1pY29uIHtcbiAgd2lkdGg6IHVuc2V0O1xuICBoZWlnaHQ6IHVuc2V0O1xuICBmb250LXNpemU6IDE1cHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5pdGVtLXJlZi1idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2FjYWNhO1xuICBib3JkZXI6ICNhMjllOWUgc29saWQgMnB4O1xuICBwYWRkaW5nOiA2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDdweDtcbn1cblxuLml0ZW0tcmVmIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTtcbiAgZmxleDogMTtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/popups/sem-af-picker/picker.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/components/popups/sem-af-picker/picker.component.ts ***!
  \*********************************************************************/
/*! exports provided: return_type, find_id, PickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "return_type", function() { return return_type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find_id", function() { return find_id; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PickerComponent", function() { return PickerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var src_app_components_popups_sem_af_link_picker_picker_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/components/popups/sem-af-link-picker/picker.component */ "./src/app/components/popups/sem-af-link-picker/picker.component.ts");
/* harmony import */ var _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../tools/sem-af/sem-af.utils */ "./src/app/components/tools/sem-af/sem-af.utils.ts");






var return_type;
(function (return_type) {
    return_type[return_type["change_attribute"] = 0] = "change_attribute";
    return_type[return_type["selected"] = 1] = "selected";
    return_type[return_type["selected_after"] = 2] = "selected_after";
    return_type[return_type["selected_ref"] = 3] = "selected_ref";
    return_type[return_type["selected_ref_multi"] = 4] = "selected_ref_multi";
    return_type[return_type["add_link"] = 5] = "add_link";
    return_type[return_type["remove_selected"] = 6] = "remove_selected";
})(return_type || (return_type = {}));
function find_id(x, id) {
    for (const [key, val] of Object.entries(x)) {
        if (val[id] !== undefined) {
            return val[id];
        }
    }
}
let PickerComponent = 
/**
 * Komponente für die Auswahl einer Kategorie des QuickAnnotators
 */
class PickerComponent {
    constructor(dialog, dialogRef, data) {
        this.dialog = dialog;
        this.dialogRef = dialogRef;
        this.data = data;
        this.annotations = [];
        this.links = [];
        this.highlightAnnotation = new Map();
        this.lastAnnotations = [];
        this.features_json = "";
        this.new_features = {};
        this.text_inputs = [];
        this.current_sel = null;
        this.ft = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"];
    }
    /* Function to open the Link picker menu via button*/
    openDialog() {
        let dialogRef = this.dialog.open(src_app_components_popups_sem_af_link_picker_picker_component__WEBPACK_IMPORTED_MODULE_4__["PickerComponent"], {});
    }
    ngOnInit() {
        this.links = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["defaultLinkClasses"];
        const annotationList = [];
        const { entries, highlights, last, features, annoData, text, links, id } = this.data;
        console.log("links.fi", links.filter((x) => { return x.from.id === id || x.to.id === id; }));
        this.lastAnnotations = last;
        this.highlightAnnotation = new Map();
        if (highlights != null) {
            this.highlightAnnotation.set(highlights, true);
        }
        this.features = features;
        console.log("this.datathis.data", this.data);
        this.current_sel = highlights;
        this.links_containing_self = links.filter((x) => { return x.from.id === id || x.to.id === id; });
        console.log("1");
        this.dialogRef.disableClose = true; //disable default close operation
        this.dialogRef.backdropClick().subscribe(result => {
            //this.gather();
            this.dialogRef.close({ type: return_type.change_attribute, data: this.gather() });
        });
        var forms = {};
        console.log("1");
        const feature_visu = [];
        this.index = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["defaultAnnotationClasses"].findIndex((x) => { return x.type == highlights; });
        if (this.index != -1) {
            const annon = JSON.parse(JSON.stringify(_tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["defaultAnnotationClasses"][this.index]));
            const featues = annon.features;
            for (const [key, value] of Object.entries(featues)) {
                if (key in ["begin", "end"])
                    continue; // begin and end are not changeable by the user
                if (!(Object.keys(features).includes(key))) {
                    features[key] = null;
                }
                const text_value = features[key];
                if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].Text) {
                    feature_visu.push(this.createTextInput(key, text_value, featues[key].display_name, forms));
                }
                else if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].Select) {
                    feature_visu.push(this.createSelectInput(key, text_value, featues[key].display_name, forms, value));
                }
                else if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].Reference) {
                    let text_ = null;
                    let color = null;
                    try {
                        if (text_value !== "null") {
                            const m = find_id(annoData, text_value);
                            if (m) {
                                const { begin, end } = m["features"];
                                text_ = text.slice(begin, end);
                                color = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["defaultAnnotationClasses"].find((x) => x.type === m["_type"]).rgb;
                            }
                        }
                    }
                    catch (error) {
                    }
                    feature_visu.push({
                        type: _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].Reference,
                        key: key,
                        display_name: value.display_name,
                        data: { feature_name: key, text: text_, text_org: text_, display_name: value.display_name, color: color }
                    });
                }
                else if (featues[key].type == _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].ReferenceMulti) {
                    let text_ = [];
                    if (text_value !== null && text_value !== undefined) {
                        let values = text_value;
                        let color = null;
                        for (const valu of values) {
                            try {
                                const m = find_id(annoData, valu);
                                if (m) {
                                    const { begin, end } = m["features"];
                                    const txt = text.slice(begin, end);
                                    color = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["defaultAnnotationClasses"].find((x) => x.type === m["_type"]).rgb;
                                    text_.push({ text_org: txt, text: txt, id: valu, color: color });
                                }
                            }
                            catch (error) {
                                //console.log("error:",error)
                            }
                        }
                    }
                    feature_visu.push({
                        type: _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].ReferenceMulti,
                        key: key,
                        display_name: value.display_name,
                        data: { feature_name: key, display_name: value.display_name, values: text_ }
                    });
                }
            }
            this.feature_visu = feature_visu;
            this.features_dict = featues;
            console.log("feature_visu", feature_visu);
            this.profileForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"](forms);
            this.new_features = features;
        }
        else {
            this.profileForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({});
        }
        for (const entry of entries) {
            annotationList.push(entry);
        }
        this.annotations = annotationList.sort((a, b) => a.name < b.name ? -1 : 1);
    }
    createTextInput(key, value, display_name, forms) {
        const t = {
            key: key, data: {
                org_value: `${value}`,
                value: `${value}`
            },
            display_name: display_name,
            type: _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].Text
        };
        forms[key] = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](value);
        return t;
    }
    createSelectInput(key, value, display_name, forms, feature) {
        const t = {
            key: key,
            data: feature.select_option,
            display_name: display_name,
            type: _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].Select
        };
        forms[key] = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](value !== "" ? value : null);
        return t;
    }
    createReferenceInput(key, value, display_name, forms, feature) {
        const t = {
            key: key,
            data: feature.select_option,
            display_name: display_name,
            type: _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].Reference
        };
        forms[key] = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](value !== "" ? value : null);
        return t;
    }
    onSelectLink(id, event) {
        event.preventDefault();
        //this.selectionLinkChanged.emit(id)
    }
    gather(ignore_select = null) {
        if (this.index == -1)
            return {};
        var new_features = {};
        console.log("controls", this.profileForm.controls);
        for (const [key, elem] of Object.entries(this.profileForm.controls)) {
            const val = this.profileForm.get(key).value;
            if (this.profileForm.get(key).dirty) {
                new_features[key] = val;
            }
        }
        for (const fe of this.feature_visu) {
            if (fe.type === _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].Reference) {
                const refe = fe.data;
                if (refe.text != refe.text_org && refe.text === null && refe.feature_name !== ignore_select) {
                    new_features[refe.feature_name] = null;
                }
            }
            if (fe.type === _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["FeatureType"].ReferenceMulti) {
                const non_removed = fe.data.values.filter((x) => x.text !== null);
                if (non_removed.length !== fe.data.length) {
                    new_features[fe.key] = non_removed.map((x) => x.id);
                }
            }
        }
        return new_features;
    }
    getBackground(entry) {
        const val = _tools_sem_af_sem_af_utils__WEBPACK_IMPORTED_MODULE_5__["defaultAnnotationClasses"].find((x) => x.type == entry.data._type);
        return (val === undefined) ? "#fff" : val.rgb;
    }
    /**
     * Schließen des Dialogs mit Übergabe der gewählten Kategorie
     */
    selected(entry) {
        const e = entry;
        if (this.current_sel === e.type) {
            this.dialogRef.close({ type: return_type.remove_selected, entry: entry, features: this.features });
            return;
        }
        this.dialogRef.close({ type: return_type.selected, entry: entry, features: this.new_features });
    }
    /**
     * Close the Dialog and make the user select start and end of the link
     */
    add_link(entry) {
        this.dialogRef.close({ type: return_type.add_link, entry: entry });
    }
    selected_ref(feature_name) {
        //console.log("xx1",{ type: return_type.change_attribute, data: this.gather() });
        this.dialogRef.close({
            type: return_type.selected_ref,
            data: this.gather(feature_name),
            feature_name: feature_name,
            allowed_type: this.features_dict[feature_name].reference_option
        });
        //console.log("xx1",feature_name);
    }
    selected_ref_multi(feature_name) {
        //console.log("xx1",{ type: return_type.change_attribute, data: this.gather() });
        const feat = this.feature_visu.find((x) => { return x.key == feature_name; });
        const current_id = feat.data.values.filter((x) => (x.text !== null)).map((x) => x.id);
        //console.log(current_id)
        this.dialogRef.close({
            type: return_type.selected_ref_multi,
            data: this.gather(feature_name),
            feature_name: feature_name,
            current_ids: current_id,
            allowed_type: this.features_dict[feature_name].reference_option
        });
        //console.log("xx1",feature_name);
    }
    selected_after(entry) {
        this.dialogRef.close({ type: return_type.selected_after, entry: entry, features: this.new_features });
    }
};
PickerComponent.ctorParameters = () => [
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialog"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"],] }] }
];
PickerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-picker',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./picker.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/popups/sem-af-picker/picker.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./picker.component.scss */ "./src/app/components/popups/sem-af-picker/picker.component.scss")).default]
    })
    /**
     * Komponente für die Auswahl einer Kategorie des QuickAnnotators
     */
    ,
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]))
], PickerComponent);



/***/ }),

/***/ "./src/app/components/tools/knowledge-base/knowledge-base.component.scss":
/*!*******************************************************************************!*\
  !*** ./src/app/components/tools/knowledge-base/knowledge-base.component.scss ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".toolbar {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.content {\n  overflow-y: auto;\n  height: 60%;\n  flex-grow: 1;\n}\n\n.footer {\n  overflow-y: auto;\n  height: 40%;\n  flex-grow: 1;\n}\n\n.fillWidth {\n  width: 98%;\n  margin: 1%;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  height: 100%;\n}\n\ntr.example-detail-row {\n  height: 0;\n}\n\n.example-element-row td {\n  border-bottom-width: 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3Rvb2xzL2tub3dsZWRnZS1iYXNlL2tub3dsZWRnZS1iYXNlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL3Rvb2xzL2tub3dsZWRnZS1iYXNlL2tub3dsZWRnZS1iYXNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLFVBQUE7RUFDQSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxvQkFBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNFLFNBQUE7QUNDRjs7QURFQTtFQUNFLHNCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Rvb2xzL2tub3dsZWRnZS1iYXNlL2tub3dsZWRnZS1iYXNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRvb2xiYXIge1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBmbGV4LXNocmluazogMDtcbn1cblxuLmNvbnRlbnQge1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgaGVpZ2h0OiA2MCU7XG4gICAgZmxleC1ncm93OiAxO1xufVxuXG4uZm9vdGVyIHtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIGhlaWdodDogNDAlO1xuICAgIGZsZXgtZ3JvdzogMTtcbn1cblxuLmZpbGxXaWR0aCB7XG4gICAgd2lkdGg6IDk4JTtcbiAgICBtYXJnaW46IDElO1xufVxuXG46aG9zdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxudHIuZXhhbXBsZS1kZXRhaWwtcm93IHtcbiAgaGVpZ2h0OiAwO1xufVxuXG4uZXhhbXBsZS1lbGVtZW50LXJvdyB0ZCB7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XG59IiwiLnRvb2xiYXIge1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuXG4uY29udGVudCB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGhlaWdodDogNjAlO1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbi5mb290ZXIge1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBoZWlnaHQ6IDQwJTtcbiAgZmxleC1ncm93OiAxO1xufVxuXG4uZmlsbFdpZHRoIHtcbiAgd2lkdGg6IDk4JTtcbiAgbWFyZ2luOiAxJTtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG50ci5leGFtcGxlLWRldGFpbC1yb3cge1xuICBoZWlnaHQ6IDA7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtcm93IHRkIHtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/tools/knowledge-base/knowledge-base.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/components/tools/knowledge-base/knowledge-base.component.ts ***!
  \*****************************************************************************/
/*! exports provided: KnowledgeBaseComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KnowledgeBaseComponent", function() { return KnowledgeBaseComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_document_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/document.service */ "./src/app/services/document.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
/* harmony import */ var src_app_services_websocket_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/websocket.service */ "./src/app/services/websocket.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils */ "./src/app/components/tools/utils.ts");
/* harmony import */ var _popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../popups/filter/filter.component */ "./src/app/components/popups/filter/filter.component.ts");
/* harmony import */ var _knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./knowledge-base.utils */ "./src/app/components/tools/knowledge-base/knowledge-base.utils.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm2015/table.js");
/* harmony import */ var _knowledge_picker_knowledge_picker_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./knowledge-picker/knowledge-picker.component */ "./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.ts");
/* harmony import */ var _menu_tool_bar_tool_bar_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../menu/tool-bar/tool-bar.component */ "./src/app/components/menu/tool-bar/tool-bar.component.ts");














let KnowledgeBaseComponent = 
/**
 * Komponente für die Darstellung des KnowledgeBaseLinker Werkzeuges
 */
class KnowledgeBaseComponent {
    constructor(router, route, http, menuService, documentService, websocketService, dialog) {
        this.router = router;
        this.route = route;
        this.http = http;
        this.menuService = menuService;
        this.documentService = documentService;
        this.websocketService = websocketService;
        this.dialog = dialog;
        this.data = [];
        this.annoData = {};
        this.pageSizes = [35, 60, 100, 150, 250];
        this.pageSize = this.pageSizes[0];
        this.activeFilterRaw = [];
        this.activeFilters = [];
        this.annotationDataSource = [];
        this.columns = ['icon', 'source'];
        this.toolbarMenu = [];
        this.subscriptions = [];
        this.fingerprints = new Map();
        this.detailMap = new Map();
        this.entityMap = new Map();
    }
    ngOnInit() {
        this.menuService.hideMenubar();
        this.generateData();
        this.genearteToolbarMenu();
        // Query Parameter der URL auslesen um darüber Dokument und View zu laden
        const paramObserver = {
            next: (params) => {
                this.casId = params.cas;
                this.viewId = params.view;
                this.generateData();
            }
        };
        this.route.queryParams.subscribe(paramObserver);
        // Auf Änderungen des Dokuments reagieren
        const changeObserver = {
            next: () => {
                this.generateData();
                this.generateAnnotationDataSource();
            },
        };
        this.subscriptions.push(this.documentService.casChanged.subscribe(changeObserver));
    }
    ngOnDestroy() {
        // Beende die momentanen Subscriptions
        for (const subscription of this.subscriptions) {
            subscription.unsubscribe();
        }
    }
    /**
     * Navigiere zur Dokumenten Ansicht
     */
    navigateDocument() {
        this.router.navigate(['document'], { queryParams: { cas: this.casId, view: this.viewId } });
    }
    /**
     * Ändere die Anzahl der pro Seite dargestellten Token
     */
    changePageSize(num) {
        this.pageSize = num;
    }
    /**
     * Öffnen den Filter Dialog und aktualisiere die Filterung
     */
    openFilterSelection() {
        const filterData = {
            type: 'single',
            data: Object.entries(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["dataSources"]).map(([name, { color }]) => ({ name, rgb: color, type: name }))
        };
        const filter = this.dialog.open(_popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_8__["FilterComponent"], {
            data: [filterData, this.activeFilterRaw],
            height: 'inherit'
        });
        filter.afterClosed().subscribe((result) => {
            if (result) {
                this.activeFilterRaw = Array.from(result);
                const toAdd = [];
                // Ergänze sämtliche Sprachen für die gewählten Filter
                if (result.has('Wikipedia')) {
                    toAdd.push(...['Wikipedia DE', 'Wikipedia EN', 'Wikipedia FR', 'Wikipedia ES']);
                }
                if (result.has('Babelfy')) {
                    toAdd.push(...['Babelfy DE', 'Babelfy EN']);
                }
                if (result.has('Wiktionary')) {
                    toAdd.push(...['Wiktionary DE', 'Wiktionary EN', 'Wiktionary FR', 'Wiktionary ES']);
                }
                for (const add of toAdd) {
                    result.add(add);
                }
                this.activeFilters = Array.from(result);
            }
        });
    }
    /**
     * Markiere ein Token als ausgewähltes Element
     */
    tokenSelect(data) {
        if (!this.selectedElement || !data || this.selectedElement.id !== data.id) {
            this.selectedElement = data;
            this.generateAnnotationDataSource();
        }
    }
    /**
     * Speichere die Änderungen am Dokument
     */
    saveCas() {
        this.documentService.saveCas(this.casId);
    }
    /**
     * Erzeuge ein Multitoken zwischen den im Tupel übergebenen IDs
     */
    createMultiToken([fstId, sndId]) {
        const from = this.entityMap.get(fstId);
        const to = this.entityMap.get(sndId);
        if (!from || !to) {
            // IDs waren ungültig
            return;
        }
        // Bestimmte den Textabschnitt, der als Multitoken zusammengefasst werden soll
        const begin = Math.min(+from.features.begin, +from.features.begin);
        const end = Math.min(+to.features.end, +to.features.end);
        console.log('coords', begin, end);
        const possibles = Object.values(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_7__["ttEntityType"]]).map((entry) => Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getTypedAnnotation"])(entry));
        const children = [];
        console.log('possibles', possibles);
        for (const entry of possibles) {
            if (!entry) {
                continue;
            }
            if (+entry.features.begin >= begin && +entry.features.end <= end) {
                children.push(entry);
            }
        }
        console.log('children', children);
        const queue = [];
        // Entferne alle Annotationen der bisherigen Tokens
        for (const child of children) {
            queue.push(...Object(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["createRemoveKnowledgeQueue"])(child, queue.length));
            // Entferne bisherige Tokens und erzeuge das Multitoken
            queue.push({
                cmd: 'remove',
                data: {
                    bid: `_b${queue.length}_`,
                    addr: `${child._addr}`,
                }
            });
        }
        queue.push({
            cmd: 'create',
            data: {
                bid: `_b${queue.length}_`,
                features: {
                    begin,
                    end,
                },
                _type: _utils__WEBPACK_IMPORTED_MODULE_7__["ttEntityType"],
            },
        });
        this.sendBatch(queue);
    }
    /**
     * Löse ein Multitoken wieder in einzelne Tokens auf
     */
    removeMultiToken(id) {
        const ttEntity = this.entityMap.get(id);
        if (!ttEntity || !ttEntity.features.children) {
            // ID ungültig oder der Eintrag ist kein Multitoken
            return;
        }
        // Entferne die Annotationen des Multitoken
        const queue = Object(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["createRemoveKnowledgeQueue"])(ttEntity);
        // Entferne das Multitoken
        queue.push({
            cmd: 'remove',
            data: {
                bid: `_b${queue.length}_`,
                addr: id,
            }
        });
        // Stelle die einzelnen Token wieder her
        for (const child of ttEntity.features.children) {
            const token = Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getAnnotation"])(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_7__["tokenType"]][child]);
            if (!token) {
                continue;
            }
            queue.push({
                cmd: 'create',
                data: {
                    bid: `_b${queue.length}_`,
                    features: {
                        begin: `${token.features.begin}`,
                        end: `${token.features.end}`,
                    },
                    _type: _utils__WEBPACK_IMPORTED_MODULE_7__["ttEntityType"],
                }
            });
        }
        this.sendBatch(queue);
    }
    /**
     * Ob ein Eintrag der Annotationsliste aufgeklappt ist oder nicht
     */
    isExpanded(idx, row) {
        return this.expandedElement && row.source === this.expandedElement.source && row.identifier === this.expandedElement.identifier;
    }
    /**
     * Klappe den Eintrag der Annotationsliste auf falls er geschlossen ist, oder schließe ihn anderenfalls
     */
    expand(row) {
        if (this.expandedElement && row.source === this.expandedElement.source && row.identifier === this.expandedElement.identifier) {
            this.expandedElement = undefined;
        }
        else {
            this.expandedElement = row;
        }
        this.table.renderRows();
    }
    /**
     * Reagiere auf die Auswahl eines Kontextmenü Eintrages der Toolbar
     */
    onMenuSelect(data) {
        const [id] = data;
        switch (id) {
            case 'save':
                this.saveCas();
                break;
            case 'filter':
                this.openFilterSelection();
                break;
            case _menu_tool_bar_tool_bar_component__WEBPACK_IMPORTED_MODULE_13__["returnEventId"]:
                this.navigateDocument();
                break;
            default:
                const num = Number.parseInt(id, 10);
                if (this.pageSizes.some((size) => size === num)) {
                    this.pageSize = num;
                    this.genearteToolbarMenu();
                }
                break;
        }
    }
    /**
     * Lade die Daten des Eintrags der Annotationsliste
     */
    fillExpansionData(data) {
        if (this.detailMap.has(data.addr)) {
            // Fall: die Daten wurden bereits einmal geladen
            data.extended = this.detailMap.get(data.addr);
        }
        else {
            // Fall: die Daten müssen neu angefragt werden
            const extend = {
                image: '',
                label: '',
                text: '',
            };
            for (const [dataType, dataUrl, method] of Object(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["getDataUrls"])(data.source, data.identifier)) {
                const observer = {
                    next: (res) => Object(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["handleDataRequest"])(dataType, data.source, res, extend),
                };
                if (method === 'jsonp') {
                    this.http.jsonp(dataUrl, 'callback').subscribe(observer);
                }
                else if (method === 'get') {
                    this.http.get(dataUrl).subscribe(observer);
                }
            }
            this.detailMap.set(data.addr, extend);
            data.extended = extend;
        }
    }
    generateAnnotationDataSource() {
        const selected = this.selectedElement;
        const annoData = [];
        if (selected != null && Array.isArray(selected.data.features.knowledgeEntries)) {
            for (const entry of selected.data.features.knowledgeEntries) {
                const knowledge = Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getAnnotation"])(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_7__["knowledgeType"]][entry]);
                if (!knowledge) {
                    continue;
                }
                const data = {
                    addr: knowledge._addr,
                    userAnnotation: this.fingerprints.has(`${knowledge._addr}`),
                    source: knowledge.features.source,
                    identifier: knowledge.features.identifier,
                    reference: knowledge.features.reference,
                    icon: Object(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["getImage"])(knowledge.features.source),
                    rgb: 'black',
                };
                this.fillExpansionData(data);
                data.rgb = Object(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["getColorCoding"])(data.source);
                annoData.push(data);
            }
        }
        this.annotationDataSource = annoData;
    }
    /**
     * Entferne eine Annotation
     */
    removeAnnotation(data) {
        const elem = this.selectedElement.data;
        const entries = elem.features.knowledgeEntries;
        if (!entries || !Array.isArray(entries) || !entries.some((e) => e === data.addr)) {
            return;
        }
        const queue = [{
                cmd: 'remove',
                data: {
                    addr: `${data.addr}`,
                    bid: '_bid0_',
                }
            },
            {
                cmd: 'edit',
                data: {
                    addr: `${elem._addr}`,
                    bid: '_bid1_',
                    features: {
                        knowledgeEntries: entries.filter((e) => e !== data.addr),
                    }
                }
            }];
        this.sendBatch(queue);
    }
    /**
     * Erstelle eine Annotation über den Auswahl Dialog
     */
    createAnnotation() {
        const selected = this.selectedElement;
        const observer = {
            next: (res) => {
                if (!res) {
                    return;
                }
                const [{ identifier, reference }, source] = res;
                if (!identifier || !reference || !source) {
                    return;
                }
                this.lastSource = source;
                const queue = [{
                        cmd: 'create',
                        data: {
                            bid: '_b0_',
                            features: {
                                identifier,
                                reference,
                                source,
                            },
                            _type: _utils__WEBPACK_IMPORTED_MODULE_7__["knowledgeType"],
                        }
                    },
                    {
                        cmd: 'append_array',
                        data: {
                            bid: '_b1_',
                            addr: selected.id,
                            featureAddr: '_b0_',
                            featureName: 'knowledgeEntries'
                        }
                    }];
                this.sendBatch(queue);
            }
        };
        const picker = this.dialog.open(_knowledge_picker_knowledge_picker_component__WEBPACK_IMPORTED_MODULE_12__["KnowledgePickerComponent"], {
            data: { text: this.selectedElement.label, label: this.lastSource },
            height: 'inherit'
        });
        picker.afterClosed().subscribe(observer);
    }
    sendBatch(queue) {
        this.websocketService.send({
            cmd: 'work_batch',
            data: {
                casId: this.casId,
                options: [{ privateSession: false }],
                queue,
                toolName: 'nel2panel',
                view: this.viewId,
            }
        });
    }
    /**
     * Verarbeite die geladenen Daten für die Darstellung innerhalb des Werkzeuges
     */
    generateData() {
        this.tool = this.documentService.currentTool;
        if (!this.tool || !this.documentService.currentCAS) {
            // Keine Daten geladen
            return;
        }
        const text = this.documentService.currentCAS.text;
        const ttEntities = Object.values(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_7__["ttEntityType"]] || {})
            .map((e) => Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getAnnotation"])(e));
        const tokens = Object.values(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_7__["tokenType"]] || {})
            .map((e) => Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getAnnotation"])(e));
        Object(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["addChildData"])(ttEntities, tokens);
        const data = [];
        const annotations = {};
        for (const fingerprint of Object.values(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_7__["fingerprintType"]] || {})) {
            const elem = Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getTypedAnnotation"])(fingerprint);
            if (!elem) {
                continue;
            }
            // Merke dir Fingerprints für Bestimmung von manuell getätigten Annotationen
            this.fingerprints.set(`${elem.features.reference}`, elem);
        }
        for (const ttEntity of ttEntities) {
            if (!ttEntity) {
                continue;
            }
            const id = `${ttEntity._addr}`;
            this.entityMap.set(id, ttEntity);
            const chData = {
                label: text.slice(ttEntity.features.begin, ttEntity.features.end),
                id,
                data: ttEntity,
            };
            if (this.selectedElement != null && this.selectedElement.id === chData.id) {
                this.selectedElement = chData;
            }
            data.push(chData);
            // Ergänze die KnowledgeBaseLinker Annotationen
            const knowledgeEntries = ttEntity.features.knowledgeEntries;
            if (knowledgeEntries != null && Array.isArray(knowledgeEntries)) {
                for (const entryId of knowledgeEntries) {
                    const entryAddr = `${entryId}`;
                    const entry = Object(_utils__WEBPACK_IMPORTED_MODULE_7__["getAnnotation"])(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_7__["knowledgeType"]][entryAddr]);
                    if (entry == null) {
                        continue;
                    }
                    if (!annotations[ttEntity._addr]) {
                        annotations[ttEntity._addr] = {
                            rgb: [],
                            badge: 0,
                            ref: `${ttEntity._addr}`,
                            annotations: {},
                        };
                    }
                    const annoData = annotations[ttEntity._addr];
                    const type = entry.features.source;
                    const color = Object(_knowledge_base_utils__WEBPACK_IMPORTED_MODULE_9__["getColorCoding"])(type);
                    if (color) {
                        annoData.rgb.push(color);
                    }
                    if (!annoData.annotations[type]) {
                        annoData.annotations[type] = [];
                    }
                    annoData.annotations[type].push({ id: entryAddr, fp: this.fingerprints.has(entryAddr) });
                    if (this.fingerprints.has(entryAddr)) {
                        ++annoData.badge;
                    }
                }
            }
        }
        this.data = data.sort((a, b) => a.data.features.begin - b.data.features.begin);
        this.annoData = annotations;
    }
    /**
     * Befülle das Kontextmenü der Toolbar
     */
    genearteToolbarMenu() {
        const items = {
            type: 'listing',
            id: 'items',
            name: 'TOOL-KNOWLEDGEBASE.ITEMS',
            list: [],
        };
        for (const size of this.pageSizes) {
            items.list.push({
                type: 'action',
                id: `${size}`,
                name: `${size}`,
                selected: size === this.pageSize,
            });
        }
        const retval = [items];
        retval.push({
            type: 'action',
            id: 'filter',
            name: 'TOOL-KNOWLEDGEBASE.FILTER',
            icon: 'filter_list',
        });
        retval.push({
            type: 'action',
            id: 'save',
            name: 'TOOL-KNOWLEDGEBASE.SAVE',
            icon: 'save',
        });
        this.toolbarMenu = retval;
    }
};
KnowledgeBaseComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_10__["HttpClient"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__["MenuService"] },
    { type: src_app_services_document_service__WEBPACK_IMPORTED_MODULE_2__["DocumentService"] },
    { type: src_app_services_websocket_service__WEBPACK_IMPORTED_MODULE_5__["WebsocketService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_table__WEBPACK_IMPORTED_MODULE_11__["MatTable"], { static: true })
], KnowledgeBaseComponent.prototype, "table", void 0);
KnowledgeBaseComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-knowledge-base',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./knowledge-base.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/knowledge-base/knowledge-base.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./knowledge-base.component.scss */ "./src/app/components/tools/knowledge-base/knowledge-base.component.scss")).default]
    })
    /**
     * Komponente für die Darstellung des KnowledgeBaseLinker Werkzeuges
     */
], KnowledgeBaseComponent);



/***/ }),

/***/ "./src/app/components/tools/knowledge-base/knowledge-base.utils.ts":
/*!*************************************************************************!*\
  !*** ./src/app/components/tools/knowledge-base/knowledge-base.utils.ts ***!
  \*************************************************************************/
/*! exports provided: dataSources, getColorCoding, getImage, getSources, getDataUrls, handleDataRequest, addChildData, createRemoveKnowledgeQueue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataSources", function() { return dataSources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getColorCoding", function() { return getColorCoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getImage", function() { return getImage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSources", function() { return getSources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDataUrls", function() { return getDataUrls; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handleDataRequest", function() { return handleDataRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addChildData", function() { return addChildData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRemoveKnowledgeQueue", function() { return createRemoveKnowledgeQueue; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

/**
 * Farb Kodierung und Bild der einzelnen Wissensdatenbanken
 */
const dataSources = {
    Wikipedia: {
        color: '#FF3333', image: 'assets/dataSources/32px-Wikipedia-logo.webp'
    },
    GeoNames: {
        color: '#99FF33', image: 'assets/dataSources/geonames.png'
    },
    GermaNet: {
        color: '#FF3399', image: ''
    },
    WikiData: {
        color: '#3399FF', image: 'assets/dataSources/40px-Wikidata-logo.webp'
    },
    Babelfy: {
        color: '#FFFF33', image: 'assets/dataSources/babelfy.png'
    },
    Wiktionary: {
        color: '#FF9933', image: 'assets/dataSources/32px-Wiktionary-logo.webp'
    },
    'Deutsche Nationalbibliothek': {
        color: '#33FFFF', image: ''
    },
    BIOFid: {
        color: '#B266FF', image: 'assets/dataSources/logo_fid_biodiversity_en.png'
    },
};
/**
 * Gibt einen Farbwert für die Wissensdatenbank als String zurück
 */
function getColorCoding(source) {
    for (const [key, { color }] of Object.entries(dataSources)) {
        if (source.startsWith(key)) {
            return color;
        }
    }
    return '';
}
/**
 * Gibt einen Bild-Url für die Wissensdatenbank als String zurück
 */
function getImage(source) {
    for (const [key, { image }] of Object.entries(dataSources)) {
        if (source.startsWith(key)) {
            return image;
        }
    }
    return '';
}
/**
 * Gibt eine Liste aller verfügbaren Wissensdatenbanken als String Array zurück
 */
function getSources() {
    return Object.keys(dataSources);
}
/**
 * Gibt URLs für das Laden von Informationen aus der entsprechenden Wissensdatenbank zurück
 */
function getDataUrls(source, id) {
    let sourceName;
    for (const src of Object.keys(dataSources)) {
        if (source.startsWith(src)) {
            sourceName = src;
            break;
        }
    }
    if (!sourceName) {
        return;
    }
    let lan;
    if (['Wikipedia', 'Babelfy', 'Wiktionary'].some((src) => src === sourceName) && !source.endsWith(sourceName)) {
        lan = source.substring(source.length - 2).toLowerCase();
    }
    // tslint:disable: max-line-length
    switch (sourceName) {
        case 'WikiData':
            return [
                ['data', `https://www.wikidata.org/w/api.php?action=wbgetentities&props=labels|descriptions&ids=${id}&languages=en&format=json&formatversion=2`, 'jsonp'],
                ['img', `https://www.wikidata.org/w/api.php?action=query&titles=${id}&prop=pageimages&pithumbsize=100&format=json`, 'jsonp'],
            ];
        case 'Wiktionary':
            return [
                ['data', `https://${lan || 'de'}.wiktionary.org/w/api.php?action=query&pageids=${id}&format=json&prop=pageimages|extracts|pageprops&exsentences=30&explaintext=&ppprop=wikibase_item&pithumbsize=100&redirects=1&formatversion=2`, 'jsonp']
            ];
        case 'Wikipedia':
            return [
                ['dataAndImg', `https://${lan || 'de'}.wikipedia.org/w/api.php?action=query&pageids=${id}&format=json&prop=pageimages|extracts|pageprops&exsentences=30&explaintext=&ppprop=wikibase_item&pithumbsize=100&redirects=1&formatversion=2`, 'jsonp']
            ];
        case 'GeoNames':
            return [
                ['data', `http://api.geonames.org/getJSON?geonameId=${id}&username=abrami&style=full`, 'jsonp'],
            ];
        case 'Babelfy':
            return [
                ['dataAndImg', `https://babelnet.io/v5/getSynset?id=${id}&key=26e202d8-32f7-4a0e-9f25-4a1985850af7`, 'get'],
            ];
        case 'BIOFid':
            [, id] = /.*Aves#(GBIF_.*)$/.exec(id);
            return [
                ['data', `http://api.textannotator.texttechnologylab.org/blazegraph/id/https:||www.biofid.de|bio-ontologies|Aves/${id}`, 'get'],
            ];
    }
    // tslint:enable: max-line-length
    return [];
}
/**
 * Verarbeitet die von den Wissensdatenbanken erhaltenen Daten
 */
function handleDataRequest(type, source, resData, detailData) {
    let sourceName;
    for (const src of Object.keys(dataSources)) {
        if (source.startsWith(src)) {
            sourceName = src;
            break;
        }
    }
    if (!sourceName) {
        return;
    }
    switch (type) {
        case 'data':
            extendData(sourceName, resData, detailData);
            break;
        case 'img':
            extendImage(sourceName, resData, detailData);
            break;
        case 'dataAndImg':
            extendData(sourceName, resData, detailData);
            extendImage(sourceName, resData, detailData);
            break;
    }
}
/**
 * Erweitert die übergebene IDetailData um Daten aus 'rawData'
 */
function extendData(source, rawData, detailData) {
    switch (source) {
        case 'WikiData':
            const wdResult = rawData;
            if (wdResult.entities) {
                const { descriptions, labels } = Object.values(wdResult.entities)[0];
                if (labels) {
                    detailData.label = Object.values(labels)[0].value || '';
                }
                if (descriptions) {
                    detailData.text = Object.values(descriptions)[0].value || '';
                }
            }
            break;
        case 'Wikipedia':
        case 'Wiktionary':
            const wikiResult = rawData;
            if (!wikiResult.query || !wikiResult.query.pages) {
                return;
            }
            const { extract, title } = Object.values(wikiResult.query.pages)[0];
            if (title) {
                detailData.label = title;
            }
            if (extract) {
                detailData.text = extract;
            }
            break;
        case 'GeoNames':
            const { name, countryName, adminName1, fcodeName, fclName, population } = rawData;
            const textelems = [countryName, adminName1, fcodeName, fclName].filter((e) => e);
            detailData.label = name;
            detailData.text = textelems.join(' \n');
            if (population) {
                detailData.text += `\nPopulation: ${population}`;
            }
            break;
        case 'Babelfy':
            const baResult = rawData;
            detailData.label = (baResult.mainSense || '');
            detailData.text = (baResult.synsetType || '');
            break;
        case 'BIOFid':
            const bioResult = rawData;
            if (!bioResult.results || !bioResult.results.bindings) {
                return;
            }
            const [bioData] = bioResult.results.bindings;
            if (!bioData) {
                return;
            }
            detailData.label = bioData.l.value;
            detailData.text = bioData.n.value;
            break;
        default:
            break;
    }
}
/**
 * Fügt der übergebenen IDetailData ein in 'rawData' abgelegtes Bild hinzu
 */
function extendImage(source, rawData, detailData) {
    switch (source) {
        case 'Wikipedia':
        case 'WikiData':
            const wikiImage = rawData;
            if (!wikiImage.query || !wikiImage.query.pages) {
                return;
            }
            const { thumbnail } = Object.values(wikiImage.query.pages)[0];
            if (thumbnail) {
                detailData.image = thumbnail.source || '';
            }
            break;
        case 'Babelfy':
            const babelImage = rawData;
            if (!babelImage.images || !Array.isArray(babelImage.images) || !babelImage.images[0]) {
                return;
            }
            const image = babelImage.images[0];
            detailData.image = image.thumbUrl || image.url || '';
            break;
        default:
            break;
    }
}
/**
 * Ergänzt bei den übergebenen TextTechnologyEntities Multitoken Informationen anhand der übergebenen Tokens
 */
function addChildData(ttEntities, tokens) {
    const ttBeginMap = new Map();
    for (const ttentity of ttEntities) {
        if (!ttentity) {
            continue;
        }
        ttBeginMap.set(ttentity.features.begin, ttentity);
    }
    tokens = tokens.sort((a, b) => a.features.begin - b.features.begin);
    let currTTEntity;
    for (const token of tokens) {
        if (!token) {
            continue;
        }
        if (ttBeginMap.has(`${token.features.begin}`)) {
            currTTEntity = ttBeginMap.get(`${token.features.begin}`);
            currTTEntity.features.children = [];
        }
        if (currTTEntity && currTTEntity.features.end !== `${token.features.end}` || currTTEntity.features.children.length) {
            currTTEntity.features.children.push(token._addr);
        }
    }
}
/**
 * Gibt ein Array von Queue Elementen zurück, um die Annotationen der übergebenen TextTechnologyEntität zu entfernen
 */
function createRemoveKnowledgeQueue(ttEntity, offset = 0) {
    const queue = [];
    if (!ttEntity.features.knowledgeEntries || !Array.isArray(ttEntity.features.knowledgeEntries)) {
        return queue;
    }
    for (const knowledge of ttEntity.features.knowledgeEntries) {
        queue.push({
            cmd: 'remove',
            data: {
                bid: `_b${queue.length + offset}_`,
                addr: `${knowledge}`,
            }
        });
    }
    return queue;
}


/***/ }),

/***/ "./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.scss":
/*!**************************************************************************************************!*\
  !*** ./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.scss ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".contentholder {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.header {\n  flex-grow: 0;\n  flex-shrink: 0;\n  padding: 1%;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n  padding: 1%;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3Rvb2xzL2tub3dsZWRnZS1iYXNlL2tub3dsZWRnZS1waWNrZXIva25vd2xlZGdlLXBpY2tlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy90b29scy9rbm93bGVkZ2UtYmFzZS9rbm93bGVkZ2UtcGlja2VyL2tub3dsZWRnZS1waWNrZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLGNBQUE7RUFDQSxXQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDQ0o7O0FERUE7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdG9vbHMva25vd2xlZGdlLWJhc2Uva25vd2xlZGdlLXBpY2tlci9rbm93bGVkZ2UtcGlja2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnRob2xkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuLmhlYWRlciB7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xuICAgIHBhZGRpbmc6IDElO1xufVxuXG4uY29udGVudCB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgcGFkZGluZzogMSU7XG59XG5cbjpob3N0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59IiwiLmNvbnRlbnRob2xkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi5oZWFkZXIge1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICBwYWRkaW5nOiAxJTtcbn1cblxuLmNvbnRlbnQge1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBmbGV4LWdyb3c6IDE7XG4gIHBhZGRpbmc6IDElO1xufVxuXG46aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn0iXX0= */");

/***/ }),

/***/ "./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.ts":
/*!************************************************************************************************!*\
  !*** ./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.ts ***!
  \************************************************************************************************/
/*! exports provided: KnowledgePickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KnowledgePickerComponent", function() { return KnowledgePickerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");





let KnowledgePickerComponent = 
/**
 * Komonente für die Auswahl einer Annotation im KnowledgeBaseLinker
 */
class KnowledgePickerComponent {
    constructor(dialogRef, http, menuService, data) {
        this.dialogRef = dialogRef;
        this.http = http;
        this.menuService = menuService;
        this.data = data;
        /**
         * Wissensdatenkbanken mit Namen, URL, etc. pp.
         */
        this.searchSources = [
            {
                label: 'Wikipedia DE',
                search: 'complex',
                url: 'https://de.wikipedia.org/w/api.php',
                type: 'wikipedia',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://de.wikipedia.org/wiki?curid='
                },
            },
            {
                label: 'Wikipedia EN',
                search: 'complex',
                url: 'https://en.wikipedia.org/w/api.php',
                type: 'wikipedia',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://en.wikipedia.org/wiki?curid='
                },
            },
            {
                label: 'Wikipedia FR',
                search: 'complex',
                url: 'https://fr.wikipedia.org/w/api.php',
                type: 'wikipedia',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://fr.wikipedia.org/wiki?curid='
                },
            },
            {
                label: 'Wikipedia ES',
                search: 'complex',
                url: 'https://es.wikipedia.org/w/api.php',
                type: 'wikipedia',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://es.wikipedia.org/wiki?curid='
                },
            },
            {
                label: 'WikiData',
                search: 'complex',
                url: 'https://www.wikidata.org/w/api.php',
                type: 'wikidata',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://www.wikidata.org/wiki/'
                },
            },
            {
                label: 'GeoNames',
                search: 'replace',
                url: 'http://api.geonames.org/searchJSON?formatted=true&q=__Searchtext__&maxRows=20&lang=en&username=abrami',
                type: 'geonames',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'http://www.geonames.org/'
                },
            },
            {
                label: 'GermaNet',
                search: 'replace',
                url: 'http://api.textannotator.texttechnologylab.org/germanet/query/__Searchtext__',
                type: 'ttlab',
                method: 'get',
                reference: {
                    type: 'property',
                    value: 'url'
                },
            },
            {
                label: 'Babelfy DE',
                search: 'replace',
                url: 'https://babelfy.io/v1/disambiguate?text=__Searchtext__&lang=DE&key={key}',
                type: 'babelfy',
                method: 'get',
                reference: {
                    type: 'append',
                    value: 'http://babelnet.org/rdf/page/'
                },
            },
            {
                label: 'Babelfy EN',
                search: 'replace',
                url: 'https://babelfy.io/v1/disambiguate?text=__Searchtext__&lang=EN&key={key}',
                type: 'babelfy',
                method: 'get',
                reference: {
                    type: 'append',
                    value: 'http://babelnet.org/rdf/page/'
                },
            },
            {
                label: 'Deutsche Nationalbibliothek',
                search: 'replace',
                url: 'http://api.textannotator.texttechnologylab.org/dnb/__Searchtext__',
                type: 'ttlab',
                method: 'get',
                idReplace: { search: /(http(?:|s):\/\/d-nb.info\/)/, value: '' },
                reference: {
                    type: 'id',
                    value: ''
                },
            },
            {
                label: 'Wiktionary DE',
                search: 'complex',
                url: 'https://de.wiktionary.org/w/api.php',
                type: 'wiktionary',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://de.wiktionary.org/wiki?curid='
                },
            },
            {
                label: 'Wiktionary EN',
                search: 'complex',
                url: 'https://en.wiktionary.org/w/api.php',
                type: 'wiktionary',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://en.wiktionary.org/wiki?curid='
                },
            },
            {
                label: 'Wiktionary FR',
                search: 'complex',
                url: 'https://fr.wiktionary.org/w/api.php',
                type: 'wiktionary',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://fr.wiktionary.org/wiki?curid='
                },
            },
            {
                label: 'Wiktionary ES',
                search: 'complex',
                url: 'https://es.wiktionary.org/w/api.php',
                type: 'wiktionary',
                method: 'jsonp',
                reference: {
                    type: 'append',
                    value: 'https://es.wiktionary.org/wiki?curid='
                },
            },
            {
                label: 'BIOFid',
                search: 'replace',
                url: 'http://api.textannotator.texttechnologylab.org/blazegraph/query/__Searchtext__',
                type: 'ttlab',
                method: 'get',
                reference: {
                    type: 'id',
                    value: ''
                },
            },
        ];
        this.input = '';
        this.selectedSource = this.searchSources[0];
        this.searchResult = [];
    }
    ngOnInit() {
        this.input = this.data.text || '';
        if (this.data.label) {
            const [source] = this.searchSources.filter(({ label }) => label === this.data.label);
            if (source) {
                this.selectedSource = source;
            }
        }
    }
    /**
     * Durchsuche die ausgewählte Wissensdatenbank nach dem Suchtext
     */
    search() {
        const source = this.selectedSource;
        let url = source.url;
        if (source.search === 'replace') {
            url = source.url.replace('__Searchtext__', this.input.replace(' ', '%20'));
        }
        else {
            switch (source.type) {
                case 'wikidata':
                case 'wiktionary':
                    url += `?action=query&list=search&srsearch=${this.input}&format=json&formatversion=2`;
                    break;
                case 'wikipedia':
                    // tslint:disable-next-line: max-line-length
                    url += `?action=query&titles=${this.input}&format=json&prop=pageimages|extracts|pageprops&exintro=&explaintext=&ppprop=wikibase_item&redirects=&pithumbsize=100&formatversion=2`;
                    break;
            }
        }
        const observer = {
            next: (res) => this.handleResponse(res, source),
        };
        if (source.method === 'jsonp') {
            this.http.jsonp(url, 'callback').subscribe(observer);
        }
        else {
            this.http.get(url, { responseType: 'json' }).subscribe(observer);
        }
    }
    /**
     * Schließe den Dialog und übergebe den ausgewählten Eintrag
     */
    select(entry) {
        this.dialogRef.close([entry, this.selectedSource.label]);
    }
    /**
     * Verarbeite die Antwort der Wissensdatenbank
     */
    handleResponse(res, source) {
        if (!res) {
            return;
        }
        const result = [];
        switch (source.type) {
            case 'wikipedia':
                const wikiRes = res;
                if (!wikiRes.query || !wikiRes.query.pages) {
                    return;
                }
                for (const entry of wikiRes.query.pages) {
                    if (entry.missing) {
                        continue;
                    }
                    const resultEntry = {
                        identifier: this.getId(`${entry.pageid}`, source),
                        image: '',
                        label: entry.title || '',
                        text: entry.extract || '',
                        reference: `https://de.wikipedia.org/wiki?curid=${entry.pageid}`,
                    };
                    if (entry.thumbnail && entry.thumbnail.source) {
                        resultEntry.image = entry.thumbnail.source;
                    }
                    result.push(resultEntry);
                }
                break;
            case 'wikidata':
            case 'wiktionary':
                const widaRes = res;
                if (!widaRes.query || !widaRes.query.search) {
                    return;
                }
                for (const entry of widaRes.query.search) {
                    const entryId = `${source.type === 'wiktionary' ? entry.pageid : entry.title}`;
                    const resultEntry = {
                        identifier: this.getId(entryId, source),
                        image: '',
                        label: entry.title || '',
                        text: (entry.snippet || '').replace(/((<span class="searchmatch">)|(<\/span>))/g, ''),
                        reference: this.getReference(entryId, source, entry),
                    };
                    const imageObserver = {
                        next: (observerRes) => {
                            const imgRes = observerRes;
                            if (imgRes && imgRes.query && imgRes.query.pages) {
                                const page = imgRes.query.pages[entry.pageid];
                                if (page && page.thumbnail) {
                                    const id = this.searchResult.findIndex((e) => e.identifier === entryId);
                                    this.searchResult[id].image = page.thumbnail.source || '';
                                }
                            }
                        }
                    };
                    const url = source.url + `?action=query&&titles=${entry.title}&prop=pageimages&pithumbsize=100&format=json`;
                    if (source.method === 'jsonp') {
                        this.http.jsonp(url, 'callback').subscribe(imageObserver);
                    }
                    else {
                        this.http.get(url, { responseType: 'json' }).subscribe(imageObserver);
                    }
                    result.push(resultEntry);
                }
                break;
            case 'geonames':
                const geoRes = res;
                for (const { name, geonameId, countryName, adminName1, fcodeName } of geoRes.geonames) {
                    const textelems = [countryName, adminName1, fcodeName].filter((e) => e);
                    result.push({
                        identifier: this.getId(`${geonameId}`, source),
                        label: name,
                        image: '',
                        text: textelems.join(' \n'),
                        reference: '',
                    });
                }
                break;
            case 'babelfy':
                const babelRes = res;
                for (const entry of babelRes) {
                    result.push({
                        identifier: this.getId(entry.babelSynsetID, source),
                        label: entry.babelSynsetID,
                        image: '',
                        text: `${entry.source}`,
                        reference: this.getReference('s' + entry.babelSynsetID.substring(3), source, entry),
                    });
                }
                break;
            case 'ttlab':
                const ttlRes = res;
                if (Array.isArray(ttlRes.result)) {
                    for (const entry of ttlRes.result) {
                        result.push({
                            identifier: this.getId(entry.id, source),
                            label: entry.title || entry.form || '',
                            image: '',
                            text: entry.snippet || entry.synset || '',
                            reference: this.getReference(entry.id, source, entry),
                        });
                    }
                }
                else if (ttlRes.results && Array.isArray(ttlRes.results.bindings)) {
                    for (const entry of ttlRes.results.bindings) {
                        result.push({
                            identifier: this.getId(entry.s.value, source),
                            label: entry.l.value,
                            image: '',
                            text: `${entry.n.value}`,
                            reference: this.getReference(entry.s.value, source, entry),
                        });
                    }
                }
                break;
        }
        if (!result.length) {
            this.menuService.showMessage({ level: 'info', text: 'MESSAGES.NO-SEARCH-RESULT' });
        }
        this.searchResult = result;
    }
    /**
     * Gibt die Referenz ID des Eintrages zurück
     */
    getReference(id, source, entry) {
        switch (source.reference.type) {
            case 'append':
                return source.reference.value + id;
            case 'id':
                return id;
            case 'replace':
                return source.reference.value.replace('__Searchtext__', id);
            case 'property':
                return entry[source.reference.value];
        }
    }
    getId(id, source) {
        if (source.idReplace) {
            return id.replace(source.idReplace.search, source.idReplace.value);
        }
        return id;
    }
};
KnowledgePickerComponent.ctorParameters = () => [
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__["MenuService"] },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] }
];
KnowledgePickerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-knowledge-picker',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./knowledge-picker.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./knowledge-picker.component.scss */ "./src/app/components/tools/knowledge-base/knowledge-picker/knowledge-picker.component.scss")).default]
    })
    /**
     * Komonente für die Auswahl einer Annotation im KnowledgeBaseLinker
     */
    ,
    tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]))
], KnowledgePickerComponent);



/***/ }),

/***/ "./src/app/components/tools/quick-anno/quick-anno.component.scss":
/*!***********************************************************************!*\
  !*** ./src/app/components/tools/quick-anno/quick-anno.component.scss ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".toolbar {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.modeName {\n  font-size: xx-small;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n}\n\n.footer {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3Rvb2xzL3F1aWNrLWFubm8vcXVpY2stYW5uby5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy90b29scy9xdWljay1hbm5vL3F1aWNrLWFubm8uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdG9vbHMvcXVpY2stYW5uby9xdWljay1hbm5vLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRvb2xiYXIge1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBmbGV4LXNocmluazogMDtcbn1cblxuLm1vZGVOYW1lIHtcbiAgICBmb250LXNpemU6IHh4LXNtYWxsO1xufVxuXG4uY29udGVudCB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBmbGV4LWdyb3c6IDE7XG59XG5cbi5mb290ZXIge1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBmbGV4LXNocmluazogMDtcbn1cblxuOmhvc3Qge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBoZWlnaHQ6IDEwMCU7XG59IiwiLnRvb2xiYXIge1xuICBmbGV4LWdyb3c6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuXG4ubW9kZU5hbWUge1xuICBmb250LXNpemU6IHh4LXNtYWxsO1xufVxuXG4uY29udGVudCB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGZsZXgtZ3JvdzogMTtcbn1cblxuLmZvb3RlciB7XG4gIGZsZXgtZ3JvdzogMDtcbiAgZmxleC1zaHJpbms6IDA7XG59XG5cbjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/tools/quick-anno/quick-anno.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/components/tools/quick-anno/quick-anno.component.ts ***!
  \*********************************************************************/
/*! exports provided: QuickAnnoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuickAnnoComponent", function() { return QuickAnnoComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var src_app_services_document_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/document.service */ "./src/app/services/document.service.ts");
/* harmony import */ var _popups_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../popups/picker/picker.component */ "./src/app/components/popups/picker/picker.component.ts");
/* harmony import */ var _quick_anno_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./quick-anno.utils */ "./src/app/components/tools/quick-anno/quick-anno.utils.ts");
/* harmony import */ var src_app_services_websocket_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/websocket.service */ "./src/app/services/websocket.service.ts");
/* harmony import */ var _popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../popups/filter/filter.component */ "./src/app/components/popups/filter/filter.component.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils */ "./src/app/components/tools/utils.ts");
/* harmony import */ var _popups_comments_comments_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../popups/comments/comments.component */ "./src/app/components/popups/comments/comments.component.ts");
/* harmony import */ var _menu_tool_bar_tool_bar_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../menu/tool-bar/tool-bar.component */ "./src/app/components/menu/tool-bar/tool-bar.component.ts");













let QuickAnnoComponent = 
/**
 * Komponente für die Darstellung des QuickAnnotator Werkzeuges
 */
class QuickAnnoComponent {
    constructor(router, route, menuService, documentService, websocketService, dialog) {
        this.router = router;
        this.route = route;
        this.menuService = menuService;
        this.documentService = documentService;
        this.websocketService = websocketService;
        this.dialog = dialog;
        this.data = [];
        this.annoData = {};
        this.commentData = {};
        this.pageSizes = [35, 60, 100, 150, 250];
        this.pageSize = this.pageSizes[0];
        this.mode = 1;
        this.activeFilters = [];
        this.toolbarMenu = [];
        this.methapher = false;
        this.metonym = false;
        this.subscriptions = [];
        this.lastAnnations = [];
        this.fingerprints = new Map();
    }
    ngOnInit() {
        this.menuService.hideMenubar();
        this.genearteToolbarMenu();
        // Query Parameter der URL auslesen um darüber Dokument und View zu laden
        const paramObserver = {
            next: (params) => {
                this.casId = params.cas;
                this.viewId = params.view;
                this.generateData();
            }
        };
        this.route.queryParams.subscribe(paramObserver);
        // Auf Änderungen des Dokuments reagieren
        const changeObserver = {
            next: () => this.generateData(),
        };
        this.subscriptions.push(this.documentService.casChanged.subscribe(changeObserver));
    }
    ngOnDestroy() {
        // Beende die momentanen Subscriptions
        for (const subscription of this.subscriptions) {
            subscription.unsubscribe();
        }
    }
    /**
     * Änderungen am Dokument speichern
     */
    saveCas() {
        this.documentService.saveCas(this.casId);
    }
    /**
     * Navigiere zur Dokumenten Ansicht
     */
    navigateDocument() {
        this.router.navigate(['document'], { queryParams: { cas: this.casId, view: this.viewId } });
    }
    /**
     * Markiere ein Token als ausgewähltes Element
     */
    tokenSelect(data) {
        if (!data) {
            return;
        }
        switch (this.mode) {
            case 0:
                // Modus: Mehrfache Annotation (Auswahl der Kategorie über Schaltfläche am unteren Rand)
                if (!this.selectedAnnotation) {
                    return;
                }
                this.handleAnnotationSelect(data, this.selectedAnnotation);
                break;
            case 1:
                // Modus: Einzelne Annotation (Auswahl der Kategorie über einen Popup Dialog)
                const picker = this.dialog.open(_popups_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["PickerComponent"], {
                    data: {
                        entries: _quick_anno_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"],
                        methapher: this.methapher,
                        metonym: this.metonym,
                        last: this.lastAnnations,
                        highlights: this.annoData[data.id] &&
                            Object.entries(this.annoData[data.id].annotations).map(([type, array]) => [type, array.some(({ fp }) => fp)]) || [],
                    },
                    height: 'inherit'
                });
                picker.afterClosed().subscribe((result) => {
                    if (result) {
                        [this.selectedAnnotation, this.methapher, this.metonym] = result;
                        this.handleAnnotationSelect(data, this.selectedAnnotation);
                    }
                });
                break;
            case 2:
                // Modus: Kommentare lesen und schreiben
                const comData = this.commentData[data.id];
                const comments = [];
                if (comData) {
                    for (const { id } of comData.annotations[_utils__WEBPACK_IMPORTED_MODULE_10__["commentType"]]) {
                        const fingerprint = this.fingerprints.get(id);
                        if (!fingerprint) {
                            continue;
                        }
                        const entry = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["commentType"]][id]);
                        if (!entry) {
                            continue;
                        }
                        comments.push({
                            label: entry.features.label,
                            user: fingerprint.features.user,
                            create: fingerprint.features.create,
                        });
                    }
                }
                const comment = this.dialog.open(_popups_comments_comments_component__WEBPACK_IMPORTED_MODULE_11__["CommentsComponent"], {
                    data: comments,
                    height: 'inherit'
                });
                comment.afterClosed().subscribe((result) => {
                    if (result) {
                        this.createComment(data, result);
                    }
                });
                break;
        }
    }
    changePageSize(num) {
        this.pageSize = num;
    }
    chooseClass() {
        const picker = this.dialog.open(_popups_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["PickerComponent"], {
            data: {
                entries: _quick_anno_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"],
                methapher: this.methapher,
                metonym: this.metonym,
                last: this.lastAnnations,
            },
            height: 'inherit'
        });
        picker.afterClosed().subscribe((result) => {
            if (result) {
                [this.selectedAnnotation, this.methapher, this.metonym] = result;
            }
        });
    }
    openFilterSelection() {
        const filterData = {
            type: 'multi',
            data: {
                'POPUP-FILTER.ANNOTATION-LABEL': _quick_anno_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"].filter(({ concept }) => !concept),
                'POPUP-FILTER.CONCEPT-LABEL': _quick_anno_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"].filter(({ concept }) => concept),
            },
        };
        const filter = this.dialog.open(_popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_9__["FilterComponent"], {
            data: [filterData, this.activeFilters],
            height: 'inherit'
        });
        filter.afterClosed().subscribe((result) => {
            if (result) {
                this.activeFilters = Array.from(result);
            }
        });
    }
    /**
     * Erzeuge ein Multitoken zwischen den im Tupel übergebenen IDs
     */
    createMultiToken([fstId, sndId]) {
        const fstToken = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"]][fstId]);
        const sndToken = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"]][sndId]);
        if (!fstToken || !sndToken) {
            // IDs waren ungültig
            return;
        }
        // Bestimmte den Textabschnitt, der als Multitoken zusammengefasst werden soll
        const begin = Math.min(fstToken.features.begin, sndToken.features.begin);
        const end = Math.max(fstToken.features.end, sndToken.features.end);
        const possibles = Object.values(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"]]).map((entry) => Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(entry));
        const children = [];
        for (const entry of possibles) {
            if (!entry) {
                continue;
            }
            if (entry.features.parent === 'null' && entry.features.begin >= begin && entry.features.end <= end) {
                children.push(entry._addr);
            }
        }
        let batchId = 0;
        const queue = [{
                cmd: 'create',
                data: {
                    bid: '_b0_',
                    features: {
                        begin,
                        end,
                        children,
                    },
                    _type: _utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"],
                }
            }];
        for (const id of children) {
            queue.push({
                cmd: 'edit',
                data: {
                    bid: `_b${++batchId}_`,
                    addr: `${id}`,
                    features: {
                        parent: '_b0_',
                    }
                }
            });
        }
        this.sendBatch(queue);
    }
    /**
     * Löse ein Multitoken wieder in einzelne Tokens auf
     */
    removeMultiToken(id) {
        this.sendBatch([{
                cmd: 'remove',
                data: {
                    bid: '_b0_',
                    addr: id,
                }
            }]);
    }
    /**
     * Reagiere auf die Auswahl eines Kontextmenü Eintrages der Toolbar
     */
    onMenuSelect(event) {
        const [id, parent] = event;
        switch (id) {
            case 'save':
                this.saveCas();
                break;
            case 'filter':
                this.openFilterSelection();
                break;
            case _menu_tool_bar_tool_bar_component__WEBPACK_IMPORTED_MODULE_12__["returnEventId"]:
                this.navigateDocument();
                break;
            default:
                const num = Number.parseInt(id, 10);
                switch (parent) {
                    case 'items':
                        if (this.pageSizes.some((size) => size === num)) {
                            this.pageSize = num;
                            this.genearteToolbarMenu();
                        }
                        break;
                    case 'modes':
                        if (num < 4 && num >= 0) {
                            this.mode = num;
                            this.genearteToolbarMenu();
                        }
                }
        }
    }
    /**
     * Verarbeite die geladenen Daten für die Darstellung innerhalb des Werkzeuges
     */
    generateData() {
        this.tool = this.documentService.currentTool;
        const tokenMap = new Map();
        const text = this.documentService.currentCAS.text;
        const tokens = this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"]] || {};
        const data = [];
        const annotations = {};
        const comments = {};
        for (const fingerprint of Object.values(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["fingerprintType"]] || {})) {
            const elem = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getTypedAnnotation"])(fingerprint);
            if (!elem) {
                continue;
            }
            this.fingerprints.set(`${elem.features.reference}`, elem);
        }
        for (const [id, anno] of Object.entries(tokens)) {
            const token = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(anno);
            if (!token || token.features.parent !== 'null') {
                continue;
            }
            const begin = token.features.begin;
            const end = token.features.end;
            if (!tokenMap.has(begin)) {
                tokenMap.set(begin, new Map());
            }
            const beginMap = tokenMap.get(begin);
            if (!beginMap.has(end)) {
                beginMap.set(end, []);
            }
            beginMap.get(end).push(data.length);
            data.push({
                label: text.slice(begin, end),
                id,
                data: token,
            });
        }
        // tslint:disable-next-line: max-line-length
        const types = [..._quick_anno_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"], { type: _utils__WEBPACK_IMPORTED_MODULE_10__["commentType"], rgb: 'grey', concept: false }];
        for (const { type, rgb, concept } of types) {
            const typeAnnoations = this.tool.toolElements[type];
            if (!typeAnnoations) {
                continue;
            }
            for (const [annoId, anno] of Object.entries(typeAnnoations)) {
                const annotation = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(anno);
                if (!annotation) {
                    continue;
                }
                const beginMap = tokenMap.get(annotation.features.begin);
                if (!beginMap) {
                    continue;
                }
                const idxArray = beginMap.get(annotation.features.end);
                if (!idxArray) {
                    continue;
                }
                for (const idx of idxArray) {
                    const mapping = type === _utils__WEBPACK_IMPORTED_MODULE_10__["commentType"] ? comments : annotations;
                    const id = data[idx].id;
                    if (!mapping[id]) {
                        mapping[id] = {
                            rgb: [],
                            badge: 0,
                            ref: id,
                            annotations: {},
                        };
                    }
                    const entry = mapping[id];
                    entry.rgb.push(rgb);
                    entry.border = concept ? '0.2em dashed darkgrey' : undefined;
                    if (!entry.annotations[type]) {
                        entry.annotations[type] = [];
                    }
                    entry.annotations[type].push({ id: annoId, fp: this.fingerprints.has(annoId) });
                    if (this.fingerprints.has(annoId)) {
                        ++entry.badge;
                    }
                }
            }
        }
        this.data = data.sort((a, b) => a.data.features.begin - b.data.features.begin);
        this.annoData = annotations;
        this.commentData = comments;
    }
    handleAnnotationSelect(data, annotationClass) {
        let toRemove;
        const annotations = this.tool.toolElements[annotationClass.type];
        if (annotations) {
            for (const anno of Object.values(annotations)) {
                const annotation = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(anno);
                if (!annotation) {
                    continue;
                }
                if (annotation.features.begin === data.data.features.begin && annotation.features.end === data.data.features.end) {
                    toRemove = annotation;
                    break;
                }
            }
        }
        const index = this.lastAnnations.findIndex(({ type }) => type === annotationClass.type);
        if (index !== -1) {
            this.lastAnnations = [annotationClass, ...this.lastAnnations.filter(({ type }) => type !== annotationClass.type)];
        }
        else {
            this.lastAnnations.unshift(annotationClass);
            this.lastAnnations = this.lastAnnations.slice(0, 3);
        }
        if (toRemove) {
            this.removeAnnotation(toRemove);
        }
        else {
            this.createAnnotation(data);
        }
    }
    /**
     * Erzeugt einen neuen Kommentar
     */
    createComment(data, str) {
        const queue = {
            cmd: 'create',
            data: {
                bid: '_b0_',
                features: {
                    begin: data.data.features.begin,
                    end: data.data.features.end,
                    label: str,
                },
                _type: _utils__WEBPACK_IMPORTED_MODULE_10__["commentType"],
            }
        };
        this.sendBatch([queue]);
    }
    /**
     * Erzeugt eine Annotation
     */
    createAnnotation(data) {
        const queue = {
            cmd: 'create',
            data: {
                bid: '_b0_',
                features: {
                    begin: data.data.features.begin,
                    end: data.data.features.end,
                    metaphor: this.methapher,
                    meonym: this.metonym,
                    value: this.selectedAnnotation.value,
                },
                _type: this.selectedAnnotation.type,
            }
        };
        this.sendBatch([queue]);
    }
    /**
     * Entferne eine Annotation
     */
    removeAnnotation(data) {
        const queue = {
            cmd: 'remove',
            data: {
                bid: '_b0_',
                addr: `${data._addr}`,
            }
        };
        this.sendBatch([queue]);
    }
    sendBatch(queue) {
        this.websocketService.send({
            cmd: 'work_batch',
            data: {
                casId: this.casId,
                options: [{ privateSession: false }],
                queue,
                toolName: 'quickpanel',
                view: this.viewId,
            }
        });
    }
    /**
     * Befülle das Kontextmenü der Toolbar
     */
    genearteToolbarMenu() {
        const items = {
            type: 'listing',
            id: 'items',
            name: 'TOOL-QUICKANNO.ITEMS',
            list: [],
        };
        for (const size of this.pageSizes) {
            items.list.push({
                type: 'action',
                id: `${size}`,
                name: `${size}`,
                selected: size === this.pageSize,
            });
        }
        const modes = {
            type: 'listing',
            id: 'modes',
            name: 'TOOL-QUICKANNO.MODES',
            list: [],
        };
        for (const [id, name] of ['TOOL-QUICKANNO.MODE-ONE', 'TOOL-QUICKANNO.MODE-TWO', 'TOOL-QUICKANNO.MODE-THREE'].entries()) {
            modes.list.push({
                type: 'action',
                id: `${id}`,
                name,
                selected: id === this.mode,
            });
        }
        const retval = [items, modes];
        retval.push({
            type: 'action',
            id: 'filter',
            name: 'TOOL-QUICKANNO.FILTER',
            icon: 'filter_list',
        });
        retval.push({
            type: 'action',
            id: 'save',
            name: 'TOOL-QUICKANNO.SAVE',
            icon: 'save',
        });
        this.toolbarMenu = retval;
    }
};
QuickAnnoComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_2__["MenuService"] },
    { type: src_app_services_document_service__WEBPACK_IMPORTED_MODULE_5__["DocumentService"] },
    { type: src_app_services_websocket_service__WEBPACK_IMPORTED_MODULE_8__["WebsocketService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] }
];
QuickAnnoComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-quick-anno',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./quick-anno.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/quick-anno/quick-anno.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./quick-anno.component.scss */ "./src/app/components/tools/quick-anno/quick-anno.component.scss")).default]
    })
    /**
     * Komponente für die Darstellung des QuickAnnotator Werkzeuges
     */
], QuickAnnoComponent);



/***/ }),

/***/ "./src/app/components/tools/quick-anno/quick-anno.utils.ts":
/*!*****************************************************************!*\
  !*** ./src/app/components/tools/quick-anno/quick-anno.utils.ts ***!
  \*****************************************************************/
/*! exports provided: defaultAnnotationClasses */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultAnnotationClasses", function() { return defaultAnnotationClasses; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

// tslint:disable: max-line-length
const defaultAnnotationClasses = [
    { rgb: 'rgb(233,234,192)', sort: 1, concept: undefined, name: 'Unknown', stype: 'sentence', css: 'OTHER', type: 'org.texttechnologylab.annotation.type.Unknown', value: 'I-UNK', visible: true },
    // { rgb: '', sort: 1, concept: false, name: 'Taxon', stype: 'ner', css: 'TAXON', type: 'org.texttechnologylab.annotation.type.Taxon', value: 'I-TAX', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(177, 189, 140)', sort: 1, concept: false, name: 'Habitat', stype: 'ner', css: 'HABITAT', type: 'org.texttechnologylab.annotation.type.Habitat', value: 'I-HABITAT', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(227, 26, 28)', sort: 1, concept: false, name: 'Animal, Fauna', stype: 'ner', css: 'ANIMAL', type: 'org.texttechnologylab.annotation.type.Animal_Fauna', value: 'I-ANIMAL-FAUNA', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255, 255, 153)', sort: 1, concept: false, name: 'Person, Human Being', stype: 'ner', css: 'PERSON', type: 'org.texttechnologylab.annotation.type.Person_HumanBeing', value: 'I-PERSON-HUMAN', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(51, 160, 44)', sort: 1, concept: false, name: 'Plant, Flora', stype: 'ner', css: 'PLANT', type: 'org.texttechnologylab.annotation.type.Plant_Flora', value: 'I-PLANT-FLORA', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(177, 89, 40)', sort: 1, concept: false, name: 'Location, Place', stype: 'ner', css: 'LOCATION', type: 'org.texttechnologylab.annotation.type.Location_Place', value: 'I-LOCATION-PLACE', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(166, 206, 227)', sort: 1, concept: false, name: 'Time', stype: 'ner', css: 'TIME', type: 'org.texttechnologylab.annotation.type.Time', value: 'I-TIME', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(31, 120, 180)', sort: 1, concept: false, name: 'Archaea', stype: 'ner', css: 'ARCHAEA', type: 'org.texttechnologylab.annotation.type.Archaea', value: 'I-ARCHAEA', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(178, 223, 138)', sort: 1, concept: false, name: 'Bacteria', stype: 'ner', css: 'BACTERIA', type: 'org.texttechnologylab.annotation.type.Bacteria', value: 'I-BACTERIA', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(253, 127, 0)', sort: 1, concept: false, name: 'Chromista', stype: 'ner', css: 'CHROMISTA', type: 'org.texttechnologylab.annotation.type.Chromista', value: 'I-CHROMISTA', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(251, 154, 153)', sort: 1, concept: false, name: 'Fungi', stype: 'ner', css: 'FUNGI', type: 'org.texttechnologylab.annotation.type.Fungi', value: 'I-FUNGI', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255, 127, 0)', sort: 1, concept: false, name: 'Protozoa', stype: 'ner', css: 'PROTOZOA', type: 'org.texttechnologylab.annotation.type.Protozoa', value: 'I-PROTOZOA', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(202, 178, 214)', sort: 1, concept: false, name: 'Viruses', stype: 'ner', css: 'VIRUSES', type: 'org.texttechnologylab.annotation.type.Viruses', value: 'I-VIRUSES', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(78, 223, 138)', sort: 1, concept: false, name: 'Lichen', stype: 'ner', css: 'LICHEN', type: 'org.texttechnologylab.annotation.type.Lichen', value: 'I-LICHEN', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(230,171,2)', sort: 2, concept: false, name: 'Substance', stype: 'ner', css: 'SUBSTANCE', type: 'org.texttechnologylab.annotation.type.Substance', value: 'I-SUBSTANCE', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(217,95,2)', sort: 2, concept: false, name: 'Artifact', stype: 'ner', css: 'ARTIFACT', type: 'org.texttechnologylab.annotation.type.Artifact', value: 'I-ARTIFACT', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(231,41,138)', sort: 2, concept: false, name: 'Body, Corpus', stype: 'ner', css: 'BODY', type: 'org.texttechnologylab.annotation.type.Body_Corpus', value: 'I-BODY-CORPUS', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(102,166,30)', sort: 2, concept: false, name: 'Food', stype: 'ner', css: 'FOOD', type: 'org.texttechnologylab.annotation.type.Food', value: 'I-FOOD', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(27,158,119)', sort: 2, concept: false, name: 'Natural Object', stype: 'ner', css: 'NATURALOBJECT', type: 'org.texttechnologylab.annotation.type.NaturalObject', value: 'I-NATURALOBJECT', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(117,112,179)', sort: 2, concept: false, name: 'Natural Phenomenon', stype: 'ner', css: 'NATURALPHENOMENON', type: 'org.texttechnologylab.annotation.type.NaturalPhenomenon', value: 'I-NATURALPHENOMENON', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255, 255, 179)', sort: 3, concept: false, name: 'Group, Collection', stype: 'ner', css: 'GROUP', type: 'org.texttechnologylab.annotation.type.Group_Collection', value: 'I-GROUP-COLLECTION', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(190, 186, 218)', sort: 3, concept: false, name: 'Society', stype: 'ner', css: 'SOCIETY', type: 'org.texttechnologylab.annotation.type.Society', value: 'I-SOCIETY', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(233,234,192)', sort: 4, concept: false, name: 'Attribute, Property', stype: 'ner', css: 'ATTRIBUTE', type: 'org.texttechnologylab.annotation.type.Attribute_Property', value: 'I-ATTRIBUTE-PROPERTY', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(127, 201, 127)', sort: 4, concept: false, name: 'Morphology', stype: 'ner', css: 'MORPHOLOGY', type: 'org.texttechnologylab.annotation.type.Morphology', value: 'I-MORPHOLOGY', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(190,174,212)', sort: 4, concept: false, name: 'Reproduction', stype: 'ner', css: 'REPRODUCTION', type: 'org.texttechnologylab.annotation.type.Reproduction', value: 'I-REPRODUCTION', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(240,2,127)', sort: 4, concept: false, name: 'Possession, Property', stype: 'ner', css: 'POSESSION', type: 'org.texttechnologylab.annotation.type.Possession_Property', value: 'I-POSSESSION-PROPERTY', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(56,108,176)', sort: 4, concept: false, name: 'Quantity, Amount', stype: 'ner', css: 'QUANTITY', type: 'org.texttechnologylab.annotation.type.Quantity_Amount', value: 'I-QUANTITY-AMOUNT', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(251,192,134)', sort: 4, concept: false, name: 'Relation', stype: 'ner', css: 'RELATION', type: 'org.texttechnologylab.annotation.type.Relation', value: 'I-RELATION', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255,255,153)', sort: 4, concept: false, name: 'Shape', stype: 'ner', css: 'SHAPE', type: 'org.texttechnologylab.annotation.type.Shape', value: 'I-SHAPE', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(254,217,166)', sort: 5, concept: false, name: 'Cognition, Ideation', stype: 'ner', css: 'COGNITION', type: 'org.texttechnologylab.annotation.type.Cognition_Ideation', value: 'I-COGNITION-IDEATION', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(251,180,174)', sort: 5, concept: false, name: 'Communication', stype: 'ner', css: 'COMMUNICATION', type: 'org.texttechnologylab.annotation.type.Communication', value: 'I-COMMUNICATION', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(179,205,227)', sort: 5, concept: false, name: 'Event, Happening', stype: 'ner', css: 'EVENT', type: 'org.texttechnologylab.annotation.type.Event_Happening', value: 'I-EVANT-HAPPENING', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255,255,204)', sort: 5, concept: false, name: 'Feeling, Emotion', stype: 'ner', css: 'FEELING', type: 'org.texttechnologylab.annotation.type.Feeling_Emotion', value: 'I-FEELING-EMOTION', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(222,203,228)', sort: 5, concept: false, name: 'Process', stype: 'ner', css: 'PROCESS', type: 'org.texttechnologylab.annotation.type.Process', value: 'I-PROCESS', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(229,216,189)', sort: 5, concept: false, name: 'Motive', stype: 'ner', css: 'MOTIVE', type: 'org.texttechnologylab.annotation.type.Motive', value: 'I-MOTIVE', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(253,218,236)', sort: 5, concept: false, name: 'State, Condition', stype: 'ner', css: 'CONDITION', type: 'org.texttechnologylab.annotation.type.State_Condition', value: 'I-STATE-CONDITION', visible: true, metaphor: true, metonym: true },
    { rgb: 'rgb(204,235,197)', sort: 5, concept: false, name: 'Act, Action, Activity', stype: 'ner', css: 'ACTIVITY', type: 'org.texttechnologylab.annotation.type.Act_Action_Activity', value: 'I-ACT-ACTION-ACTIVITY', visible: true, metaphor: true, metonym: true },
    // { rgb: '', sort: 1, concept: true, name: 'Taxon', stype: 'ner', css: 'TAXON ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Taxon', value: 'I-TAX', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(227, 26, 28)', sort: 1, concept: true, name: 'Animal, Fauna', stype: 'ner', css: 'ANIMAL ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Animal_Fauna', value: 'I-ANIMAL-FAUNA', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255, 255, 153)', sort: 1, concept: true, name: 'Person, Human Being', stype: 'ner', css: 'PERSON ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Person_HumanBeing', value: 'I-PERSON-HUMAN', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(51, 160, 44)', sort: 1, concept: true, name: 'Plant, Flora', stype: 'ner', css: 'PLANT ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Plant_Flora', value: 'I-PLANT-FLORA', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(177, 89, 40)', sort: 1, concept: true, name: 'Location, Place', stype: 'ner', css: 'LOCATION ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Location_Place', value: 'I-LOCATION-PLACE', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(177, 189, 140)', sort: 1, concept: true, name: 'Habitat', stype: 'ner', css: 'HABITAT ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Habitat', value: 'I-HABITAT', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(166, 206, 227)', sort: 1, concept: true, name: 'Time', stype: 'ner', css: 'TIME ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Time', value: 'I-TIME', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(31, 120, 180)', sort: 1, concept: true, name: 'Archaea', stype: 'ner', css: 'ARCHAEA ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Archaea', value: 'I-ARCHAEA', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(178, 223, 138)', sort: 1, concept: true, name: 'Bacteria', stype: 'ner', css: 'BACTERIA ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Bacteria', value: 'I-BACTERIA', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(253, 127, 0)', sort: 1, concept: true, name: 'Chromista', stype: 'ner', css: 'CHROMISTA ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Chromista', value: 'I-CHROMISTA', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(251, 154, 153)', sort: 1, concept: true, name: 'Fungi', stype: 'ner', css: 'FUNGI ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Fungi', value: 'I-FUNGI', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255, 127, 0)', sort: 1, concept: true, name: 'Protozoa', stype: 'ner', css: 'PROTOZOA ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Protozoa', value: 'I-PROTOZOA', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(202, 178, 214)', sort: 1, concept: true, name: 'Viruses', stype: 'ner', css: 'VIRUSES ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Viruses', value: 'I-VIRUSES', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(78, 223, 138)', sort: 1, concept: true, name: 'Lichen', stype: 'ner', css: 'LICHEN ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Lichen', value: 'I-LICHEN', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(230,171,2)', sort: 2, concept: true, name: 'Substance', stype: 'ner', css: 'SUBSTANCE ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Substance', value: 'I-SUBSTANCE', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(217,95,2)', sort: 2, concept: true, name: 'Artifact', stype: 'ner', css: 'ARTIFACT ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Artifact', value: 'I-ARTIFACT', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(231,41,138)', sort: 2, concept: true, name: 'Body, Corpus', stype: 'ner', css: 'BODY ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Body_Corpus', value: 'I-BODY-CORPUS', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(102,166,30)', sort: 2, concept: true, name: 'Food', stype: 'ner', css: 'FOOD ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Food', value: 'I-FOOD', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(27,158,119)', sort: 2, concept: true, name: 'Natural Object', stype: 'ner', css: 'NATURALOBJECT ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.NaturalObject', value: 'I-NATURALOBJECT', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(117,112,179)', sort: 2, concept: true, name: 'Natural Phenomenon', stype: 'ner', css: 'NATURALPHENOMENON ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.NaturalPhenomenon', value: 'I-NATURALPHENOMENON', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255, 255, 179)', sort: 3, concept: true, name: 'Group, Collection', stype: 'ner', css: 'GROUP ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Group_Collection', value: 'I-GROUP-COLLECTION', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(190, 186, 218)', sort: 3, concept: true, name: 'Society', stype: 'ner', css: 'SOCIETY ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Society', value: 'I-SOCIETY', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(233,234,192)', sort: 4, concept: true, name: 'Attribute, Property', stype: 'ner', css: 'ATTRIBUTE ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Attribute_Property', value: 'I-ATTRIBUTE-PROPERTY', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(127, 201, 127)', sort: 4, concept: true, name: 'Morphology', stype: 'ner', css: 'MORPHOLOGY ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Morphology', value: 'I-MORPHOLOGY', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(190,174,212)', sort: 4, concept: true, name: 'Reproduction', stype: 'ner', css: 'REPRODUCTION ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Reproduction', value: 'I-REPRODUCTION', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(240,2,127)', sort: 4, concept: true, name: 'Possession, Property', stype: 'ner', css: 'POSESSION ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Possession_Property', value: 'I-POSSESSION-PROPERTY', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(56,108,176)', sort: 4, concept: true, name: 'Quantity, Amount', stype: 'ner', css: 'QUANTITY ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Quantity_Amount', value: 'I-QUANTITY-AMOUNT', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(251,192,134)', sort: 4, concept: true, name: 'Relation', stype: 'ner', css: 'RELATION ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Relation', value: 'I-RELATION', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255,255,153)', sort: 4, concept: true, name: 'Shape', stype: 'ner', css: 'SHAPE ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Shape', value: 'I-SHAPE', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(254,217,166)', sort: 5, concept: true, name: 'Cognition, Ideation', stype: 'ner', css: 'COGNITION ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Cognition_Ideation', value: 'I-COGNITION-IDEATION', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(251,180,174)', sort: 5, concept: true, name: 'Communication', stype: 'ner', css: 'COMMUNICATION ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Communication', value: 'I-COMMUNICATION', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(179,205,227)', sort: 5, concept: true, name: 'Event, Happening', stype: 'ner', css: 'EVENT ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Event_Happening', value: 'I-EVANT-HAPPENING', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(255,255,204)', sort: 5, concept: true, name: 'Feeling, Emotion', stype: 'ner', css: 'FEELING ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Feeling_Emotion', value: 'I-FEELING-EMOTION', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(222,203,228)', sort: 5, concept: true, name: 'Process', stype: 'ner', css: 'PROCESS ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Process', value: 'I-PROCESS', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(229,216,189)', sort: 5, concept: true, name: 'Motive', stype: 'ner', css: 'MOTIVE ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Motive', value: 'I-MOTIVE', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(253,218,236)', sort: 5, concept: true, name: 'State, Condition', stype: 'ner', css: 'CONDITION ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.State_Condition', value: 'I-STATE-CONDITION', visible: true, specific: true, metaphor: true, metonym: true },
    { rgb: 'rgb(204,235,197)', sort: 5, concept: true, name: 'Act, Action, Activity', stype: 'ner', css: 'ACTIVITY ABSTRACT', type: 'org.texttechnologylab.annotation.type.concept.Act_Action_Activity', value: 'I-ACT-ACTION-ACTIVITY', visible: true, specific: true, metaphor: true, metonym: true }
    // tslint:enable: max-line-length
];


/***/ }),

/***/ "./src/app/components/tools/sem-af/sem-af.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/components/tools/sem-af/sem-af.component.scss ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".toolbar {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.modeName {\n  font-size: xx-small;\n}\n\n.content {\n  overflow-y: auto;\n  flex-grow: 1;\n}\n\n.footer {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3Rvb2xzL3NlbS1hZi9zZW0tYWYuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvdG9vbHMvc2VtLWFmL3NlbS1hZi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxtQkFBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxZQUFBO0FDQ0o7O0FER0E7RUFDSSxZQUFBO0VBQ0EsY0FBQTtBQ0FKOztBREdBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy90b29scy9zZW0tYWYvc2VtLWFmLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRvb2xiYXIge1xuICAgIGZsZXgtZ3JvdzogMDtcbiAgICBmbGV4LXNocmluazogMDtcbn1cblxuLm1vZGVOYW1lIHtcbiAgICBmb250LXNpemU6IHh4LXNtYWxsO1xufVxuXG4uY29udGVudCB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBmbGV4LWdyb3c6IDE7XG59XG5cblxuLmZvb3RlciB7XG4gICAgZmxleC1ncm93OiAwO1xuICAgIGZsZXgtc2hyaW5rOiAwO1xufVxuXG46aG9zdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBcbn0iLCIudG9vbGJhciB7XG4gIGZsZXgtZ3JvdzogMDtcbiAgZmxleC1zaHJpbms6IDA7XG59XG5cbi5tb2RlTmFtZSB7XG4gIGZvbnQtc2l6ZTogeHgtc21hbGw7XG59XG5cbi5jb250ZW50IHtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgZmxleC1ncm93OiAxO1xufVxuXG4uZm9vdGVyIHtcbiAgZmxleC1ncm93OiAwO1xuICBmbGV4LXNocmluazogMDtcbn1cblxuOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG59Il19 */");

/***/ }),

/***/ "./src/app/components/tools/sem-af/sem-af.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/components/tools/sem-af/sem-af.component.ts ***!
  \*************************************************************/
/*! exports provided: SemAF */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SemAF", function() { return SemAF; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var src_app_services_document_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/document.service */ "./src/app/services/document.service.ts");
/* harmony import */ var _popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../popups/sem-af-picker/picker.component */ "./src/app/components/popups/sem-af-picker/picker.component.ts");
/* harmony import */ var _sem_af_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sem-af.utils */ "./src/app/components/tools/sem-af/sem-af.utils.ts");
/* harmony import */ var src_app_services_websocket_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/websocket.service */ "./src/app/services/websocket.service.ts");
/* harmony import */ var _popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../popups/filter/filter.component */ "./src/app/components/popups/filter/filter.component.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils */ "./src/app/components/tools/utils.ts");
/* harmony import */ var _menu_tool_bar_tool_bar_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../menu/tool-bar/tool-bar.component */ "./src/app/components/menu/tool-bar/tool-bar.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");














let SemAF = 
/**
 * Komponente für die Darstellung des QuickAnnotator Werkzeuges
 */
class SemAF {
    constructor(router, route, menuService, documentService, websocketService, dialog, snackBar) {
        this.router = router;
        this.route = route;
        this.menuService = menuService;
        this.documentService = documentService;
        this.websocketService = websocketService;
        this.dialog = dialog;
        this.snackBar = snackBar;
        this.data = [];
        this.help_text = "Hello There";
        this.link_start_end = null;
        this.pageSizes = [35, 60, 100, 150, 250];
        this.pageSize = this.pageSizes[3];
        this.activeFilters = [];
        this.toolbarMenu = [];
        this.selected_reference = null;
        this.selected_reference_multi = null;
        this.subscriptions = [];
        this.lastAnnations = [];
    }
    ngOnInit() {
        this.menuService.hideMenubar();
        this.genearteToolbarMenu();
        // Query Parameter der URL auslesen um darüber Dokument und View zu laden
        const paramObserver = {
            next: (params) => {
                this.casId = params.cas;
                this.viewId = params.view;
                this.generateData();
            }
        };
        this.route.queryParams.subscribe(paramObserver);
        console.log({ 1: this.documentService.currentCAS.text });
        // Auf Änderungen des Dokuments reagieren
        const changeObserver = {
            next: () => this.generateData(),
        };
        this.subscriptions.push(this.documentService.casChanged.subscribe(changeObserver));
    }
    ngOnDestroy() {
        // Beende die momentanen Subscriptions
        for (const subscription of this.subscriptions) {
            subscription.unsubscribe();
        }
    }
    /**
     * Änderungen am Dokument speichern
     */
    saveCas() {
        this.documentService.saveCas(this.casId);
    }
    select_link(id) {
        console.log(`Link Selected: ${id}`);
    }
    /**
     * Navigiere zur Dokumenten Ansicht
     */
    navigateDocument() {
        this.router.navigate(['document'], { queryParams: { cas: this.casId, view: this.viewId } });
    }
    /**
     * Markiere ein Token als ausgewähltes Element
     */
    tokenSelect(data) {
        if (!data) {
            return;
        }
        if (this.selected_reference !== null) {
            const st = this.selected_reference.feature_name;
            const feature = {};
            feature[st] = data.id;
            this.activeFilters = [];
            console.log("feature: ", feature, data);
            this.update_feature(Number.parseInt(this.selected_reference.addr), feature);
            this.selected_reference = null;
            return;
        }
        else if (this.selected_reference_multi !== null) {
            const st = this.selected_reference_multi.feature_name;
            const feature = {};
            this.selected_reference_multi.current_ids.push(data.id);
            feature[st] = this.selected_reference_multi.current_ids;
            this.activeFilters = [];
            console.log("feature: ", feature, data);
            this.update_feature(Number.parseInt(this.selected_reference_multi.addr), feature);
            this.selected_reference_multi = null;
            return;
        }
        if (this.link_start_end !== null) {
            console.log("HIIIII");
            const id = data.id;
            if (id === undefined)
                return;
            this.link_start_end.push(id);
            this.help_text = `Select End for ${this.new_link.name}`;
            if (this.link_start_end.length == 2) {
                console.log("start_end:", JSON.stringify(this.link_start_end, null, 4));
                const [a, b] = this.link_start_end;
                this.createLink(this.new_link.type, a, b);
                this.link_start_end = null;
                this.help_text = null;
            }
            return;
        }
        {
            // Modus: Einzelne Annotation (Auswahl der Kategorie über einen Popup Dialog)
            console.log("data.data.features", data.data.features);
            const picker = this.dialog.open(_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["PickerComponent"], {
                data: {
                    features: data.data.features,
                    entries: _sem_af_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"],
                    last: this.lastAnnations,
                    highlights: data.data._type,
                    annoData: this.tool.toolElements,
                    text: this.documentService.currentCAS.text,
                    links: this.links,
                    id: data.id
                },
                height: 'inherit',
            });
            picker.afterClosed().subscribe((result) => {
                console.log("CLOSED!");
                var new_features;
                if (result) {
                    if (result.type == _popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["return_type"].change_attribute) {
                        {
                            if (Object.entries(result.data).length == 0)
                                return;
                            const addr = data.id;
                            this.update_feature(addr, result.data);
                        }
                    }
                    else if (_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["return_type"].selected == result.type) {
                        this.selectedAnnotation = result.entry;
                        new_features = result.features;
                        const queue = [this.removeallAnnotations(data.id), this.createAnnotation(data)];
                        this.sendBatch(queue);
                    }
                    else if (_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["return_type"].selected_after == result.type) {
                        this.selectedAnnotation = result.entry;
                        const featues = {
                            begin: data.data.features.end,
                            end: data.data.features.end,
                        };
                        console.log("data:  ", JSON.stringify(data, null, 4));
                        const features = {};
                        const queue = {
                            cmd: 'create',
                            data: {
                                bid: '_b0_',
                                features: featues,
                                _type: this.selectedAnnotation.type,
                            }
                        };
                        console.log("queue11:  ", JSON.stringify(queue, null, 4));
                        this.sendBatch([queue]);
                    }
                    else if (_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["return_type"].selected_ref == result.type) {
                        const addr = data.id;
                        console.log("resxx", result);
                        this.selected_reference = { feature_name: result.feature_name, addr: addr };
                        if (result.allowed_type !== null) {
                            this.activeFilters = result.allowed_type;
                        }
                        {
                            if (Object.entries(result.data).length == 0)
                                return;
                            this.update_feature(addr, result.data);
                        }
                    }
                    else if (_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["return_type"].selected_ref_multi == result.type) {
                        const addr = data.id;
                        console.log("resxx", result);
                        this.selected_reference_multi = { feature_name: result.feature_name, addr: addr, current_ids: result.current_ids };
                        if (result.allowed_type !== null) {
                            this.activeFilters = result.allowed_type;
                        }
                        {
                            if (Object.entries(result.data).length == 0)
                                return;
                            this.update_feature(addr, result.data);
                        }
                    }
                    else if (_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["return_type"].add_link == result.type) {
                        const link = result.entry;
                        console.log("link:   a", link);
                        this.link_start_end = [data.id];
                        this.snackBar.open(`Select End for ${link.name}`, null, { duration: 2000, });
                        this.new_link = link;
                    }
                    else if (_popups_sem_af_picker_picker_component__WEBPACK_IMPORTED_MODULE_6__["return_type"].remove_selected == result.type) {
                        const { begin, end } = result.features;
                        console.log("data{{{{", data);
                        const queue = [
                            {
                                cmd: 'remove',
                                data: {
                                    bid: '_b0_',
                                    addr: `${data.id}`,
                                }
                            },
                            {
                                cmd: 'create',
                                data: {
                                    bid: '_b1_',
                                    features: { begin: begin, end: end },
                                    _type: "org.texttechnologylab.annotation.semaf.isobase.Entity",
                                }
                            }
                        ];
                        this.sendBatch(queue);
                    }
                }
            });
        }
    }
    changePageSize(num) {
        this.pageSize = num;
    }
    openFilterSelection() {
        const filterData = {
            type: 'multi',
            data: { 'POPUP-FILTER.ANNOTATION-LABEL': _sem_af_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"] },
        };
        const filter = this.dialog.open(_popups_filter_filter_component__WEBPACK_IMPORTED_MODULE_9__["FilterComponent"], {
            data: [filterData, this.activeFilters],
            height: 'inherit'
        });
        filter.afterClosed().subscribe((result) => {
            if (result) {
                this.activeFilters = Array.from(result);
                console.log(this.activeFilters);
            }
        });
    }
    /**
     * Erzeuge ein Multitoken zwischen den im Tupel übergebenen IDs
     */
    createMultiToken([fstId, sndId]) {
        const fstToken = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"]][fstId]);
        const sndToken = Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"]][sndId]);
        if (!fstToken || !sndToken) {
            // IDs waren ungültig
            return;
        }
        // Bestimmte den Textabschnitt, der als Multitoken zusammengefasst werden soll
        const begin = Math.min(fstToken.features.begin, sndToken.features.begin);
        const end = Math.max(fstToken.features.end, sndToken.features.end);
        const possibles = Object.values(this.tool.toolElements[_utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"]]).map((entry) => Object(_utils__WEBPACK_IMPORTED_MODULE_10__["getAnnotation"])(entry));
        const children = [];
        for (const entry of possibles) {
            if (!entry) {
                continue;
            }
            if (entry.features.parent === 'null' && entry.features.begin >= begin && entry.features.end <= end) {
                children.push(entry._addr);
            }
        }
        let batchId = 0;
        const queue = [{
                cmd: 'create',
                data: {
                    bid: '_b0_',
                    features: {
                        begin,
                        end,
                        children,
                    },
                    _type: _utils__WEBPACK_IMPORTED_MODULE_10__["quickTreeType"],
                }
            }];
        for (const id of children) {
            queue.push({
                cmd: 'edit',
                data: {
                    bid: `_b${++batchId}_`,
                    addr: `${id}`,
                    features: {
                        parent: '_b0_',
                    }
                }
            });
        }
        this.sendBatch(queue);
    }
    /**
     * Löse ein Multitoken wieder in einzelne Tokens auf
     */
    removeMultiToken(id) {
        this.sendBatch([{
                cmd: 'remove',
                data: {
                    bid: '_b0_',
                    addr: id,
                }
            }]);
    }
    /**
     * Reagiere auf die Auswahl eines Kontextmenü Eintrages der Toolbar
     */
    onMenuSelect(event) {
        const [id, parent] = event;
        switch (id) {
            case 'save':
                this.saveCas();
                break;
            case 'filter':
                this.openFilterSelection();
                break;
            case _menu_tool_bar_tool_bar_component__WEBPACK_IMPORTED_MODULE_11__["returnEventId"]:
                this.navigateDocument();
                break;
            default:
                const num = Number.parseInt(id, 10);
                switch (parent) {
                    case 'items':
                        if (this.pageSizes.some((size) => size === num)) {
                            this.pageSize = num;
                            this.genearteToolbarMenu();
                        }
                        break;
                }
        }
    }
    /**
     * Verarbeite die geladenen Daten für die Darstellung innerhalb des Werkzeuges
     */
    generateData() {
        this.tool = this.documentService.currentTool;
        const text = this.documentService.currentCAS.text;
        const tokens = this.tool.toolElements["org.texttechnologylab.annotation.semaf.isobase.Entity"] || {};
        const data = [];
        const types = [..._sem_af_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"]];
        const annon_types = _sem_af_utils__WEBPACK_IMPORTED_MODULE_7__["defaultAnnotationClasses"].map((x) => x.type);
        annon_types.push('org.texttechnologylab.annotation.semaf.isobase.Entity');
        for (const item of annon_types) {
            for (const token_ of Object.values(this.tool.toolElements[item] || {})) {
                if (Object.values(token_).length == 0)
                    continue;
                const token = token_;
                const { begin, end } = token.features;
                data.push({
                    label: (begin !== end) ? text.slice(begin, end) : "∅",
                    id: token._addr,
                    data: {
                        _addr: null,
                        _type: token._type,
                        features: token.features
                    },
                });
            }
        }
        this.data = data.sort((a, b) => a.data.features.begin - b.data.features.begin);
        const find_id = (id) => {
            if (id === null || id == undefined)
                return null;
            const [cc] = Object.values(this.tool.toolElements).map((val) => val[id]).filter((x) => x !== undefined);
            return cc;
        };
        /**
         * The following lines convert this.tool.toolElements to Link[]
         * so they extract all links and save them in this.links
         */
        const link_types = [..._sem_af_utils__WEBPACK_IMPORTED_MODULE_7__["defaultLinkClasses"]];
        this.links = [];
        for (const { type, rgb } of link_types) {
            // Not all Files need to have all types of links
            // In that case the cas does not contain them
            if (this.tool.toolElements[type] === undefined)
                continue;
            const links_of_type = Object.values(this.tool.toolElements[type]);
            const links = links_of_type.map((x) => {
                if (Object.values(x).length == 0)
                    return null;
                const link = x;
                const figure = find_id(link.features["figure"]);
                const ground = find_id(link.features["ground"]);
                const flabel = { id: null, label: null, data: null };
                const glabel = { id: null, label: null, data: null };
                if (figure !== null) {
                    flabel.id = figure._addr;
                    flabel.label = this.documentService.currentCAS.text.slice(figure.features.begin, figure.features.end);
                    flabel.data = figure;
                }
                if (ground !== null) {
                    glabel.id = ground._addr;
                    glabel.label = this.documentService.currentCAS.text.slice(ground.features.begin, ground.features.end);
                    glabel.data = ground;
                    console.log("ground", ground);
                }
                return {
                    id: link._addr,
                    type: link._type,
                    from: flabel,
                    to: glabel,
                };
            });
            this.links = this.links.concat(links);
        }
    }
    /**
     * Updates features of a given addr
     */
    update_feature(addr, features) {
        const queue = {
            cmd: 'edit',
            data: {
                bid: '_b0_',
                addr: `${addr}`,
                features: features,
            }
        };
        this.sendBatch([queue]);
    }
    /**
     * Erzeugt eine Annotation
     */
    createAnnotation(data) {
        const featues = {
            begin: data.data.features.begin,
            end: data.data.features.end,
        };
        const queue = {
            cmd: 'create',
            data: {
                bid: '_b0_',
                features: featues,
                _type: this.selectedAnnotation.type,
            }
        };
        return queue;
    }
    createLink(type, start, end) {
        const queue = {
            cmd: 'create',
            data: {
                bid: '_b0_',
                features: {
                    figure: start,
                    ground: end,
                },
                _type: type,
            }
        };
        console.log("queuex:  ", JSON.stringify(queue, null, 4));
        this.sendBatch([queue]);
    }
    /**
     * Remove all annotations
     */
    removeallAnnotations(addr) {
        const queue = {
            cmd: 'remove',
            data: {
                bid: '_b0_',
                addr: `${addr}`,
            }
        };
        return queue;
    }
    sendBatch(queue) {
        this.websocketService.send({
            cmd: 'work_batch',
            data: {
                casId: this.casId,
                options: [{ privateSession: false }],
                queue,
                toolName: 'quickpanel',
                view: this.viewId,
            }
        });
    }
    /**
     * Befülle das Kontextmenü der Toolbar
     */
    genearteToolbarMenu() {
        const items = {
            type: 'listing',
            id: 'items',
            name: 'TOOL-QUICKANNO.ITEMS',
            list: [],
        };
        for (const size of this.pageSizes) {
            items.list.push({
                type: 'action',
                id: `${size}`,
                name: `${size}`,
                selected: size === this.pageSize,
            });
        }
        const retval = [items];
        retval.push({
            type: 'action',
            id: 'filter',
            name: 'TOOL-QUICKANNO.FILTER',
            icon: 'filter_list',
        });
        retval.push({
            type: 'action',
            id: 'save',
            name: 'TOOL-QUICKANNO.SAVE',
            icon: 'save',
        });
        this.toolbarMenu = retval;
    }
};
SemAF.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_2__["MenuService"] },
    { type: src_app_services_document_service__WEBPACK_IMPORTED_MODULE_5__["DocumentService"] },
    { type: src_app_services_websocket_service__WEBPACK_IMPORTED_MODULE_8__["WebsocketService"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_12__["MatSnackBar"] }
];
SemAF = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-sem-af',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./sem-af.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/tools/sem-af/sem-af.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./sem-af.component.scss */ "./src/app/components/tools/sem-af/sem-af.component.scss")).default]
    })
    /**
     * Komponente für die Darstellung des QuickAnnotator Werkzeuges
     */
], SemAF);



/***/ }),

/***/ "./src/app/components/tools/sem-af/sem-af.utils.ts":
/*!*********************************************************!*\
  !*** ./src/app/components/tools/sem-af/sem-af.utils.ts ***!
  \*********************************************************/
/*! exports provided: FeatureType, defaultAnnotationClasses, defaultLinkClasses */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeatureType", function() { return FeatureType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultAnnotationClasses", function() { return defaultAnnotationClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultLinkClasses", function() { return defaultLinkClasses; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

var FeatureType;
(function (FeatureType) {
    /** Choose if There only limited options like Volume, Point, Area and Line */
    FeatureType[FeatureType["Select"] = 0] = "Select";
    /** Choose if the Feature is full Text editable like a Comment for Example   */
    FeatureType[FeatureType["Text"] = 1] = "Text";
    /** Choose if the Feature is in Reference to another Entity like in Link the to and from Features*/
    FeatureType[FeatureType["Reference"] = 2] = "Reference";
    FeatureType[FeatureType["ReferenceMulti"] = 3] = "ReferenceMulti";
})(FeatureType || (FeatureType = {}));
const defaultAnnotationClasses = [
    /*COMPLETE spatial entity 'non-consuming tag'*/
    {
        rgb: 'rgb(242,187,5)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.SpatialEntity',
        name: 'Spatial Entity',
        css_class: 'I-Spatial-Entity',
        features: {
            "spatial_entitiy_type": {
                display_name: "Type(req)",
                type: FeatureType.Select,
                value: "type",
                select_option: [{
                        display_name: "Fac",
                        value: "FAC",
                        value_name: "FAC"
                    },
                    {
                        display_name: "Vehicle",
                        value: "VEHICLE",
                        value_name: "VEHICLE"
                    },
                    {
                        display_name: "Person",
                        value: "PERSON",
                        value_name: "PERSON"
                    },
                    {
                        display_name: "Dynamic Event",
                        value: "DYNAMIC_EVENT",
                        value_name: "DYNAMIC_EVENT"
                    },
                    {
                        display_name: "Artifact",
                        value: "ARTIFACT",
                        value_name: "ARTIFACT"
                    },
                ]
            },
            "form": {
                display_name: "Form",
                type: FeatureType.Select,
                value: "form",
                select_option: [{
                        display_name: "NOM",
                        value: "NOM",
                        value_name: "NOM"
                    },
                    {
                        display_name: "NAM",
                        value: "NAM",
                        value_name: "NAM"
                    }
                ]
            },
            "cardinality": {
                display_name: 'Cardinality',
                type: FeatureType.Text,
                value: [],
            },
            "Countable": {
                display_name: "countable",
                type: FeatureType.Select,
                value: 'countable',
                select_option: [{
                        display_name: "False",
                        value: false,
                        value_name: "FALSE"
                    },
                    {
                        display_name: "True",
                        value: true,
                        value_name: "TRUE"
                    }
                ]
            },
            "comment": {
                display_name: "Comment",
                type: FeatureType.Text,
                value: ""
            },
        }
    },
    /*place complete*/
    {
        rgb: 'rgb(177,89,40)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.Place',
        name: 'Place',
        css_class: 'I-Place',
        features: {
            "dimensionality": {
                display_name: "Dimensionality",
                type: FeatureType.Select,
                value: "Area",
                select_option: [{
                        display_name: "Area",
                        value: "AREA",
                        value_name: "AREA"
                    },
                    {
                        display_name: "Point",
                        value: "POINT",
                        value_name: "POINT"
                    },
                    {
                        display_name: "Line",
                        value: "LINE",
                        value_name: "LINE"
                    },
                    {
                        display_name: "Volume",
                        value: "VOLUME",
                        value_name: "VOLUME"
                    }
                ]
            },
            "comment": {
                display_name: "Comment",
                type: FeatureType.Text,
                value: ""
            },
            "spatial_entitiy_type": {
                display_name: "Type",
                type: FeatureType.Select,
                value: "type",
                select_option: [{
                        display_name: "water",
                        value: "WATER",
                        value_name: "WATER"
                    },
                    {
                        display_name: "Celestial",
                        value: "CELESTIAL",
                        value_name: "CELESTIAL"
                    },
                    {
                        display_name: "Civil",
                        value: "CIVIL",
                        value_name: "CIVIL"
                    },
                    {
                        display_name: "Country",
                        value: "COUNTRY",
                        value_name: "COUNTRY"
                    },
                    {
                        display_name: "Grid",
                        value: "GRID",
                        value_name: "GRID"
                    },
                    {
                        display_name: "Latlong",
                        value: "LATLONG",
                        value_name: "LATLONG"
                    },
                    {
                        display_name: "MTN",
                        value: "MTN",
                        value_name: "MTN"
                    },
                    {
                        display_name: "MTS",
                        value: "MTS",
                        value_name: "MTS"
                    },
                    {
                        display_name: "PostalCode",
                        value: "POSTALCODE",
                        value_name: "POSTALCODE"
                    },
                    {
                        display_name: "Postbox",
                        value: "POSTBOX",
                        value_name: "POSTBOX"
                    }, {
                        display_name: "PPL",
                        value: "PPL",
                        value_name: "PPL"
                    }, {
                        display_name: "PPLA",
                        value: "PPLA",
                        value_name: "PPLA"
                    }, {
                        display_name: "PPLC",
                        value: "PPLC",
                        value_name: "PPLC"
                    }, {
                        display_name: "Region",
                        value: "REGION",
                        value_name: "REGION"
                    }, {
                        display_name: "State",
                        value: "STATE",
                        value_name: "STATE"
                    },
                    {
                        display_name: "UTM",
                        value: "UTM",
                        value_name: "UTM"
                    },
                ]
            },
            "form": {
                display_name: "Form",
                type: FeatureType.Select,
                value: "Form",
                select_option: [{
                        display_name: "NOM",
                        value: "NOM",
                        value_name: "NOM"
                    },
                    {
                        display_name: "NAM",
                        value: "NAM",
                        value_name: "NAM"
                    }
                ]
            },
            "continent": {
                display_name: "Continent",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "AF",
                        value: "AF",
                        value_name: "AF"
                    },
                    {
                        display_name: "AN",
                        value: "AN",
                        value_name: "AN"
                    },
                    {
                        display_name: "AI",
                        value: "AI",
                        value_name: "AI"
                    },
                    {
                        display_name: "AU",
                        value: "AU",
                        value_name: "AU"
                    },
                    {
                        display_name: "GO",
                        value: "GO",
                        value_name: "GO"
                    }, {
                        display_name: "GO",
                        value: "GO",
                        value_name: "GO"
                    }, {
                        display_name: "LA",
                        value: "LA",
                        value_name: "LA"
                    }, {
                        display_name: "NA",
                        value: "NA",
                        value_name: "NA"
                    },
                    {
                        display_name: "PA",
                        value: "PA",
                        value_name: "PA"
                    }, {
                        display_name: "SA",
                        value: "SA",
                        value_name: "SA"
                    }
                ]
            },
            "country": {
                display_name: "Country",
                type: FeatureType.Text,
                value: ""
            },
            "state": {
                display_name: "State",
                type: FeatureType.Text,
                value: ""
            },
            "province": {
                display_name: "Province",
                type: FeatureType.Text,
                value: ""
            },
            "county": {
                display_name: "County",
                type: FeatureType.Text,
                value: ""
            },
            "CTV": {
                display_name: "CTV",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "City",
                        value: "CITY",
                        value_name: "CITY"
                    },
                    {
                        display_name: "Town",
                        value: "TOWN",
                        value_name: "TOWN"
                    },
                    {
                        display_name: "Village",
                        value: "VILLAGE",
                        value_name: "VILLAGE"
                    },
                ]
            },
            "gazref": {
                display_name: "Gazref",
                type: FeatureType.Text,
                value: ""
            },
            'lat': {
                display_name: 'Latitude',
                type: FeatureType.Text,
                value: "",
            },
            'long': {
                display_name: 'Longtitude',
                type: FeatureType.Text,
                value: "",
            },
            'elevation': {
                display_name: 'Elevation',
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Place"],
                value: "null",
            },
            "dcl": {
                display_name: "DCL",
                type: FeatureType.Select,
                value: false,
                select_option: [{
                        display_name: "False",
                        value: false,
                        value_name: "FALSE"
                    },
                    {
                        display_name: "True",
                        value: true,
                        value_name: "TRUE"
                    }
                ],
                not_nullable: true
            },
        }
    },
    /*nonmotion event<-->event path  */
    {
        rgb: 'rgb(218,247,220)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.EventPath',
        name: 'Event-Path',
        css_class: 'I-eventpath',
        features: {
            "trigger": {
                display_name: "TRIGGER",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Motion"],
                value: ""
            },
            'startID': {
                display_name: 'Start',
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.SpatialEntity"],
                value: "null",
            },
            'endID': {
                display_name: 'End',
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.SpatialEntity"],
                value: "null",
            },
            'midID_array': {
                display_name: 'Mids',
                type: FeatureType.ReferenceMulti,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Place"],
                value: "null",
            },
            "gazref": {
                display_name: "GAZREF",
                type: FeatureType.Text,
                value: "",
            },
            'comment': {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
            'longtitude': {
                display_name: 'longtitude',
                type: FeatureType.Text,
                value: "",
            },
            'latitude': {
                display_name: 'latitude',
                type: FeatureType.Text,
                value: "",
            },
            "elevation": {
                display_name: "elevation",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Measure"],
                value: ""
            }
        }
    },
    /**
     * {
                        name: 'Dimensionality',
                        uimaName: 'dimensionality',
                        formElement: 'combobox',
                        formCfg: { width: 268 },
                        values: ['POINT', 'LINE', 'AREA', 'VOLUME']
                    }
     */
    /*path complete */
    {
        rgb: 'rgb(68,207,108)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.Path',
        name: 'Path',
        css_class: 'I-Path',
        features: {
            'dimensionality': {
                display_name: 'Dimensionality',
                type: FeatureType.Select,
                value: "",
                select_option: [
                    {
                        value: 'AREA',
                        display_name: 'Area',
                        value_name: "AREA"
                    },
                    /*point should never be a path* */
                    {
                        display_name: "Line",
                        value: "LINE",
                        value_name: "LINE"
                    },
                    {
                        display_name: "Volume",
                        value: "VOLUME",
                        value_name: "VOLUME"
                    }
                ]
            },
            'comment': {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
            'startID': {
                display_name: 'Start',
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Path", "org.texttechnologylab.annotation.semaf.isospace.Place"],
                value: "null",
            },
            'endID': {
                display_name: 'End',
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Path", "org.texttechnologylab.annotation.semaf.isospace.Place"],
                value: "null",
            },
            'midID_array': {
                display_name: 'Mids',
                type: FeatureType.ReferenceMulti,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Place"],
                value: "null",
            },
            "form": {
                display_name: "Form",
                type: FeatureType.Select,
                value: "Form",
                select_option: [{
                        display_name: "NOM",
                        value: "NOM",
                        value_name: "NOM"
                    },
                    {
                        display_name: "NAM",
                        value: "NAM",
                        value_name: "NAM"
                    }
                ]
            },
            "dcl": {
                display_name: "DCL",
                type: FeatureType.Select,
                value: false,
                select_option: [{
                        display_name: "False",
                        value: false,
                        value_name: "FALSE"
                    },
                    {
                        display_name: "True",
                        value: true,
                        value_name: "TRUE"
                    }
                ],
                not_nullable: true
            },
            "elevation": {
                display_name: "elevation",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Measure"],
                value: ""
            },
            'mod': {
                display_name: 'mod',
                type: FeatureType.Text,
                value: "",
            },
            "gazref": {
                display_name: "Gazref",
                type: FeatureType.Text,
                value: ""
            },
            'lat': {
                display_name: 'Latitude',
                type: FeatureType.Text,
                value: "",
            },
            'long': {
                display_name: 'Longtitude',
                type: FeatureType.Text,
                value: "",
            },
        }
    },
    /*event complete*/
    {
        rgb: 'rgb(28,202,216)',
        type: 'org.texttechnologylab.annotation.semaf.isobase.Event',
        name: 'Event',
        css_class: 'I-Event',
        features: {
            'mod': {
                display_name: 'mod',
                type: FeatureType.Text,
                value: "",
            },
            "elevation": {
                display_name: "elevation",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Measure"],
                value: ""
            },
            'comment': {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
            'longtitude': {
                display_name: 'longtitude',
                type: FeatureType.Text,
                value: "",
            },
            'latitude': {
                display_name: 'latitude',
                type: FeatureType.Text,
                value: "",
            }
        }
    },
    /*motion complete*/
    {
        rgb: 'rgb(252,68,15)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.Motion',
        name: 'Motion',
        css_class: 'I-Motion',
        features: {
            "motion_type": {
                display_name: "Montion type(req)",
                type: FeatureType.Select,
                value: "MOTION_TYPE",
                select_option: [{
                        display_name: "Manner",
                        value: "MANNER",
                        value_name: "MANNER"
                    },
                    {
                        display_name: "Path",
                        value: "PATH",
                        value_name: "PATH"
                    }]
            },
            "motion_manner": {
                display_name: "MOTION_MANNER",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isobase.Entity"],
                value: ""
            },
            "motion_goal": {
                display_name: "MOTION_GOAL",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.SpatialEntity"],
                value: ""
            },
            "motion_class": {
                display_name: "MOTION_CLASS",
                type: FeatureType.Select,
                value: "MOTION_CLASS",
                select_option: [{
                        display_name: "Move",
                        value: "MOVE",
                        value_name: "MOVE"
                    },
                    {
                        display_name: "Move External",
                        value: "MOVE_EXTERNAL",
                        value_name: "MOVE_EXTERNAL"
                    },
                    {
                        display_name: "Move Internal",
                        value: "MOVE_INTERNAL",
                        value_name: "MOVE_INTERNAL"
                    },
                    {
                        display_name: "Leave",
                        value: "LEAVE",
                        value_name: "LEAVE"
                    },
                    {
                        display_name: "Reach",
                        value: "REACH",
                        value_name: "REACH"
                    },
                    {
                        display_name: "Cross",
                        value: "CROSS",
                        value_name: "CROSS"
                    },
                    {
                        display_name: "Detach",
                        value: "DETACH",
                        value_name: "DETACH"
                    },
                    {
                        display_name: "Hit",
                        value: "HIT",
                        value_name: "HIT"
                    },
                    {
                        display_name: "Follow",
                        value: "FOLLOW",
                        value_name: "FOLLOW"
                    },
                    {
                        display_name: "Deviate",
                        value: "DEVIATE",
                        value_name: "DEVIATE"
                    },
                    {
                        display_name: "Stay",
                        value: "STAY",
                        value_name: "STAY"
                    }
                ]
            },
            "motion_sense": {
                display_name: "Motion Sense",
                type: FeatureType.Select,
                value: "MOTION_SENSE",
                select_option: [{
                        display_name: "Litereal",
                        value: "LITEREAL",
                        value_name: "LITEREAL"
                    },
                    {
                        display_name: "Fictive",
                        value: "FICTIVE",
                        value_name: "FICTIVE"
                    },
                    {
                        display_name: "Intrinsic Change",
                        value: "INTRINSIC_CHANGE",
                        value_name: "INTEINSIC_CHANGE"
                    }]
            },
            'mod': {
                display_name: 'mod',
                type: FeatureType.Text,
                value: "",
            },
            'comment': {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            }
        }
    },
    /*measure complete*/
    {
        rgb: 'rgb(187,172,193)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.Measure',
        name: 'Measure',
        css_class: 'I-Measure',
        features: {
            "value": {
                display_name: 'Value(req)',
                type: FeatureType.Text,
                value: "",
            },
            "unit": {
                display_name: 'Unit',
                type: FeatureType.Text,
                value: "",
            },
            "mod": {
                display_name: 'Mod',
                type: FeatureType.Text,
                value: "",
            },
            "comment": {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
        }
    },
    /*spatial signal<-->sRelation complete */
    {
        rgb: 'rgb(27,153,139)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.SRelation',
        name: 'sRelation',
        css_class: 'I-sRelation',
        features: {
            "comment": {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
            "cluster": {
                display_name: 'Cluster',
                type: FeatureType.Text,
                value: "",
            },
            "value": {
                display_name: 'Value',
                type: FeatureType.Text,
                value: "",
            },
            "spatial_entitiy_type": {
                display_name: "TYPE",
                type: FeatureType.Select,
                value: "TYPE",
                select_option: [{
                        display_name: "Topological",
                        value: "TOPOLOGICAL",
                        value_name: "TOPOLOGICAL"
                    },
                    {
                        display_name: "Directional",
                        value: "DIRECTIONAL",
                        value_name: "DIRECTIONAL"
                    },
                    {
                        display_name: "Topo Directional",
                        value: "TOPO_DIRECTIONAL",
                        value_name: "TOPO_DIRECTIONAL"
                    },
                    {
                        display_name: "Path Defining",
                        value: "PATH_DEFINING",
                        value_name: "PATH_DEFINING"
                    }, {
                        display_name: "Goal Defining",
                        value: "GOAL_DEFINING",
                        value_name: "GOAL_DEFINING"
                    }
                ]
            },
        }
    },
    /*motion signal<-->mRelation complete */
    {
        rgb: 'rgb(234,215,219)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.MRelation',
        name: 'mRelation',
        css_class: 'I-mRelation',
        features: {
            "comment": {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
            "value": {
                display_name: 'Value',
                type: FeatureType.Text,
                value: "",
            }
        }
    }
];
/*spatial relationships class*/
const defaultLinkClasses = [
    /*QS link complete*/
    {
        rgb: 'rgb(204,204,204)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.QsLink',
        name: 'QSLink',
        css_class: 'I-QsLink',
        features: {
            "trigger": {
                display_name: "Trigger",
                /*refer to spatial signal*/
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.SRelation"],
                value: "null",
            },
            "figure": {
                display_name: "Figure(req)",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "ground": {
                display_name: "Ground(req)",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            /**
            "trajector": {
              display_name: "Trajector",
             
              type: FeatureType.Reference,
              reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location","org.texttechnologylab.annotation.semaf.isospace.SpatialEntity","org.texttechnologylab.annotation.semaf.isobase.Event"],
              value: "null",
            },
            "landmark": {
              display_name: "Landmark",
             
              type: FeatureType.Reference,
              reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location","org.texttechnologylab.annotation.semaf.isospace.SpatialEntity","org.texttechnologylab.annotation.semaf.isobase.Event"],
              value: "null",
            },**/
            "rel_type": {
                display_name: "relation type",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "DC",
                        value: "DC",
                        value_name: "DC"
                    },
                    {
                        display_name: "EC",
                        value: "EC",
                        value_name: "EC"
                    },
                    {
                        display_name: "PO",
                        value: "PO",
                        value_name: "PO"
                    },
                    {
                        display_name: "EQ",
                        value: "EQ",
                        value_name: "EQ"
                    },
                    {
                        display_name: "TPP",
                        value: "TPP",
                        value_name: "TPP"
                    },
                    {
                        display_name: "TPPi",
                        value: "TPPI",
                        value_name: "TPPI"
                    },
                    {
                        display_name: "NTPP",
                        value: "NTPP",
                        value_name: "NTPP"
                    },
                    {
                        display_name: "NTPPi",
                        value: "NTPPI",
                        value_name: "NTPPI"
                    },
                    {
                        display_name: "IN",
                        value: "IN",
                        value_name: "IN"
                    },
                    {
                        display_name: "OUT",
                        value: "OUT",
                        value_name: "OUT"
                    }]
            }
        }
    },
    /*meta link-mlink complete*/
    {
        rgb: 'rgb(204,204,204)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.MLink',
        name: 'MLink',
        css_class: 'I-MLink',
        features: {
            'comment': {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
            "trigger": {
                display_name: "Trigger",
                /*refer to spatial signal*/
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.SRelation"],
                value: "null",
            },
            "figure": {
                display_name: "Figure(req)",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "ground": {
                display_name: "Ground(req)",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "end_point1": {
                display_name: "end_point1",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "end_point2": {
                display_name: "end_point2",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "val": {
                display_name: "Val",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Measure"],
                value: "null",
            },
            "bounds": {
                display_name: "Bounds",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "rel_type": {
                display_name: "relation type",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "Coreference",
                        value: "COREFERENCE",
                        value_name: "COREFERENCE"
                    },
                    {
                        display_name: "Subcoreference",
                        value: "SUBCOREFFERENCE",
                        value_name: "SUBCOREFFERENCE"
                    },
                    {
                        display_name: " In Front Of",
                        value: "IN FRONT OF",
                        value_name: "IN FRONT OF"
                    },]
            }
        }
    },
    /* measure link not exist*/
    {
        rgb: 'rgb(204,204,204)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.MeasureLink',
        name: 'Measure Link',
        css_class: 'I-MeasureLink',
        features: {
            "trajector": {
                display_name: "Trajector",
                /*refer to location/(spatial)entity/event tag*/
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location", "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity", "org.texttechnologylab.annotation.semaf.isobase.Event"],
                value: "null",
            },
            "landmark": {
                display_name: "Landmark",
                /*refer to location/(spatial)entity/event tag*/
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location", "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity", "org.texttechnologylab.annotation.semaf.isobase.Event"],
                value: "null",
            },
            /*relation type*/
            "relType": {
                display_name: "relation type",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "Above",
                        value: "ABOVE",
                        value_name: "ABOVE"
                    },
                    {
                        display_name: "On",
                        value: "ON",
                        value_name: "ON"
                    },
                    {
                        display_name: " In Front Of",
                        value: "IN FRONT OF",
                        value_name: "IN FRONT OF"
                    },
                    {
                        display_name: "In The Front Of",
                        value: "IN THE FRONT OF",
                        value_name: "IN THE FRONT OF"
                    },
                    {
                        display_name: "Behind",
                        value: "BEHIND",
                        value_name: "BEHIND"
                    },
                    {
                        display_name: "Below",
                        value: "BELOW",
                        value_name: "BELOW"
                    },
                    {
                        display_name: "Under",
                        value: "UNDER",
                        value_name: "UNDER"
                    },
                    {
                        display_name: "Over",
                        value: "OVER",
                        value_name: "OVER"
                    },
                    {
                        display_name: "Outside",
                        value: "OUTSIDE",
                        value_name: "OUTSIDE"
                    },
                    {
                        display_name: "Inside",
                        value: "INSIDE",
                        value_name: "INSIDE"
                    },
                    {
                        display_name: "Between",
                        value: "BETWEEN",
                        value_name: "BETWEEN"
                    },
                    {
                        display_name: "Beside",
                        value: "BESIDE",
                        value_name: "BESIDE"
                    },
                    {
                        display_name: "Next To",
                        value: "NEXT TO",
                        value_name: "NEXT TO"
                    },
                    {
                        display_name: "Before",
                        value: "BEFORE",
                        value_name: "BEFORE"
                    },
                    {
                        display_name: "North",
                        value: "NORTH",
                        value_name: "NORTH"
                    },
                    {
                        display_name: "South",
                        value: "SOUTH",
                        value_name: "SOUTH"
                    },
                    {
                        display_name: "West",
                        value: "WEST",
                        value_name: "WEST"
                    },
                    {
                        display_name: "East",
                        value: "EAST",
                        value_name: "EAST"
                    },
                    {
                        display_name: "Northeast",
                        value: "NORTHEAST",
                        value_name: "NORTHEAST"
                    },
                    {
                        display_name: "Northwest",
                        value: "NORTHWEST",
                        value_name: "NORTHWEST"
                    },
                    {
                        display_name: "Southeast",
                        value: "SOUTHEAST",
                        value_name: "SOUTHEAST"
                    },
                    {
                        display_name: "Southwest",
                        value: "SOUTHWEST",
                        value_name: "SOUTHWEST"
                    },
                    {
                        display_name: "Right",
                        value: "RIGHT",
                        value_name: "RIGHT"
                    },
                    {
                        display_name: "Left",
                        value: "LEFT",
                        value_name: "LEFT"
                    },
                    {
                        display_name: "Opposite",
                        value: "OPPOSITE",
                        value_name: "OPPOSITE"
                    },
                    {
                        display_name: "At",
                        value: "AT",
                        value_name: "AT"
                    },
                    {
                        display_name: "In",
                        value: "IN",
                        value_name: "IN"
                    }
                ]
            },
            /*val describes the actual measurement*/
            "val": {
                display_name: "Val",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "Near",
                        value: "NEAR",
                        value_name: "NEAR"
                    },
                    {
                        display_name: "Far",
                        value: "FAR",
                        value_name: "FAR"
                    },
                    {
                        display_name: "Shorter",
                        value: "SHORTER",
                        value_name: "SHORTER"
                    },
                    {
                        display_name: "Taller",
                        value: "TALLER",
                        value_name: "TALLER"
                    },
                    {
                        display_name: "Others Refer to Text",
                        value: "OTHERS",
                        value_name: "OTHERS"
                    },
                ]
            },
            "Val_refer_to_Text": {
                display_name: "Val refer to Text",
                /*refer to a measure tag*/
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Measure"],
                value: "null",
            },
            "endPoint1": {
                display_name: "endPoint1",
                /*refer to location/(spatial)entity/event tag*/
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location", "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity", "org.texttechnologylab.annotation.semaf.isobase.Event"],
                value: "null",
            },
            "endPoint2": {
                display_name: "endPoint2",
                /*refer to location/(spatial)entity/event tag*/
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location", "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity", "org.texttechnologylab.annotation.semaf.isobase.Event"],
                value: "null",
            },
        }
    },
    /* move link complete */
    {
        rgb: 'rgb(204,204,204)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.MoveLink',
        name: 'Move Link',
        css_class: 'I-MoveLink',
        features: {
            'comment': {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
            "figure": {
                display_name: "Figure(req)",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "ground": {
                display_name: "Ground(req)",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "trigger": {
                display_name: "Trigger",
                type: FeatureType.Reference,
                reference_option: [],
                /*no restrict to select */
                value: "null",
            },
            "rel_type": {
                display_name: "Relation Type(req)",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "traverse",
                        value: "TRAVERSE",
                        value_name: "TRAVERSE"
                    }]
            },
            "source": {
                display_name: "Source",
                type: FeatureType.Reference,
                reference_option: [],
                /*no restrict to select */
                value: "null",
            },
            "goal": {
                display_name: "Goal",
                type: FeatureType.Reference,
                reference_option: [],
                /*no restrict to select */
                value: "null",
            },
            'mid_point_array': {
                display_name: 'Mids',
                type: FeatureType.ReferenceMulti,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Place"],
                value: "null",
            },
            /*"mover": {
              display_name: "Mover",
              type: FeatureType.Reference,
              reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location","org.texttechnologylab.annotation.semaf.isospace.SpatialEntity","org.texttechnologylab.annotation.semaf.isobase.Event"],
              value: "null",
            }, */
            "goal_reached": {
                display_name: "Goal Reached",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "True",
                        value: "TRUE",
                        value_name: "TRUE"
                    },
                    {
                        display_name: "False",
                        value: "FALSE",
                        value_name: "FALSE"
                    },
                    {
                        display_name: "Uncertain",
                        value: "UNCERTAIN",
                        value_name: "UNCERTAIN"
                    }]
            },
            "path_id": {
                display_name: "Path ID",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Path"],
                value: "null",
            },
            "adjunct_id": {
                display_name: "Adjunct ID",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.SpatialSignal"],
                value: "null",
            },
            "motionsignal_id": {
                display_name: "ground",
                type: FeatureType.Reference,
                reference_option: ["org.texttechnologylab.annotation.semaf.isospace.MotionSignal"],
                value: "null",
            }
        },
    },
    /*orientation link complete  */
    {
        rgb: 'rgb(204,204,204)',
        type: 'org.texttechnologylab.annotation.semaf.isospace.OLink',
        name: 'OLink',
        css_class: 'I-OLink',
        features: {
            'comment': {
                display_name: 'Comment',
                type: FeatureType.Text,
                value: "",
            },
            "figure": {
                display_name: "Figure(req)",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "ground": {
                display_name: "Ground(req)",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            "trigger": {
                display_name: "Trigger",
                /*refer to spatial signal*/
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            },
            /*relation type*/
            "rel_type": {
                display_name: "relation type",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "Above",
                        value: "ABOVE",
                        value_name: "ABOVE"
                    },
                    {
                        display_name: "On",
                        value: "ON",
                        value_name: "ON"
                    },
                    {
                        display_name: " In Front Of",
                        value: "IN FRONT OF",
                        value_name: "IN FRONT OF"
                    },
                    {
                        display_name: "In The Front Of",
                        value: "IN THE FRONT OF",
                        value_name: "IN THE FRONT OF"
                    },
                    {
                        display_name: "Behind",
                        value: "BEHIND",
                        value_name: "BEHIND"
                    },
                    {
                        display_name: "Below",
                        value: "BELOW",
                        value_name: "BELOW"
                    },
                    {
                        display_name: "Under",
                        value: "UNDER",
                        value_name: "UNDER"
                    },
                    {
                        display_name: "Over",
                        value: "OVER",
                        value_name: "OVER"
                    },
                    {
                        display_name: "Outside",
                        value: "OUTSIDE",
                        value_name: "OUTSIDE"
                    },
                    {
                        display_name: "Inside",
                        value: "INSIDE",
                        value_name: "INSIDE"
                    },
                    {
                        display_name: "Between",
                        value: "BETWEEN",
                        value_name: "BETWEEN"
                    },
                    {
                        display_name: "Beside",
                        value: "BESIDE",
                        value_name: "BESIDE"
                    },
                    {
                        display_name: "Next To",
                        value: "NEXT TO",
                        value_name: "NEXT TO"
                    },
                    {
                        display_name: "Before",
                        value: "BEFORE",
                        value_name: "BEFORE"
                    },
                    {
                        display_name: "North",
                        value: "NORTH",
                        value_name: "NORTH"
                    },
                    {
                        display_name: "South",
                        value: "SOUTH",
                        value_name: "SOUTH"
                    },
                    {
                        display_name: "West",
                        value: "WEST",
                        value_name: "WEST"
                    },
                    {
                        display_name: "East",
                        value: "EAST",
                        value_name: "EAST"
                    },
                    {
                        display_name: "Northeast",
                        value: "NORTHEAST",
                        value_name: "NORTHEAST"
                    },
                    {
                        display_name: "Northwest",
                        value: "NORTHWEST",
                        value_name: "NORTHWEST"
                    },
                    {
                        display_name: "Southeast",
                        value: "SOUTHEAST",
                        value_name: "SOUTHEAST"
                    },
                    {
                        display_name: "Southwest",
                        value: "SOUTHWEST",
                        value_name: "SOUTHWEST"
                    },
                    {
                        display_name: "Right",
                        value: "RIGHT",
                        value_name: "RIGHT"
                    },
                    {
                        display_name: "Left",
                        value: "LEFT",
                        value_name: "LEFT"
                    },
                    {
                        display_name: "Opposite",
                        value: "OPPOSITE",
                        value_name: "OPPOSITE"
                    },
                    {
                        display_name: "At",
                        value: "AT",
                        value_name: "AT"
                    },
                    {
                        display_name: "In",
                        value: "IN",
                        value_name: "IN"
                    }
                ]
            },
            "projective": {
                display_name: "Projective",
                type: FeatureType.Select,
                value: "Projective",
                select_option: [{
                        display_name: "True",
                        value: true,
                        value_name: "TRUE"
                    },
                    {
                        display_name: "False",
                        value: false,
                        value_name: "FALSE"
                    }
                ]
            },
            /* frame type */
            "frame_type": {
                display_name: "frame type",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "Absolute",
                        value: "ABSOLUTE",
                        value_name: "ABSOLUTE"
                    },
                    {
                        display_name: "Instrinsic",
                        value: "INSTRINSIC",
                        value_name: "INSTRINSIC"
                    },
                    {
                        display_name: "Relative",
                        value: "RELATIVE",
                        value_name: "RELATIVE"
                    }
                ]
            },
            /*
           "trajector": {
             display_name: "Trajector",
             
             type: FeatureType.Reference,
             reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location","org.texttechnologylab.annotation.semaf.isospace.SpatialEntity","org.texttechnologylab.annotation.semaf.isobase.Event"],
             value: "null",
           },
           "landmark": {
             display_name: "Landmark",
            
             type: FeatureType.Reference,
             reference_option: ["org.texttechnologylab.annotation.semaf.isospace.Location","org.texttechnologylab.annotation.semaf.isospace.SpatialEntity","org.texttechnologylab.annotation.semaf.isobase.Event"],
             value: "null",
           },
           */
            /* referencePt_cardinal_direction after selecting frametype "Absolute" */
            "reference_pt_str": {
                display_name: "reference Pt str",
                type: FeatureType.Select,
                value: "",
                select_option: [{
                        display_name: "Above",
                        value: "ABOVE",
                        value_name: "ABOVE"
                    },
                    {
                        display_name: "On",
                        value: "ON",
                        value_name: "ON"
                    },
                    {
                        display_name: " In Front Of",
                        value: "IN FRONT OF",
                        value_name: "IN FRONT OF"
                    },
                    {
                        display_name: "In The Front Of",
                        value: "IN THE FRONT OF",
                        value_name: "IN THE FRONT OF"
                    },
                    {
                        display_name: "Behind",
                        value: "BEHIND",
                        value_name: "BEHIND"
                    },
                    {
                        display_name: "Below",
                        value: "BELOW",
                        value_name: "BELOW"
                    },
                    {
                        display_name: "Under",
                        value: "UNDER",
                        value_name: "UNDER"
                    },
                    {
                        display_name: "Over",
                        value: "OVER",
                        value_name: "OVER"
                    },
                    {
                        display_name: "Outside",
                        value: "OUTSIDE",
                        value_name: "OUTSIDE"
                    },
                    {
                        display_name: "Inside",
                        value: "INSIDE",
                        value_name: "INSIDE"
                    },
                    {
                        display_name: "Between",
                        value: "BETWEEN",
                        value_name: "BETWEEN"
                    },
                    {
                        display_name: "Beside",
                        value: "BESIDE",
                        value_name: "BESIDE"
                    },
                    {
                        display_name: "Next To",
                        value: "NEXT TO",
                        value_name: "NEXT TO"
                    },
                    {
                        display_name: "Before",
                        value: "BEFORE",
                        value_name: "BEFORE"
                    },
                    {
                        display_name: "North",
                        value: "NORTH",
                        value_name: "NORTH"
                    },
                    {
                        display_name: "South",
                        value: "SOUTH",
                        value_name: "SOUTH"
                    },
                    {
                        display_name: "West",
                        value: "WEST",
                        value_name: "WEST"
                    },
                    {
                        display_name: "East",
                        value: "EAST",
                        value_name: "EAST"
                    },
                    {
                        display_name: "Northeast",
                        value: "NORTHEAST",
                        value_name: "NORTHEAST"
                    },
                    {
                        display_name: "Northwest",
                        value: "NORTHWEST",
                        value_name: "NORTHWEST"
                    },
                    {
                        display_name: "Southeast",
                        value: "SOUTHEAST",
                        value_name: "SOUTHEAST"
                    },
                    {
                        display_name: "Southwest",
                        value: "SOUTHWEST",
                        value_name: "SOUTHWEST"
                    },
                    {
                        display_name: "Right",
                        value: "RIGHT",
                        value_name: "RIGHT"
                    },
                    {
                        display_name: "Left",
                        value: "LEFT",
                        value_name: "LEFT"
                    },
                    {
                        display_name: "Opposite",
                        value: "OPPOSITE",
                        value_name: "OPPOSITE"
                    },
                    {
                        display_name: "At",
                        value: "AT",
                        value_name: "AT"
                    },
                    {
                        display_name: "In",
                        value: "IN",
                        value_name: "IN"
                    },
                    { display_name: "Viewer",
                        value: "VIEWER",
                        value_name: "VIEWER"
                    },
                    {
                        display_name: "Tag",
                        value: "TAG",
                        value_name: "TAG"
                    }
                ]
            },
            /* referencePt_ground_entity after selecting frametype "Intrinsic" */
            "reference_pt": {
                display_name: "referencePt ground entity",
                type: FeatureType.Reference,
                reference_option: [],
                value: "null",
            }
        }
    }
];
/*location NOT EXIST
  {
    rgb: 'rgb(224,229,223)',
    type: 'org.texttechnologylab.annotation.semaf.isospace.Location',
    name: 'Location',
    css_class: 'I-Location',
    features: {
      "dimensionality": {
        display_name: "Dimensionality",
        type: FeatureType.Select,
        value: "Area",
        select_option: [{
          display_name: "Area",
          value: "AREA",
          value_name: "AREA"
        },
        {
          display_name: "Point",
          value: "POINT",
          value_name: "POINT"
        },
        {
          display_name: "Line",
          value: "LINE",
          value_name: "LINE"
        },
        {
          display_name: "Volume",
          value: "VOLUME",
          value_name: "VOLUME"
        }
        ]

      },
      "comment": {
        display_name: "Comment",
        type: FeatureType.Text,
        value: ""
      },
      "form": {
        display_name: "Form",
        type: FeatureType.Select,
        value: "Form",
        select_option: [{
          display_name: "NOM",
          value: "NOM",
          value_name: "NOM"
        },
        {
          display_name: "NAM",
          value: "NAM",
          value_name: "NAM"
        }
        ]
      },
      "dcl": {
        display_name: "DCL",
        type: FeatureType.Select,
        value: false,
        select_option: [{
          display_name: "False",
          value: false,
          value_name: "FALSE"
        },
        {
          display_name: "True",
          value: true,
          value_name: "TRUE"
        }
        ],
        not_nullable: true
      },
      "countable": {
        display_name: "Countable",
        type: FeatureType.Select,
        value: "Countable",
        select_option: [{
          display_name: "True",
          value: true,
          value_name: "TRUE"
        },
        {
          display_name: "False",
          value: false,
          value_name: "FALSE"
        }
        ]
      },
      "elevation": {
        display_name: "elevation",
        type: FeatureType.Text,
        value: ""
      }
    }
  },*/ 


/***/ }),

/***/ "./src/app/components/tools/sem-af/uima.ts":
/*!*************************************************!*\
  !*** ./src/app/components/tools/sem-af/uima.ts ***!
  \*************************************************/
/*! exports provided: data, inhe, make_filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "data", function() { return data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inhe", function() { return inhe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "make_filter", function() { return make_filter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

const data = {
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.APPOS": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.Infront": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Game": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.POS_NNV": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_NOUN",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.PRT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence",
                "name": "id",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.TBODY": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.iaa.AgreementContainer": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.iaa.AgreementContainer",
                "name": "overallAgreementValue",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.iaa.AgreementContainer",
                "name": "agreementMeasure",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.iaa.AgreementContainer",
                "name": "categoryNames",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.iaa.AgreementContainer",
                "name": "categoryAgreementValues",
                "range": "uima.cas.DoubleArray"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.iaa.AgreementContainer",
                "name": "categoryCounts",
                "range": "uima.cas.LongArray"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.iaa.AgreementContainer",
                "name": "categorySpecificAgreementValues",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Time": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.structure.type.Field": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.structure.type.Field",
                "name": "name",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.hucompute.textimager.uima.type.wikidata.WikiDataHyponym": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.wikidata.WikiDataHyponym",
                "name": "id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.wikidata.WikiDataHyponym",
                "name": "typ",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.wikidata.WikiDataHyponym",
                "name": "depth",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemPred": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemPred",
                "name": "arguments",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArgLink[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemPred",
                "name": "category",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.NamedEntity": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Orientation": {
        "parent": "org.texttechnologylab.annotation.type.AnnotationNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Product": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Society": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.SQ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Location_Place": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.time.Date": {
        "parent": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "function_in_document",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "temporal_function",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "anchor_time_id",
                "range": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Other": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgTextSegment": {
        "parent": "org.texttechnologylab.annotation.type.ArgNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "color",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Entity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "spatial_entitiy_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dimensionality",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "form",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dcl",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "domain",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "lat",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "long",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "elevation",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "countable",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "gquant",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "cardinality",
                "range": "uima.cas.Double"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.AT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.V": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Fungi": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.Motion": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Event",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_class",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "polarity",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "mood",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "pos",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "tense",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "aspect",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "vform",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "domain",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "lat",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "long",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "elevation",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "countable",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "gquant",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "scopes",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "scopes_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_frame",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Motion",
                "name": "motion_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Motion",
                "name": "motion_class",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Motion",
                "name": "motion_sense",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Motion",
                "name": "manner",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Motion",
                "name": "motion_goal",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.NPV": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.POS_HASH": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_X",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.OrgDesc": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Edge": {
        "parent": "org.texttechnologylab.annotation.type.GraphBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.EM": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.Measure": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Signal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Measure",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Measure",
                "name": "unit",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.POBJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
                "name": "divType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
                "name": "id",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PURPCL": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Law": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Room.TimeChain": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.TimeChain",
                "name": "next",
                "range": "org.texttechnologylab.annotation.Room.TimeChain"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.TimeChain",
                "name": "prev",
                "range": "org.texttechnologylab.annotation.Room.TimeChain"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.ADVP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.ArticleInfo": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.ArticleInfo",
                "name": "Authors",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.ArticleInfo",
                "name": "Revisions",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.ArticleInfo",
                "name": "FirstAppearance",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.ArticleInfo",
                "name": "LastAppearance",
                "range": "uima.cas.Long"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticField": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticField",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.TABLE": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.FRAG": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Norp": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.CompoundPart": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split",
                "name": "splits",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArgLink": {
        "parent": "uima.cas.TOP",
        "features": [
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArgLink",
                "name": "role",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArgLink",
                "name": "target",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArg"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.MARK": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.transform.type.SofaChangeAnnotation": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.transform.type.SofaChangeAnnotation",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.transform.type.SofaChangeAnnotation",
                "name": "operation",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.transform.type.SofaChangeAnnotation",
                "name": "reason",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Habitat": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.Timex3Interval": {
        "parent": "de.unihd.dbs.uima.types.heideltime.Timex3",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "filename",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "sentId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "firstTokId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "allTokIds",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexInstance",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "foundByRule",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexQuant",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexFreq",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexMod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "emptyValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3Interval",
                "name": "TimexValueEB",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3Interval",
                "name": "TimexValueLE",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3Interval",
                "name": "TimexValueEE",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3Interval",
                "name": "TimexValueLB",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3Interval",
                "name": "beginTimex",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3Interval",
                "name": "endTimex",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.SEMICOLON": {
        "parent": "org.apache.uima.ruta.type.PM",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.PropTextNode": {
        "parent": "org.texttechnologylab.annotation.type.PropNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "lemma",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "pos",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "x2",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "y2",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "color",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Group_Collection": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Coreference": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Coreference",
                "name": "link",
                "range": "org.texttechnologylab.annotation.Coreference"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Cardinal": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NPADVMOD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Room.Object": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "fatherObject",
                "range": "org.texttechnologylab.annotation.Room.Object"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "nextTimeObject",
                "range": "org.texttechnologylab.annotation.Room.Object"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "prevTimeObject",
                "range": "org.texttechnologylab.annotation.Room.Object"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "timeReference",
                "range": "org.texttechnologylab.annotation.Room.TimeChain"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "shapeNetID",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "scale",
                "range": "uima.cas.Double"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "location",
                "range": "org.texttechnologylab.annotation.Vector"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.Vector"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.Object",
                "name": "objectFeature",
                "range": "org.texttechnologylab.annotation.Room.ObjectAttribute[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Body_Corpus": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Quantity_Amount": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArg": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Date": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.H6": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.ADJC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.H5": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.H4": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.H3": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Node": {
        "parent": "org.texttechnologylab.annotation.type.GraphBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugRuleElementMatches": {
        "parent": "uima.cas.TOP",
        "features": [
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleElementMatches",
                "name": "matches",
                "range": "org.apache.uima.ruta.type.DebugRuleElementMatch[]"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleElementMatches",
                "name": "element",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleElementMatches",
                "name": "ruleAnchor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleElementMatches",
                "name": "inlinedActionBlocks",
                "range": "org.apache.uima.ruta.type.DebugInlinedBlock[]"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.FalsePositive": {
        "parent": "org.apache.uima.ruta.type.EvalAnnotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.EvalAnnotation",
                "name": "original",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.BIG": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_CONJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Feeling_Emotion": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NUMBER": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.H2": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.H1": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.VC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.MARKUP": {
        "parent": "org.apache.uima.ruta.type.ALL",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.attribution.type.Smaler": {
        "parent": "org.texttechnologylab.annotation.Attribution",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.context.type.LocationContext": {
        "parent": "org.texttechnologylab.annotation.node.type.Context",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "ReferencedID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "wikiDataID",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "image",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.context.type.LocationContext",
                "name": "markerPoint",
                "range": "uima.cas.FloatArray"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.LocationContext",
                "name": "geoJson",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.context.type.LocationContext",
                "name": "latLngs",
                "range": "uima.cas.FloatArray"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.LocationContext",
                "name": "contextInf",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.LocationContext",
                "name": "country",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.LocationContext",
                "name": "numberOfCitizen",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.LocationContext",
                "name": "geoNamesID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.LocationContext",
                "name": "areaSize",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ABBREV": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.VP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TextTechnologyKnowledgeEdge": {
        "parent": "org.texttechnologylab.annotation.type.Edge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TextTechnologyKnowledgeEdge",
                "name": "linktype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.TLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TLink",
                "name": "syntax",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TLink",
                "name": "origin",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Vector": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Vector",
                "name": "x",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Vector",
                "name": "y",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Vector",
                "name": "z",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Vector",
                "name": "w",
                "range": "uima.cas.Double"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Morphology": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgTypeAnd": {
        "parent": "org.texttechnologylab.annotation.type.ArgType",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "color",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "conclusion",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "mode",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "data",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgTypeAnd",
                "name": "data2",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_SCONJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Viruses": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Relation": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.sentence.Discourse": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.sentence.Discourse",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Person_HumanBeing": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.SBAR": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.dkpro.core.api.xml.type.XmlTextNode": {
        "parent": "org.dkpro.core.api.xml.type.XmlNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.dkpro.core.api.xml.type.XmlNode",
                "name": "parent",
                "range": "org.dkpro.core.api.xml.type.XmlElement"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlTextNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlTextNode",
                "name": "captured",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.ocr.OCRToken": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "lemma",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "stem",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Stem"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "pos",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "morph",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "form",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.TokenForm"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "order",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.ocr.OCRToken",
                "name": "subTokenList",
                "range": "uima.cas.StringList"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRToken",
                "name": "isWordFromDictionary",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRToken",
                "name": "isWordNormal",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRToken",
                "name": "isWordNumeric",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRToken",
                "name": "containsHyphen",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRToken",
                "name": "suspiciousChars",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.GpeDesc": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.Location": {
        "parent": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "spatial_entitiy_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dimensionality",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "form",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dcl",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "domain",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "lat",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "long",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "elevation",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "countable",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "gquant",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "cardinality",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Location",
                "name": "gazref",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.FacDesc": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.Event": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "filename",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "sentId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "tokId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "eventId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "eventInstanceId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "aspect",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "modality",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "polarity",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "tense",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "token",
                "range": "de.unihd.dbs.uima.types.heideltime.Token"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Attribution": {
        "parent": "org.texttechnologylab.annotation.type.AnnotationNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.OLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.OLink",
                "name": "projective",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.OLink",
                "name": "frame_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.OLink",
                "name": "reference_pt",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.OLink",
                "name": "reference_pt_str",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.COMPLM": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CONJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.sentence.Endmarker": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.sentence.Endmarker",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.HTML": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Stem": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Stem",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.MLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.MLink",
                "name": "event_id",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Event"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.MLink",
                "name": "related_to_time",
                "range": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.Dct": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Dct",
                "name": "filename",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Dct",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Dct",
                "name": "timexId",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.SINV": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_PRON": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.PropNode": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "lemma",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "pos",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "x2",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "y2",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "color",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TimeNode": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "xPos",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "depth",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "subvalue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "nodes",
                "range": "uima.cas.FSArray"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "edges",
                "range": "uima.cas.FSArray"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "x",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "y",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeNode",
                "name": "additionalvalue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugBlockApply": {
        "parent": "org.apache.uima.ruta.type.DebugRuleApply",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.ProfiledAnnotation",
                "name": "time",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugScriptApply",
                "name": "element",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugScriptApply",
                "name": "timestamp",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "applied",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "tried",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "rules",
                "range": "org.apache.uima.ruta.type.DebugRuleMatch[]"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "id",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "script",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugBlockApply",
                "name": "innerApply",
                "range": "org.apache.uima.ruta.type.DebugScriptApply[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.Above": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.AMOD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.QuickTreeMultiSpanNode": {
        "parent": "org.texttechnologylab.annotation.type.QuickTreeNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TreeNode",
                "name": "children",
                "range": "org.texttechnologylab.annotation.type.Node[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TreeNode",
                "name": "parent",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TreeAnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TreeAnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Archaea": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.SCRIPT": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.typo.OCR": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.NaturalObject": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.NaturalPhenomenon": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.attribution.type.Louder": {
        "parent": "org.texttechnologylab.annotation.Attribution",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.QUANTMOD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.score.TextScore": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.score.TextScore",
                "name": "elements",
                "range": "org.texttechnologylab.annotation.score.TextScoreEntry[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.score.TextScore",
                "name": "documentURI",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.score.TextScore",
                "name": "documentName",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.AUXPASS": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.node.type.EntityVis": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.EntityVis",
                "name": "geonamesID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.EntityVis",
                "name": "geoJson",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.EntityVis",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.EntityVis",
                "name": "ofClass",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.EntityVis",
                "name": "image",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.EntityVis",
                "name": "wikiDataID",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.LST": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Animal_Fauna": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.ContactInfo": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.Statistics": {
        "parent": "uima.cas.TOP",
        "features": [
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.Statistics",
                "name": "name",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.Statistics",
                "name": "total",
                "range": "uima.cas.DoubleArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.Statistics",
                "name": "amount",
                "range": "uima.cas.IntegerArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.Statistics",
                "name": "part",
                "range": "uima.cas.DoubleArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.Between": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugScriptApply": {
        "parent": "org.apache.uima.ruta.type.ProfiledAnnotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.ProfiledAnnotation",
                "name": "time",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugScriptApply",
                "name": "element",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugScriptApply",
                "name": "timestamp",
                "range": "uima.cas.Long"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.SourceDocInfo": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.SourceDocInfo",
                "name": "uri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.SourceDocInfo",
                "name": "offsetInSource",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.NaturalObject": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.AGENT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "layer",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "tags",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagDescription[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "componentName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "modelLocation",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "modelVariant",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "modelLanguage",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "modelVersion",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagsetDescription",
                "name": "input",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.hucompute.wikidragon.core.nlp.annotation.WikiTextSpan": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.wikidragon.core.nlp.annotation.WikiTextSpan",
                "name": "uid",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Event": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.AnnotationComment": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.AnnotationComment",
                "name": "reference",
                "range": "uima.cas.TOP"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AnnotationComment",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AnnotationComment",
                "name": "key",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.WorkOfArt": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "lemma",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "stem",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Stem"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "pos",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "morph",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "form",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.TokenForm"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token",
                "name": "order",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.hucompute.wikidragon.core.nlp.annotation.HtmlTag": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.wikidragon.core.nlp.annotation.HtmlTag",
                "name": "tag",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.wikidragon.core.nlp.annotation.HtmlTag",
                "name": "attr",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.wikidragon.core.nlp.annotation.HtmlTag",
                "name": "depth",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.wikidragon.core.nlp.annotation.HtmlTag",
                "name": "order",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.WHADVP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.CAP": {
        "parent": "org.apache.uima.ruta.type.W",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Artifact": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TimeEdge": {
        "parent": "org.texttechnologylab.annotation.type.Edge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeEdge",
                "name": "mode",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PREDET": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.Sentence": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Sentence",
                "name": "filename",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Sentence",
                "name": "sentenceId",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.I": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Group_Collection": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Weight": {
        "parent": "org.texttechnologylab.annotation.type.Attribute",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Weight",
                "name": "value",
                "range": "uima.cas.Double"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.A": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.B": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.SpellingAnomaly": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "description",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "suggestions",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.SuggestedAction[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "category",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.Place": {
        "parent": "org.texttechnologylab.annotation.semaf.isospace.Location",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "spatial_entitiy_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dimensionality",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "form",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dcl",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "domain",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "lat",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "long",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "elevation",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "countable",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "gquant",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "cardinality",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Location",
                "name": "gazref",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Place",
                "name": "country",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Place",
                "name": "state",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Place",
                "name": "ctv",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Place",
                "name": "continent",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Place",
                "name": "county",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.PropEdge": {
        "parent": "org.texttechnologylab.annotation.type.Edge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropEdge",
                "name": "mode",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropEdge",
                "name": "graphSource",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropEdge",
                "name": "graphTarget",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ACOMP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.LI": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.SPAN": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgTypeOr": {
        "parent": "org.texttechnologylab.annotation.type.ArgType",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "color",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "conclusion",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "mode",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "data",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgTypeOr",
                "name": "data2",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.U": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.MRelation": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Signal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MRelation",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.Path": {
        "parent": "org.texttechnologylab.annotation.semaf.isospace.Location",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "spatial_entitiy_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dimensionality",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "form",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dcl",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "domain",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "lat",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "long",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "elevation",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "countable",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "gquant",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "cardinality",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Location",
                "name": "gazref",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Path",
                "name": "beginID",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Path",
                "name": "endID",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Path",
                "name": "midIDs",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Path",
                "name": "midID_array",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity[]"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugMatchedRuleMatch": {
        "parent": "org.apache.uima.ruta.type.DebugRuleMatch",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.ProfiledAnnotation",
                "name": "time",
                "range": "uima.cas.Long"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "elements",
                "range": "org.apache.uima.ruta.type.DebugRuleElementMatches[]"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "matched",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "delegates",
                "range": "org.apache.uima.ruta.type.DebugScriptApply[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.UCP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.BREAK": {
        "parent": "org.apache.uima.ruta.type.WS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.INTJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.Line": {
        "parent": "org.apache.uima.ruta.type.AnyLine",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.P": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.Token": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Token",
                "name": "filename",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Token",
                "name": "tokenId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Token",
                "name": "sentId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Token",
                "name": "pos",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Plant": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.OrientationEdge": {
        "parent": "org.texttechnologylab.annotation.type.Edge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.LexicalPhrase": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.LexicalPhrase",
                "name": "text",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.hucompute.textimager.uima.type.Language": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.Language",
                "name": "language",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.administration.Recommendation": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.administration.Recommendation",
                "name": "reference",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Color": {
        "parent": "org.texttechnologylab.annotation.type.Attribute",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Color",
                "name": "value",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Room.RoomWall": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.RoomWall",
                "name": "vectorlist",
                "range": "org.texttechnologylab.annotation.Vector[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Room.RoomWall",
                "name": "height",
                "range": "uima.cas.Double"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.Room.RoomWall",
                "name": "feature",
                "range": "org.texttechnologylab.annotation.Room.ObjectAttribute[]"
            }
        ],
        "primitive": false
    },
    "org.dkpro.core.api.xml.type.XmlAttribute": {
        "parent": "uima.cas.TOP",
        "features": [
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlAttribute",
                "name": "uri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlAttribute",
                "name": "localName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlAttribute",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlAttribute",
                "name": "qName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlAttribute",
                "name": "valueType",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Organization": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Feeling_Emotion": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Endpoint": {
        "parent": "org.texttechnologylab.annotation.type.GraphBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Endpoint",
                "name": "node",
                "range": "org.texttechnologylab.annotation.type.Node"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.NonMotionEvent": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Event",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_class",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "polarity",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "mood",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "pos",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "tense",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "aspect",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "vform",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "domain",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "lat",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "long",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "elevation",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "countable",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "gquant",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "scopes",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "scopes_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_frame",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_type",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.WordSense": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.WordSense",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PARTMOD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.NUM": {
        "parent": "org.apache.uima.ruta.type.ANY",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.RutaColoring": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.RutaColoring",
                "name": "bgColor",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.RutaColoring",
                "name": "targetType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.RutaColoring",
                "name": "fgColor",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.RutaColoring",
                "name": "selected",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagDescription": {
        "parent": "uima.cas.TOP",
        "features": [
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.TagDescription",
                "name": "name",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.INT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Substance": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PRT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.META": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.score.TextScoreEntry": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.score.TextScoreEntry",
                "name": "value",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.score.TextScoreEntry",
                "name": "key",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.score.TextScoreEntry",
                "name": "label",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.PropRootNode": {
        "parent": "org.texttechnologylab.annotation.type.PropNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "lemma",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "pos",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "x2",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "y2",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "color",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.PropRootNode",
                "name": "arguments",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.ART": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CSUBJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.token.Correction": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.token.Correction",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.SuggestedAction": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.SuggestedAction",
                "name": "replacement",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.SuggestedAction",
                "name": "certainty",
                "range": "uima.cas.Float"
            }
        ],
        "primitive": false
    },
    "org.dkpro.core.api.xml.type.XmlNode": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.dkpro.core.api.xml.type.XmlNode",
                "name": "parent",
                "range": "org.dkpro.core.api.xml.type.XmlElement"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NN": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.RutaFrame": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.PRT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.context.type.PersonContext": {
        "parent": "org.texttechnologylab.annotation.node.type.Context",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "ReferencedID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "wikiDataID",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "image",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.PersonContext",
                "name": "birthDate",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.PersonContext",
                "name": "Name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.PersonContext",
                "name": "contextInf",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.PersonContext",
                "name": "gender",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.PersonContext",
                "name": "birthPlace",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.PersonContext",
                "name": "fieldOfWork",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.OL": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.GeoNamesEntity": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.GeoNamesEntity",
                "name": "id",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.GeoNamesEntity",
                "name": "mainclass",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.GeoNamesEntity",
                "name": "subclass",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.COLON": {
        "parent": "org.apache.uima.ruta.type.PM",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugEvaluatedCondition": {
        "parent": "uima.cas.TOP",
        "features": [
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugEvaluatedCondition",
                "name": "element",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugEvaluatedCondition",
                "name": "value",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugEvaluatedCondition",
                "name": "conditions",
                "range": "org.apache.uima.ruta.type.DebugEvaluatedCondition[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Morphology": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Fac": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.PropGraphNode": {
        "parent": "org.texttechnologylab.annotation.type.PropNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "lemma",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "pos",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "x2",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "y2",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.PropNode",
                "name": "color",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugCreatedBy": {
        "parent": "uima.cas.TOP",
        "features": [
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugCreatedBy",
                "name": "rule",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugCreatedBy",
                "name": "annotation",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugCreatedBy",
                "name": "script",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugCreatedBy",
                "name": "id",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.PR": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.dkpro.core.api.xml.type.XmlElement": {
        "parent": "org.dkpro.core.api.xml.type.XmlNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.dkpro.core.api.xml.type.XmlNode",
                "name": "parent",
                "range": "org.dkpro.core.api.xml.type.XmlElement"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlElement",
                "name": "uri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlElement",
                "name": "localName",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.dkpro.core.api.xml.type.XmlElement",
                "name": "attributes",
                "range": "org.dkpro.core.api.xml.type.XmlAttribute[]"
            },
            {
                "primitive": false,
                "domain": "org.dkpro.core.api.xml.type.XmlElement",
                "name": "children",
                "range": "org.dkpro.core.api.xml.type.XmlNode[]"
            },
            {
                "primitive": true,
                "domain": "org.dkpro.core.api.xml.type.XmlElement",
                "name": "qName",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.PP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_AUX": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.TruePositive": {
        "parent": "org.apache.uima.ruta.type.EvalAnnotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.EvalAnnotation",
                "name": "original",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.Paragraph": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Plant_Flora": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.ROOT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.AnyLine": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.PM": {
        "parent": "org.apache.uima.ruta.type.ANY",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.HEAD": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.After": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgType": {
        "parent": "org.texttechnologylab.annotation.type.ArgNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "color",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "conclusion",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "mode",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "data",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Time": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.POS_URL": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_X",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Relation": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.twitter.Tweet": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "userName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "language",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "retweet",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "twitterID",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "geo",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "hashTags",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "urls",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.twitter.Tweet",
                "name": "userId",
                "range": "uima.cas.Long"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.PUNC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.ocr.OCRParagraph": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRParagraph",
                "name": "leftIndent",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRParagraph",
                "name": "rightIndent",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRParagraph",
                "name": "startIndent",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRParagraph",
                "name": "lineSpacing",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRParagraph",
                "name": "align",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_SYM": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.RRC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.Around": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.NP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Protozoa": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Person_HumanBeing": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.hucompute.textimager.uima.type.Similarity": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.Similarity",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.DOBJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.NX": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Society": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3",
                "name": "x",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3",
                "name": "y",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3",
                "name": "z",
                "range": "uima.cas.Double"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4": {
        "parent": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3",
                "name": "x",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3",
                "name": "y",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3",
                "name": "z",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4",
                "name": "w",
                "range": "uima.cas.Double"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.AUX0": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Person": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.TMOD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.DBConfig": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.DBConfig",
                "name": "Host",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.DBConfig",
                "name": "DB",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.DBConfig",
                "name": "User",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.DBConfig",
                "name": "Password",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.DBConfig",
                "name": "Language",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Shape": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PRED": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Taxon": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.Behind": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Percent": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.SurfaceForm": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.SurfaceForm",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PUNCT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ATTR": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.AnnotationNode": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.hucompute.textimager.uima.type.wikipedia.WikipediaLink": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaLink",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaLink",
                "name": "LinkType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaLink",
                "name": "Target",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaLink",
                "name": "Anchor",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.wikipedia.WikipediaLink",
                "name": "WikiData",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.hucompute.textimager.uima.type.wikipedia.WikipediaLink",
                "name": "WikiDataHyponyms",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.wikipedia.WikipediaLink",
                "name": "isInstance",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.EXPL": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_INTJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.INPUT": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.MLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MLink",
                "name": "val",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MLink",
                "name": "end_point1",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MLink",
                "name": "end_point2",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MLink",
                "name": "bounds",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MLink",
                "name": "bounds_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.PP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.CONCJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.WSLine": {
        "parent": "org.apache.uima.ruta.type.EmptyLine",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.context.type.OrganisationContext": {
        "parent": "org.texttechnologylab.annotation.node.type.Context",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "ReferencedID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "wikiDataID",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "image",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.OrganisationContext",
                "name": "foundingDate",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.OrganisationContext",
                "name": "contextInf",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.OrganisationContext",
                "name": "website",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.OrganisationContext",
                "name": "headquarter",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.OrganisationContext",
                "name": "chiefExecutiveOfficer",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.context.type.OrganisationContext",
                "name": "setLabel",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Possession_Property": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgTypeUnless": {
        "parent": "org.texttechnologylab.annotation.type.ArgType",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "color",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "conclusion",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "mode",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "data",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgTypeUnless",
                "name": "counterRebuttal",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgTypeUnless",
                "name": "rebuttal",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NUM": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.SW": {
        "parent": "org.apache.uima.ruta.type.W",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Artifact": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.attribution.type.Bigger": {
        "parent": "org.texttechnologylab.annotation.Attribution",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TreeNode": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TreeNode",
                "name": "children",
                "range": "org.texttechnologylab.annotation.type.Node[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TreeNode",
                "name": "parent",
                "range": "org.texttechnologylab.annotation.type.Node"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.Tag": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.Tag",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.PennTree": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.PennTree",
                "name": "PennTree",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.PennTree",
                "name": "TransformationNames",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.RelationDescription": {
        "parent": "org.texttechnologylab.annotation.type.Attribute",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.RelationDescription",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.RelationDescription",
                "name": "relationtype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isobase.Event": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Entity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_class",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "polarity",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "mood",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "pos",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "tense",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "aspect",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "vform",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "domain",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "lat",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "long",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "elevation",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "countable",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "gquant",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "scopes",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "scopes_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_frame",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Event",
                "name": "event_type",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.QP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.FalseNegative": {
        "parent": "org.apache.uima.ruta.type.EvalAnnotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.EvalAnnotation",
                "name": "original",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Entity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "function_in_document",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "temporal_function",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "anchor_time_id",
                "range": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.SBARQ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.TD": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Cognition_Ideation": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Substance": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.PRT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PREP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.LST": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.ocr.OCRPage": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRPage",
                "name": "width",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRPage",
                "name": "height",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRPage",
                "name": "resolution",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRPage",
                "name": "pageId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRPage",
                "name": "pageNumber",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRPage",
                "name": "uri",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.PRP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.TR": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.hucompute.textimager.uima.type.Summary": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.Summary",
                "name": "summary",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.iaa.Agreement": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.iaa.Agreement",
                "name": "agreementValue",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.iaa.Agreement",
                "name": "agreementMeasure",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.NBSP": {
        "parent": "org.apache.uima.ruta.type.SPACE",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.EmptyLine": {
        "parent": "org.apache.uima.ruta.type.AnyLine",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.DIV": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.Timex3": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "filename",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "sentId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "firstTokId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "allTokIds",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexInstance",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "foundByRule",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexQuant",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexFreq",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "timexMod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Timex3",
                "name": "emptyValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.TH": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.EMO": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Habitat": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Location": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.ocr.OCRFormat": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "lang",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "ff",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "fs",
                "range": "uima.cas.Float"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "bold",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "italic",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "subscript",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "superscript",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "smallcaps",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "underline",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRFormat",
                "name": "strikeout",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.RutaOptional": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.ALink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.ALink",
                "name": "syntax",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.PERIOD": {
        "parent": "org.apache.uima.ruta.type.SENTENCEEND",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.CorpusAnnotation": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.CorpusAnnotation",
                "name": "license",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.CorpusAnnotation",
                "name": "corpusUrl",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.CorpusAnnotation",
                "name": "corpusName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.CorpusAnnotation",
                "name": "author",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.CorpusAnnotation",
                "name": "comment",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.POS_EMO": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_X",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.POSS": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Event_Happening": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.UL": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.administration.AnnotationStatus": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.administration.AnnotationStatus",
                "name": "status",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.administration.AnnotationStatus",
                "name": "tool",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CCOMP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.Right": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.QuickAnnoUnit": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.QuickAnnoUnit",
                "name": "combined",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.QuickAnnoUnit",
                "name": "pos",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.QuickAnnoUnit",
                "name": "origin",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_NUM": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TextElement": {
        "parent": "org.texttechnologylab.annotation.type.Attribute",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TextElement",
                "name": "value",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.Left": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.EXCLAMATION": {
        "parent": "org.apache.uima.ruta.type.SENTENCEEND",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.SubcatMatch": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.SubcatMatch",
                "name": "status",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.SubcatMatch",
                "name": "context",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.SubcatMatch",
                "name": "elements",
                "range": "org.texttechnologylab.annotation.SemanticSource[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgTypeDirect": {
        "parent": "org.texttechnologylab.annotation.type.ArgType",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "color",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "conclusion",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "mode",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.ArgType",
                "name": "data",
                "range": "org.texttechnologylab.annotation.type.ArgTextSegment[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_X": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Color": {
        "parent": "org.texttechnologylab.annotation.type.AnnotationNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Color",
                "name": "rgb",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.RutaAnnotation": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.RutaAnnotation",
                "name": "score",
                "range": "uima.cas.Double"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.RutaAnnotation",
                "name": "annotation",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.In": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.AnnotationBracket": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Chromista": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.node.type.DepthList": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.DepthList",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.node.type.DepthList",
                "name": "hierarchie",
                "range": "uima.cas.IntegerArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.context.type.EventContext": {
        "parent": "org.texttechnologylab.annotation.node.type.Context",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "ReferencedID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "wikiDataID",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "image",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.typo.Orthography": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isobase.Signal": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Entity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ROOT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.LinkingMorpheme": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split",
                "name": "splits",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split[]"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugFailedRuleMatch": {
        "parent": "org.apache.uima.ruta.type.DebugRuleMatch",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.ProfiledAnnotation",
                "name": "time",
                "range": "uima.cas.Long"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "elements",
                "range": "org.apache.uima.ruta.type.DebugRuleElementMatches[]"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "matched",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "delegates",
                "range": "org.apache.uima.ruta.type.DebugScriptApply[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.WHADJP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.WS": {
        "parent": "org.apache.uima.ruta.type.ANY",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.MWE": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.S": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.DEP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.PARN": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_VERB": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.POSSESSIVE": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.DET": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Attribute_Property": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.hucompute.textimager.uima.type.semantics.WordSense": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.WordSense",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.WordSense",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.semantics.WordSense",
                "name": "confidence",
                "range": "uima.cas.Double"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.CONJP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.dkpro.core.api.xml.type.XmlDocument": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.dkpro.core.api.xml.type.XmlDocument",
                "name": "root",
                "range": "org.dkpro.core.api.xml.type.XmlElement"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.X": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PARATAXIS": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.Morpheme": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.Morpheme",
                "name": "morphTag",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.NaturalPhenomenon": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.node.type.IndividualVis": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "geonamesID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "markerPoint",
                "range": "uima.cas.FloatArray"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "areaSize",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "geoJson",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "image",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "URI",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "ofClass",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.IndividualVis",
                "name": "wikiDataID",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.FORM": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.BioContext": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.QUESTION": {
        "parent": "org.apache.uima.ruta.type.SENTENCEEND",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CONJP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Room.ObjectAttribute": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Room.ObjectAttribute",
                "name": "key",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.Room.ObjectAttribute",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.POS_AT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_X",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.PerDesc": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.GraphBase": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Comment": {
        "parent": "org.texttechnologylab.annotation.type.AnnotationNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Comment",
                "name": "reference",
                "range": "uima.cas.AnnotationBase"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgEdgeLeft": {
        "parent": "org.texttechnologylab.annotation.type.ArgEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Disease": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaRevision": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaRevision",
                "name": "revisionId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaRevision",
                "name": "pageId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaRevision",
                "name": "contributorName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaRevision",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaRevision",
                "name": "contributorId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaRevision",
                "name": "timestamp",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaRevision",
                "name": "minor",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Food": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Animal_Fauna": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Event_Happening": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Shape": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.meta.MetaLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.QsLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TexttechnologyNamedEntity": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TexttechnologyNamedEntity",
                "name": "subvalue",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TexttechnologyNamedEntity",
                "name": "belongsTo",
                "range": "org.texttechnologylab.annotation.type.TexttechnologyNamedEntity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TexttechnologyNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TexttechnologyNamedEntity",
                "name": "knowledgeEntries",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TexttechnologyNamedEntity",
                "name": "wikipediaID",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TexttechnologyNamedEntity",
                "name": "wikidataID",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "uima.tcas.DocumentAnnotation": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.DocumentAnnotation",
                "name": "language",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.coref.type.CoreferenceLink": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.coref.type.CoreferenceLink",
                "name": "next",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.coref.type.CoreferenceLink"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.coref.type.CoreferenceLink",
                "name": "referenceType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.coref.type.CoreferenceLink",
                "name": "referenceRelation",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.XCOMP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Food": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.CONJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.IMG": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.NotAt": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "gender",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "number",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "case",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "degree",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "verbForm",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "tense",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "mood",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "voice",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "definiteness",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "person",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "aspect",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "animacy",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "negative",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "numType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "possessive",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "pronType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "reflex",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures",
                "name": "transitivity",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.NP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.NN": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.POS_DM": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_X",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.URL": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Motive": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.State_Condition": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgNode": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "graphId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "nodeId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "text",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "x",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "y",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.ArgNode",
                "name": "color",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.EvalAnnotation": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.EvalAnnotation",
                "name": "original",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Nationality": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.BODY": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isobase.Entity": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.WHPP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_DET": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.ProductDesc": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.ocr.OCRDocument": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRDocument",
                "name": "documentname",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.ADJP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.COMMA": {
        "parent": "org.apache.uima.ruta.type.PM",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugRuleApply": {
        "parent": "org.apache.uima.ruta.type.DebugScriptApply",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.ProfiledAnnotation",
                "name": "time",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugScriptApply",
                "name": "element",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugScriptApply",
                "name": "timestamp",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "applied",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "tried",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "rules",
                "range": "org.apache.uima.ruta.type.DebugRuleMatch[]"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "id",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleApply",
                "name": "script",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isobase.Link": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.On": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.EventPath": {
        "parent": "org.texttechnologylab.annotation.semaf.isospace.Location",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "spatial_entitiy_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dimensionality",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "form",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "dcl",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "domain",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "lat",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "long",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "elevation",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Measure"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "countable",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "gquant",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "scopes_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity",
                "name": "cardinality",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.Location",
                "name": "gazref",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.EventPath",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Motion"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.EventPath",
                "name": "startID",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.EventPath",
                "name": "midIDs",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.EventPath",
                "name": "midID_array",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.EventPath",
                "name": "endID",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialEntity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.EventPath",
                "name": "spatial_relator",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.EventPath",
                "name": "spatial_relator_array",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialSignal[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.MoveLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MoveLink",
                "name": "source",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MoveLink",
                "name": "goal",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MoveLink",
                "name": "mid_point",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MoveLink",
                "name": "mid_point_array",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MoveLink",
                "name": "path_id",
                "range": "org.texttechnologylab.annotation.semaf.isospace.Path"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MoveLink",
                "name": "adjunct_id",
                "range": "org.texttechnologylab.annotation.semaf.isospace.SpatialSignal"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MoveLink",
                "name": "motionsignal_id",
                "range": "org.texttechnologylab.annotation.semaf.isospace.MotionSignal"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MoveLink",
                "name": "goal_reached",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.GrammarAnomaly": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "description",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "suggestions",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.SuggestedAction[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "category",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.node.type.RelationGroup": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.node.type.RelationGroup",
                "name": "relation",
                "range": "org.texttechnologylab.annotation.node.type.RelationContext"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.RelationGroup",
                "name": "locationID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.RelationGroup",
                "name": "sentence",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.hucompute.textimager.uima.type.category.CategoryCoveredTagged": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.category.CategoryCoveredTagged",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.category.CategoryCoveredTagged",
                "name": "score",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.category.CategoryCoveredTagged",
                "name": "tags",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.hucompute.textimager.uima.type.category.CategoryCoveredTagged",
                "name": "ref",
                "range": "uima.tcas.Annotation"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Plant_Flora": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugInlinedBlock": {
        "parent": "uima.cas.TOP",
        "features": [
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugInlinedBlock",
                "name": "element",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugInlinedBlock",
                "name": "asCondition",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugInlinedBlock",
                "name": "matched",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugInlinedBlock",
                "name": "inlinedRules",
                "range": "org.apache.uima.ruta.type.DebugScriptApply[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.HASH": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.TITLE": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Gpe": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Compound": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Compound",
                "name": "splits",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticPredicate": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticPredicate",
                "name": "category",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticPredicate",
                "name": "arguments",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticArgument[]"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.REF": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.coref.type.CoreferenceChain": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.coref.type.CoreferenceChain",
                "name": "first",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.coref.type.CoreferenceLink"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Lemma",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.iaa.AgreementValue": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.iaa.AgreementValue",
                "name": "agreementValue",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.iaa.AgreementValue",
                "name": "agreementLabel",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.iaa.AgreementValue",
                "name": "agreementUnits",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.temporal.type.Before": {
        "parent": "org.texttechnologylab.annotation.Temporal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.time.Set": {
        "parent": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "function_in_document",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "temporal_function",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "anchor_time_id",
                "range": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.time.Set",
                "name": "quant",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.time.Set",
                "name": "freq",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.TokenForm": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.TokenForm",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Bacteria": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgEdge": {
        "parent": "org.texttechnologylab.annotation.type.Edge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.administration.FinishAnnotation": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.DocumentAnnotation",
                "name": "language",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "documentTitle",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "documentId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "documentUri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "collectionId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "documentBaseUri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "isLastSegment",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.administration.FinishAnnotation",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.administration.FinishAnnotation",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.administration.FinishAnnotation",
                "name": "tool",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Quantity": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.ANY": {
        "parent": "org.apache.uima.ruta.type.ALL",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.POS_INT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_X",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.QuickTreeNode": {
        "parent": "org.texttechnologylab.annotation.type.TreeAnnotationNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TreeNode",
                "name": "children",
                "range": "org.texttechnologylab.annotation.type.Node[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TreeNode",
                "name": "parent",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TreeAnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TreeAnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.CARD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.WHNP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.time.Duration": {
        "parent": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "function_in_document",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "temporal_function",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "anchor_time_id",
                "range": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.time.Duration",
                "name": "beginPoint",
                "range": "org.texttechnologylab.annotation.semaf.isotimeml.time.Date"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.time.Duration",
                "name": "endPoint",
                "range": "org.texttechnologylab.annotation.semaf.isotimeml.time.Date"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.TAG": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.SMALL": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.NGram": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.NGram",
                "name": "text",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.GoldEvent": {
        "parent": "de.unihd.dbs.uima.types.heideltime.Event",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "filename",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "sentId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "tokId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "eventId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "eventInstanceId",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "aspect",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "modality",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "polarity",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "tense",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.unihd.dbs.uima.types.heideltime.Event",
                "name": "token",
                "range": "de.unihd.dbs.uima.types.heideltime.Token"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.INFMOD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Archaea": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_PROPN": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.ocr.OCRBlock": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRBlock",
                "name": "top",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRBlock",
                "name": "bottom",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRBlock",
                "name": "left",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRBlock",
                "name": "right",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRBlock",
                "name": "blockType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRBlock",
                "name": "blockName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRBlock",
                "name": "valid",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Lichen": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.ALL": {
        "parent": "org.apache.uima.ruta.type.TokenSeed",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Act_Action_Activity": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PCOMP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.attribution.type.Quieter": {
        "parent": "org.texttechnologylab.annotation.Attribution",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Unknown": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Unknown",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Ordinal": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Viruses": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Quantity_Amount": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaLink": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaLink",
                "name": "LinkType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaLink",
                "name": "Target",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.io.jwpl.type.WikipediaLink",
                "name": "Anchor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.TimeSignal": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Signal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.State_Condition": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.SENTENCEEND": {
        "parent": "org.apache.uima.ruta.type.PM",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.DocumentModification": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentModification",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentModification",
                "name": "timestamp",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentModification",
                "name": "comment",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TextTechnologyEntity": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TextTechnologyEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TextTechnologyEntity",
                "name": "subvalue",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TextTechnologyEntity",
                "name": "knowledgeEntries",
                "range": "org.texttechnologylab.annotation.type.KnowledgeEntry[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TextTechnologyEntity",
                "name": "begin",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TextTechnologyEntity",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TextTechnologyEntity",
                "name": "pos",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.REL": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.AMP": {
        "parent": "org.apache.uima.ruta.type.ANY",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.temporal.type.During": {
        "parent": "org.texttechnologylab.annotation.Temporal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.Below": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Attribute": {
        "parent": "org.texttechnologylab.annotation.type.GraphBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.hucompute.textimager.uima.type.Sentiment": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.Sentiment",
                "name": "sentiment",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.hucompute.textimager.uima.type.Sentiment",
                "name": "subjectivity",
                "range": "uima.cas.Double"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.sentence.Anomaly": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "description",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "suggestions",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.SuggestedAction[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "category",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.sentence.Anomaly",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TreeAnnotationNode": {
        "parent": "org.texttechnologylab.annotation.type.TreeNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TreeNode",
                "name": "children",
                "range": "org.texttechnologylab.annotation.type.Node[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TreeNode",
                "name": "parent",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TreeAnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TreeAnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.knowledge.KnowledgeEntry": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.knowledge.KnowledgeEntry",
                "name": "uri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.knowledge.KnowledgeEntry",
                "name": "source",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.orientation.type.At": {
        "parent": "org.texttechnologylab.annotation.OrientationEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.temporal.type.After": {
        "parent": "org.texttechnologylab.annotation.Temporal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Vehicle": {
        "parent": "org.texttechnologylab.annotation.type.concept.Artifact",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Body_Corpus": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PREPC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugRuleElementMatch": {
        "parent": "org.apache.uima.ruta.type.ProfiledAnnotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.ProfiledAnnotation",
                "name": "time",
                "range": "uima.cas.Long"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleElementMatch",
                "name": "baseCondition",
                "range": "org.apache.uima.ruta.type.DebugEvaluatedCondition"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleElementMatch",
                "name": "conditions",
                "range": "org.apache.uima.ruta.type.DebugEvaluatedCondition[]"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleElementMatch",
                "name": "elements",
                "range": "org.apache.uima.ruta.type.DebugRuleElementMatches[]"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleElementMatch",
                "name": "inlinedConditionBlocks",
                "range": "org.apache.uima.ruta.type.DebugInlinedBlock[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Cognition_Ideation": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.MetaDataStringField": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.MetaDataStringField",
                "name": "key",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.MetaDataStringField",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.LINK": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.SRelation": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Signal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SRelation",
                "name": "relation_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SRelation",
                "name": "cluster",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SRelation",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.ocr.OCRLine": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRLine",
                "name": "baseline",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRLine",
                "name": "top",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRLine",
                "name": "bottom",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRLine",
                "name": "left",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRLine",
                "name": "right",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.ocr.OCRLine",
                "name": "format",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.ADV": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Graph": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Graph",
                "name": "nodes",
                "range": "org.texttechnologylab.annotation.type.Node[]"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Graph",
                "name": "edges",
                "range": "org.texttechnologylab.annotation.type.Edge[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Process": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.DocumentAnnotation": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentAnnotation",
                "name": "author",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentAnnotation",
                "name": "publisher",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentAnnotation",
                "name": "dateDay",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentAnnotation",
                "name": "subtitle",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentAnnotation",
                "name": "dateMonth",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentAnnotation",
                "name": "dateYear",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentAnnotation",
                "name": "timestamp",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.DocumentAnnotation",
                "name": "place",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticArgument": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemanticArgument",
                "name": "role",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_ADV": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_PART": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.TimeInnerNode": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "xPos",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "depth",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "subvalue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "end",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "nodes",
                "range": "uima.cas.FSArray"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "edges",
                "range": "uima.cas.FSArray"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "x",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "y",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.TimeInnerNode",
                "name": "additionalvalue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_ADJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Document": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
                "name": "divType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
                "name": "id",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Possession_Property": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Fungi": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_ADP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Substance": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Animal": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.StopWord": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.COMMENT": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Time": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.PRECONJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Motive": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Act_Action_Activity": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NSUBJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.W": {
        "parent": "org.apache.uima.ruta.type.ANY",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.score.ScoreAnnotation": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.score.ScoreAnnotation",
                "name": "reference",
                "range": "uima.cas.TOP"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.score.ScoreAnnotation",
                "name": "value",
                "range": "uima.cas.Double"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.score.ScoreAnnotation",
                "name": "origin",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.ArgEdgeRight": {
        "parent": "org.texttechnologylab.annotation.type.ArgEdge",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "source",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "target",
                "range": "org.texttechnologylab.annotation.type.Node"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.Edge",
                "name": "edgetype",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ADVCL": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_NOUN": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.SpatialSignal": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Signal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialSignal",
                "name": "cluster",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.SpatialSignal",
                "name": "semantic_type",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Taxon": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.ADJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.SemanticSource": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.WordSense",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.semantics.type.WordSense",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.SemanticSource",
                "name": "source",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.SemanticSource",
                "name": "searchResult",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.SemanticSource",
                "name": "comment",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.node.type.RelationContext": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.RelationContext",
                "name": "relatesTo",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.RelationContext",
                "name": "ReferencedID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.RelationContext",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.RelationContext",
                "name": "wikiDataID",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.ADVMOD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isospace.MotionSignal": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Signal",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isospace.MotionSignal",
                "name": "motion_signal_type",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "description",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "suggestions",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.SuggestedAction[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.anomaly.type.Anomaly",
                "name": "category",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.MEASURE": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_PUNCT": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.O": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Location_Place": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Fingerprint": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Fingerprint",
                "name": "reference",
                "range": "uima.cas.TOP"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Protozoa": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Money": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.SPECIAL": {
        "parent": "org.apache.uima.ruta.type.ANY",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.NAC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NSUBJPASS": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.RCMOD": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.DM": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.O",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.unihd.dbs.uima.types.heideltime.IntervalCandidateSentence": {
        "parent": "de.unihd.dbs.uima.types.heideltime.Sentence",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Sentence",
                "name": "filename",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.unihd.dbs.uima.types.heideltime.Sentence",
                "name": "sentenceId",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Attribute_Property": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Vehicle": {
        "parent": "org.texttechnologylab.annotation.type.Artifact",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData": {
        "parent": "uima.tcas.DocumentAnnotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.DocumentAnnotation",
                "name": "language",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "documentTitle",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "documentId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "documentUri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "collectionId",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "documentBaseUri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData",
                "name": "isLastSegment",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.NC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.Temporal": {
        "parent": "org.texttechnologylab.annotation.type.AnnotationNode",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.AnnotationNode",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.REMARK": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.REMARK",
                "name": "comment",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.INTJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Reproduction": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Heading": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
                "name": "divType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
                "name": "id",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.IOBJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CSUBJPASS": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.ProfiledAnnotation": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.ProfiledAnnotation",
                "name": "time",
                "range": "uima.cas.Long"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.DebugRuleMatch": {
        "parent": "org.apache.uima.ruta.type.ProfiledAnnotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.ProfiledAnnotation",
                "name": "time",
                "range": "uima.cas.Long"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "elements",
                "range": "org.apache.uima.ruta.type.DebugRuleElementMatches[]"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "matched",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.DebugRuleMatch",
                "name": "delegates",
                "range": "org.apache.uima.ruta.type.DebugScriptApply[]"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.node.type.Context": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "ReferencedID",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "displayName",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "wikiDataID",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.node.type.Context",
                "name": "image",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Hyperedge": {
        "parent": "org.texttechnologylab.annotation.type.GraphBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Hyperedge",
                "name": "endpoints",
                "range": "org.texttechnologylab.annotation.type.Endpoint[]"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.STYLE": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Process": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.TokenSeed": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.RutaBasic": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.RutaBasic",
                "name": "replacement",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.BR": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.COP": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.POS_NPV": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS_NOUN",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.knowledge.WikidataEntry": {
        "parent": "org.texttechnologylab.annotation.knowledge.KnowledgeEntry",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.knowledge.KnowledgeEntry",
                "name": "uri",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.knowledge.KnowledgeEntry",
                "name": "source",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.knowledge.WikidataEntry",
                "name": "P31",
                "range": "uima.cas.StringList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.knowledge.WikidataEntry",
                "name": "P279",
                "range": "uima.cas.StringList"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.AbstractNamedEntity": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "uima.tcas.Annotation": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NEG": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.PC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.ADVC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.chunk.Chunk",
                "name": "chunkValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.CW": {
        "parent": "org.apache.uima.ruta.type.W",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.ner.type.Language": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Paragraph": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
                "name": "divType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Div",
                "name": "id",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CONJ_YET": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.KnowledgeEntry": {
        "parent": "org.texttechnologylab.annotation.type.Node",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "Id",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "label",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "create",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "modified",
                "range": "uima.cas.Long"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.GraphBase",
                "name": "user",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.Node",
                "name": "attribute",
                "range": "org.texttechnologylab.annotation.type.Attribute"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.KnowledgeEntry",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.KnowledgeEntry",
                "name": "source",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.KnowledgeEntry",
                "name": "reference",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.type.KnowledgeEntry",
                "name": "parentEntity",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.typo.Historical": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.semafsr.SrLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.CC": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Communication": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.tweet.NNV": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.N",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "PosValue",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.pos.POS",
                "name": "coarseValue",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.RelationSet": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.type.RelationSet",
                "name": "relations",
                "range": "org.texttechnologylab.annotation.type.RelationDescription[]"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.SPACE": {
        "parent": "org.apache.uima.ruta.type.WS",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.time.Time": {
        "parent": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "mod",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_id",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "position",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "rotation",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec4"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "scale",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.Vec3"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature",
                "range": "uima.cas.FSList"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Entity",
                "name": "object_feature_array",
                "range": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute[]"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "function_in_document",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "temporal_function",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3",
                "name": "anchor_time_id",
                "range": "org.texttechnologylab.annotation.semaf.isotimeml.TimeX3"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Bacteria": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Reproduction": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.isotimeml.SLink": {
        "parent": "org.texttechnologylab.annotation.semaf.isobase.Link",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "comment",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "figure",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "ground",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": false,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "trigger",
                "range": "org.texttechnologylab.annotation.semaf.isobase.Entity"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isobase.Link",
                "name": "rel_type",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.isotimeml.SLink",
                "name": "origin",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.concept.Chromista": {
        "parent": "org.texttechnologylab.annotation.AbstractNamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.AbstractNamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.XSUBJ": {
        "parent": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Governor",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "Dependent",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "DependencyType",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency",
                "name": "flavor",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.type.Communication": {
        "parent": "org.texttechnologylab.annotation.NamedEntity",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "value",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity",
                "name": "identifier",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metaphor",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "metonym",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.NamedEntity",
                "name": "specific",
                "range": "uima.cas.Boolean"
            }
        ],
        "primitive": false
    },
    "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute": {
        "parent": "uima.cas.AnnotationBase",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute",
                "name": "key",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.texttechnologylab.annotation.semaf.IsoSpatial.ObjectAttribute",
                "name": "value",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "constituentType",
                "range": "uima.cas.String"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "parent",
                "range": "uima.tcas.Annotation"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "children",
                "range": "uima.tcas.Annotation[]"
            },
            {
                "primitive": true,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.syntax.type.constituent.Constituent",
                "name": "syntacticFunction",
                "range": "uima.cas.String"
            }
        ],
        "primitive": false
    },
    "org.apache.uima.ruta.type.html.FONT": {
        "parent": "org.apache.uima.ruta.type.html.TAG",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "name",
                "range": "uima.cas.String"
            },
            {
                "primitive": true,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "expandedOffsets",
                "range": "uima.cas.Boolean"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeName",
                "range": "uima.cas.StringArray"
            },
            {
                "primitive": false,
                "domain": "org.apache.uima.ruta.type.html.TAG",
                "name": "attributeValue",
                "range": "uima.cas.StringArray"
            }
        ],
        "primitive": false
    },
    "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split": {
        "parent": "uima.tcas.Annotation",
        "features": [
            {
                "primitive": false,
                "domain": "uima.cas.AnnotationBase",
                "name": "sofa",
                "range": "uima.cas.Sofa"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "begin",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": true,
                "domain": "uima.tcas.Annotation",
                "name": "end",
                "range": "uima.cas.Integer"
            },
            {
                "primitive": false,
                "domain": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split",
                "name": "splits",
                "range": "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Split[]"
            }
        ],
        "primitive": false
    }
};
function make_inhe() {
    const inhe = {};
    for (const [k, v] of Object.entries(data)) {
        let val = inhe[v["parent"]];
        if (val === undefined)
            val = [];
        val.push(k);
        inhe[v["parent"]] = val;
    }
    return inhe;
}
const inhe = make_inhe();
function make_filter(filter) {
    let filtercopy = [...filter];
    let i = 0;
    while (i < filtercopy.length) {
        if (inhe[filtercopy[i]] !== undefined)
            for (const elem of inhe[filtercopy[i]]) {
                if (!(elem in filtercopy)) {
                    filtercopy.push(elem);
                }
            }
        i += 1;
    }
    return new Set(filtercopy);
}


/***/ }),

/***/ "./src/app/components/tools/utils.ts":
/*!*******************************************!*\
  !*** ./src/app/components/tools/utils.ts ***!
  \*******************************************/
/*! exports provided: quickTreeType, tokenType, commentType, knowledgeType, ttEntityType, fingerprintType, getAnnotation, getTypedAnnotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quickTreeType", function() { return quickTreeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenType", function() { return tokenType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commentType", function() { return commentType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "knowledgeType", function() { return knowledgeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ttEntityType", function() { return ttEntityType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fingerprintType", function() { return fingerprintType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAnnotation", function() { return getAnnotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTypedAnnotation", function() { return getTypedAnnotation; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

const quickTreeType = 'org.texttechnologylab.annotation.type.QuickTreeNode';
const tokenType = 'de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token';
const commentType = 'org.texttechnologylab.annotation.type.Comment';
const knowledgeType = 'org.texttechnologylab.annotation.type.KnowledgeEntry';
const ttEntityType = 'org.texttechnologylab.annotation.type.TextTechnologyEntity';
const fingerprintType = 'org.texttechnologylab.annotation.type.Fingerprint';
/**
 * Gibt den übergebenen Eintrag als IToolElement zurück
 */
function getAnnotation(anno) {
    if (!anno || Object.keys(anno).length === 0) {
        return undefined;
    }
    return anno;
}
/**
 * Gibt den übergebenen Eintrag als angegebenen Type zurück
 */
function getTypedAnnotation(anno) {
    if (!anno || Object.keys(anno).length === 0) {
        return undefined;
    }
    return anno;
}


/***/ }),

/***/ "./src/app/components/user/dashboard/dashboard.component.scss":
/*!********************************************************************!*\
  !*** ./src/app/components/user/dashboard/dashboard.component.scss ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".content {\n  width: 100%;\n}\n\n.actions {\n  text-align: right;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3VzZXIvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy91c2VyL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2VyL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5hY3Rpb25zIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn0iLCIuY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYWN0aW9ucyB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/user/dashboard/dashboard.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/components/user/dashboard/dashboard.component.ts ***!
  \******************************************************************/
/*! exports provided: DashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardComponent", function() { return DashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");
/* harmony import */ var src_app_services_document_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/document.service */ "./src/app/services/document.service.ts");
/* harmony import */ var src_app_services_task_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/task.service */ "./src/app/services/task.service.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm2015/table.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/esm2015/paginator.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm2015/sort.js");
/* harmony import */ var src_app_services_tool_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/tool.service */ "./src/app/services/tool.service.ts");











let DashboardComponent = 
/**
 * Komponente für die Darstellung des Anwender Dashboards (der "Startseite")
 */
class DashboardComponent {
    constructor(userservice, documentservice, router, menuService, taskService, toolService) {
        this.userservice = userservice;
        this.documentservice = documentservice;
        this.router = router;
        this.menuService = menuService;
        this.taskService = taskService;
        this.toolService = toolService;
        this.displayColumns = ['label', 'done'];
    }
    ngOnInit() {
        this.userData = this.userservice.user;
        this.menuService.showMenubar();
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](this.taskService.getTasks().filter(({ isDone }) => !isDone));
        this.dataSource.sort = this.sort;
        this.dataSource.paginator = this.paginator;
    }
    /**
     * Navigiere zur Dokumenten Ansicht
     */
    navigateToDocument() {
        const queryParams = {};
        if (this.documentservice.currentCAS) {
            queryParams.cas = this.documentservice.currentCAS.casId;
            if (this.documentservice.currentView) {
                queryParams.view = this.documentservice.currentView.view;
            }
        }
        this.router.navigate(['/document'], { queryParams });
    }
    /**
     * Markiere einen Task als abgeschlossen
     */
    markTaskAsDone(taskId) {
        this.taskService.setTaskAsDone(taskId);
        this.dataSource.data = this.taskService.getTasks().filter(({ isDone }) => !isDone);
    }
    /**
     * Öffne einen Task für die Bearbeitung
     */
    openTask(taskId) {
        const task = this.taskService.getTask(taskId);
        if (!task || task.isDone) {
            return;
        }
        this.toolService.navigateToTool(task.tool, task.cas, task.view, task.id);
    }
};
DashboardComponent.ctorParameters = () => [
    { type: src_app_services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"] },
    { type: src_app_services_document_service__WEBPACK_IMPORTED_MODULE_5__["DocumentService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__["MenuService"] },
    { type: src_app_services_task_service__WEBPACK_IMPORTED_MODULE_6__["TaskService"] },
    { type: src_app_services_tool_service__WEBPACK_IMPORTED_MODULE_10__["ToolService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_8__["MatPaginator"], { static: true })
], DashboardComponent.prototype, "paginator", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_9__["MatSort"], { static: true })
], DashboardComponent.prototype, "sort", void 0);
DashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-dashboard',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./dashboard.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/user/dashboard/dashboard.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./dashboard.component.scss */ "./src/app/components/user/dashboard/dashboard.component.scss")).default]
    })
    /**
     * Komponente für die Darstellung des Anwender Dashboards (der "Startseite")
     */
], DashboardComponent);



/***/ }),

/***/ "./src/app/components/user/login/login.component.scss":
/*!************************************************************!*\
  !*** ./src/app/components/user/login/login.component.scss ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".form {\n  margin-top: 1em;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 22em;\n}\n\n.content {\n  width: 100%;\n}\n\n.formfield {\n  width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL01vYmlsZUFubm90YXRvci9Nb2JpbGVBbm5vdGF0b3Ivc3JjL2FwcC9jb21wb25lbnRzL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2VyL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0ge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAyMmVtO1xufVxuXG4uY29udGVudCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5mb3JtZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuIiwiLmZvcm0ge1xuICBtYXJnaW4tdG9wOiAxZW07XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMjJlbTtcbn1cblxuLmNvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZvcm1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufSJdfQ== */");

/***/ }),

/***/ "./src/app/components/user/login/login.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/components/user/login/login.component.ts ***!
  \**********************************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/menu.service */ "./src/app/services/menu.service.ts");





let LoginComponent = 
/**
 * Kopmonente für die Anmeldung des Benutzers
 */
class LoginComponent {
    constructor(userservice, menuService, router) {
        this.userservice = userservice;
        this.menuService = menuService;
        this.router = router;
        this.username = '';
        this.password = '';
        this.isWaiting = false;
        this.subscriptions = [];
    }
    ngOnInit() {
        const observer = {
            next: () => this.redirect(),
            error: () => { return; },
            complete: () => { },
        };
        this.subscriptions.push(this.userservice.sessionRestore.subscribe(observer));
        this.menuService.showMenubar();
    }
    ngOnDestroy() {
        // Beende die momentanen Subscriptions
        for (const subscription of this.subscriptions) {
            subscription.unsubscribe();
        }
    }
    /**
     * Anmeldung anhand der übergebenen Daten für Name und Passwort
     */
    login(pwEncoded, username, password) {
        this.isWaiting = true;
        const observer = {
            next: (isValid) => {
                if (isValid) {
                    this.loginSuccess();
                }
                else {
                    this.loginError();
                }
            },
            error: () => this.loginError(),
            complete: () => this.isWaiting = false,
        };
        this.userservice.login(username || this.username, password || this.password, pwEncoded)
            .subscribe(observer);
    }
    /**
     * Anmeldung mit den öffentlichen Demo Account
     */
    loginAsPublic() {
        this.login(true, 'public', 'ad08d30f519ab825aa2b884625c44377');
    }
    /**
     * Anmeldung war erfolgreich
     */
    loginSuccess() {
        this.isWaiting = false;
        this.redirect();
    }
    /**
     * Anmeldung ist fehlgeschlagen
     */
    loginError() {
        this.menuService.showMessage({ level: 'error', text: 'MESSAGES.LOGIN-ERROR' });
        this.isWaiting = false;
    }
    /**
     * Weiterleitung zur Ursprünglich aufgerufenen URL (Defaul: Dashboard)
     */
    redirect() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const success = yield this.router.navigateByUrl(this.userservice.redirectUrlString).catch(() => false);
            if (!success) {
                this.router.navigate(['/dashboard']);
            }
        });
    }
};
LoginComponent.ctorParameters = () => [
    { type: src_app_services_user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"] },
    { type: src_app_services_menu_service__WEBPACK_IMPORTED_MODULE_4__["MenuService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] }
];
LoginComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-login',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./login.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/components/user/login/login.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./login.component.scss */ "./src/app/components/user/login/login.component.scss")).default]
    })
    /**
     * Kopmonente für die Anmeldung des Benutzers
     */
], LoginComponent);



/***/ }),

/***/ "./src/app/guards/auth.guard.ts":
/*!**************************************!*\
  !*** ./src/app/guards/auth.guard.ts ***!
  \**************************************/
/*! exports provided: AuthGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuard", function() { return AuthGuard; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/user.service */ "./src/app/services/user.service.ts");




let AuthGuard = 
/**
 * Prüft ob der Anwender eingeloggt ist und verweigert ggf. Zugriff auf Ansichten der Anwendung
 */
class AuthGuard {
    constructor(userservice, router) {
        this.userservice = userservice;
        this.router = router;
    }
    canActivate(next, state) {
        if (this.userservice.isLoggedIn) {
            // Benutzer ist bereits eingeloggt
            return true;
        }
        // Benutzer ist nicht eingelogt
        // Speichern des eigentlich aufgerufenen URL für spätere Weiterleitung nach erfolgreichem Login
        this.userservice.redirectUrlString = state.url;
        // Navigiere zur Login Ansicht
        this.router.navigate(['/login']);
        return false;
    }
    canActivateChild(next, state) {
        return this.canActivate(next, state);
    }
};
AuthGuard.ctorParameters = () => [
    { type: _services_user_service__WEBPACK_IMPORTED_MODULE_3__["UserService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
AuthGuard = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Prüft ob der Anwender eingeloggt ist und verweigert ggf. Zugriff auf Ansichten der Anwendung
     */
], AuthGuard);



/***/ }),

/***/ "./src/app/guards/login.guard.ts":
/*!***************************************!*\
  !*** ./src/app/guards/login.guard.ts ***!
  \***************************************/
/*! exports provided: LoginGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginGuard", function() { return LoginGuard; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/user.service */ "./src/app/services/user.service.ts");




let LoginGuard = 
/**
 * Prüft ob der Anwender angemeldet ist und verweigert ihm in dem Fall den Zugriff auf die Login Ansicht
 */
class LoginGuard {
    constructor(userservice, router) {
        this.userservice = userservice;
        this.router = router;
    }
    canActivate(next, state) {
        if (this.userservice.isLoggedIn) {
            // Benutzer ist eingeloggt -> Verhindere das aufrufen der Login Ansicht
            const redirectUrl = this.userservice.redirectUrlString;
            if (redirectUrl) {
                // Navigiere zur vorher gespeicherten URL
                this.router.navigateByUrl(redirectUrl);
            }
            else {
                // Navigiere zum Dashboard des Benutzers
                this.router.navigate(['/dashboard']);
            }
            return false;
        }
        return true;
    }
    canActivateChild(next, state) {
        return this.canActivate(next, state);
    }
};
LoginGuard.ctorParameters = () => [
    { type: _services_user_service__WEBPACK_IMPORTED_MODULE_3__["UserService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
LoginGuard = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Prüft ob der Anwender angemeldet ist und verweigert ihm in dem Fall den Zugriff auf die Login Ansicht
     */
], LoginGuard);



/***/ }),

/***/ "./src/app/guards/tool.guard.ts":
/*!**************************************!*\
  !*** ./src/app/guards/tool.guard.ts ***!
  \**************************************/
/*! exports provided: ToolGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolGuard", function() { return ToolGuard; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var _components_menu_load_progress_load_progress_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/menu/load-progress/load-progress.component */ "./src/app/components/menu/load-progress/load-progress.component.ts");
/* harmony import */ var _services_tool_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/tool.service */ "./src/app/services/tool.service.ts");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/user.service */ "./src/app/services/user.service.ts");







let ToolGuard = 
/**
 * Prüft ob ein Anwender angemeldet ist und stellt sicher, dass die für das Werkzeug nötigen Daten geladen wurden
 */
class ToolGuard {
    constructor(toolservice, userservice, router, dialog) {
        this.toolservice = toolservice;
        this.userservice = userservice;
        this.router = router;
        this.dialog = dialog;
    }
    canActivate(next, state) {
        // Prüfe ob der Benutzer eingeloggt ist und leite notfalls zur Login Ansicht weiter
        if (!this.userservice.isLoggedIn) {
            this.userservice.redirectUrlString = state.url;
            this.router.navigate(['/login']);
            return false;
        }
        // Prüfe ob für den angegebenen URL ein gültiges Werkzeug existiert
        const [entry] = this.toolservice.toolSelection.filter(({ url }) => url[0] === '/' + next.routeConfig.path);
        if (!entry || !entry.id) {
            return false;
        }
        if (this.loadProgress) {
            this.loadProgress.close();
        }
        // Starte das LoadProgress Popup um die für das Werkzeug nötigen Daten zu laden
        this.loadProgress = this.dialog.open(_components_menu_load_progress_load_progress_component__WEBPACK_IMPORTED_MODULE_4__["LoadProgressComponent"], {
            data: {
                casId: next.queryParamMap.get('cas'),
                view: next.queryParamMap.get('view'),
                toolId: entry.id,
            }
        });
        return this.loadProgress.afterClosed();
    }
};
ToolGuard.ctorParameters = () => [
    { type: _services_tool_service__WEBPACK_IMPORTED_MODULE_5__["ToolService"] },
    { type: _services_user_service__WEBPACK_IMPORTED_MODULE_6__["UserService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialog"] }
];
ToolGuard = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Prüft ob ein Anwender angemeldet ist und stellt sicher, dass die für das Werkzeug nötigen Daten geladen wurden
     */
], ToolGuard);



/***/ }),

/***/ "./src/app/hammerConfig.ts":
/*!*********************************!*\
  !*** ./src/app/hammerConfig.ts ***!
  \*********************************/
/*! exports provided: HammerConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HammerConfig", function() { return HammerConfig; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_2__);



class HammerConfig extends _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["HammerGestureConfig"] {
    constructor() {
        super(...arguments);
        this.overrides = {
            swipe: { velocity: 0.3, threshold: 10, direction: hammerjs__WEBPACK_IMPORTED_MODULE_2__["DIRECTION_HORIZONTAL"] },
            pinch: { enable: false },
            rotate: { enable: false } // Wichtig um vertikalen Scroll nicht zu blockieren
        };
        this.options = {
            domEvents: true,
        };
    }
}


/***/ }),

/***/ "./src/app/modules/language/language.module.ts":
/*!*****************************************************!*\
  !*** ./src/app/modules/language/language.module.ts ***!
  \*****************************************************/
/*! exports provided: HttpLoaderFactory, LanguageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpLoaderFactory", function() { return HttpLoaderFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LanguageModule", function() { return LanguageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/http-loader */ "./node_modules/@ngx-translate/http-loader/fesm2015/ngx-translate-http-loader.js");






// AoT requires an exported function for factories
function HttpLoaderFactory(httpClient) {
    return new _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_5__["TranslateHttpLoader"](httpClient);
}
let LanguageModule = class LanguageModule {
};
LanguageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateModule"].forRoot({
                loader: {
                    provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateLoader"],
                    useFactory: HttpLoaderFactory,
                    deps: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]],
                }
            })
        ],
        exports: [
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateModule"]
        ]
    })
], LanguageModule);



/***/ }),

/***/ "./src/app/modules/material/material.module.ts":
/*!*****************************************************!*\
  !*** ./src/app/modules/material/material.module.ts ***!
  \*****************************************************/
/*! exports provided: MaterialModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaterialModule", function() { return MaterialModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/toolbar */ "./node_modules/@angular/material/esm2015/toolbar.js");
/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/sidenav */ "./node_modules/@angular/material/esm2015/sidenav.js");
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/icon */ "./node_modules/@angular/material/esm2015/icon.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm2015/dialog.js");
/* harmony import */ var _angular_material_card__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/card */ "./node_modules/@angular/material/esm2015/card.js");
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/input */ "./node_modules/@angular/material/esm2015/input.js");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/button */ "./node_modules/@angular/material/esm2015/button.js");
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/select */ "./node_modules/@angular/material/esm2015/select.js");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/snack-bar */ "./node_modules/@angular/material/esm2015/snack-bar.js");
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/progress-spinner */ "./node_modules/@angular/material/esm2015/progress-spinner.js");
/* harmony import */ var _angular_material_menu__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/menu */ "./node_modules/@angular/material/esm2015/menu.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm2015/tree.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm2015/table.js");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/paginator */ "./node_modules/@angular/material/esm2015/paginator.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm2015/sort.js");
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material/form-field */ "./node_modules/@angular/material/esm2015/form-field.js");
/* harmony import */ var _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/slide-toggle */ "./node_modules/@angular/material/esm2015/slide-toggle.js");
/* harmony import */ var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/tabs */ "./node_modules/@angular/material/esm2015/tabs.js");
/* harmony import */ var _angular_material_badge__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/badge */ "./node_modules/@angular/material/esm2015/badge.js");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm2015/expansion.js");























let MaterialModule = class MaterialModule {
};
MaterialModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_3__["MatToolbarModule"],
            _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_4__["MatSidenavModule"],
            _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__["MatIconModule"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialogModule"],
            _angular_material_card__WEBPACK_IMPORTED_MODULE_7__["MatCardModule"],
            _angular_material_input__WEBPACK_IMPORTED_MODULE_8__["MatInputModule"],
            _angular_material_button__WEBPACK_IMPORTED_MODULE_9__["MatButtonModule"],
            _angular_material_select__WEBPACK_IMPORTED_MODULE_10__["MatSelectModule"],
            _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_11__["MatSnackBarModule"],
            _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_12__["MatProgressSpinnerModule"],
            _angular_material_tree__WEBPACK_IMPORTED_MODULE_14__["MatTreeModule"],
            _angular_material_menu__WEBPACK_IMPORTED_MODULE_13__["MatMenuModule"],
            _angular_material_table__WEBPACK_IMPORTED_MODULE_15__["MatTableModule"],
            _angular_material_paginator__WEBPACK_IMPORTED_MODULE_16__["MatPaginatorModule"],
            _angular_material_sort__WEBPACK_IMPORTED_MODULE_17__["MatSortModule"],
            _angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__["MatFormFieldModule"],
            _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_19__["MatSlideToggleModule"],
            _angular_material_tabs__WEBPACK_IMPORTED_MODULE_20__["MatTabsModule"],
            _angular_material_badge__WEBPACK_IMPORTED_MODULE_21__["MatBadgeModule"],
            _angular_material_expansion__WEBPACK_IMPORTED_MODULE_22__["MatExpansionModule"],
        ],
        exports: [
            _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_3__["MatToolbarModule"],
            _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_4__["MatSidenavModule"],
            _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__["MatIconModule"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialogModule"],
            _angular_material_card__WEBPACK_IMPORTED_MODULE_7__["MatCardModule"],
            _angular_material_input__WEBPACK_IMPORTED_MODULE_8__["MatInputModule"],
            _angular_material_button__WEBPACK_IMPORTED_MODULE_9__["MatButtonModule"],
            _angular_material_select__WEBPACK_IMPORTED_MODULE_10__["MatSelectModule"],
            _angular_material_menu__WEBPACK_IMPORTED_MODULE_13__["MatMenuModule"],
            _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_12__["MatProgressSpinnerModule"],
            _angular_material_tree__WEBPACK_IMPORTED_MODULE_14__["MatTreeModule"],
            _angular_material_table__WEBPACK_IMPORTED_MODULE_15__["MatTableModule"],
            _angular_material_paginator__WEBPACK_IMPORTED_MODULE_16__["MatPaginatorModule"],
            _angular_material_sort__WEBPACK_IMPORTED_MODULE_17__["MatSortModule"],
            _angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__["MatFormFieldModule"],
            _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_19__["MatSlideToggleModule"],
            _angular_material_tabs__WEBPACK_IMPORTED_MODULE_20__["MatTabsModule"],
            _angular_material_badge__WEBPACK_IMPORTED_MODULE_21__["MatBadgeModule"],
            _angular_material_expansion__WEBPACK_IMPORTED_MODULE_22__["MatExpansionModule"],
        ]
    })
], MaterialModule);



/***/ }),

/***/ "./src/app/services/data.service.ts":
/*!******************************************!*\
  !*** ./src/app/services/data.service.ts ***!
  \******************************************/
/*! exports provided: DataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return DataService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _websocket_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./websocket.service */ "./src/app/services/websocket.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _menu_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./menu.service */ "./src/app/services/menu.service.ts");





let DataService = 
/**
 * Service für die Vorverarbeitung der eingehenden WebSocket Daten
 */
class DataService {
    constructor(websocketService, menuService) {
        this.websocketService = websocketService;
        this.menuService = menuService;
        this.sessionSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.openCasSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.openViewSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.openToolSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.changeCasSubject = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.websocketService.connect().subscribe({
            next: (data) => this.onMessage(data),
            error: (err) => this.onError(err),
        });
    }
    /**
     * Subject um auf das Öffnen eines Dokumentes zu hören
     */
    get casOpened() {
        return this.openCasSubject;
    }
    /**
     * Subject um auf das Öffnen einer View zu hören
     */
    get viewOpened() {
        return this.openViewSubject;
    }
    /**
     * Subject um auf das Öffnen eines Tools zu hören
     */
    get toolOpened() {
        return this.openToolSubject;
    }
    /**
     * Subject um auf Änderungen eines Dokumentes zu hören
     */
    get casChanged() {
        return this.changeCasSubject;
    }
    /**
     * Verarbeite eine eingehende Nachricht und leite sie über das entsprechende Subject weiter
     */
    onMessage(msg) {
        if (msg && msg.cmd) {
            switch (msg.cmd) {
                case 'session':
                    this.websocketService.workQueue();
                    this.sessionSubject.next(true);
                    break;
                case 'open_cas':
                    this.openCasSubject.next(msg.data);
                    break;
                case 'change_cas':
                    this.changeCasSubject.next(msg.data);
                    break;
                case 'open_view':
                    this.openViewSubject.next(msg.data);
                    break;
                case 'open_tool':
                    this.openToolSubject.next(msg.data);
                    break;
                case 'msg':
                    this.showMessage(msg.data);
                    break;
            }
        }
    }
    onError(err) {
        console.warn('onError', err);
    }
    /**
     * Nachrichten des WebSocket dem Benutzer anzeigen. Muss in Zukunft ggf. noch erweitert werden
     */
    showMessage(data) {
        switch (data.text) {
            case 'Document has been successfully saved!':
                this.menuService.showMessage({ level: 'success', text: 'MESSAGES.CAS-SAVED' });
        }
    }
};
DataService.ctorParameters = () => [
    { type: _websocket_service__WEBPACK_IMPORTED_MODULE_2__["WebsocketService"] },
    { type: _menu_service__WEBPACK_IMPORTED_MODULE_4__["MenuService"] }
];
DataService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Service für die Vorverarbeitung der eingehenden WebSocket Daten
     */
], DataService);



/***/ }),

/***/ "./src/app/services/document.service.ts":
/*!**********************************************!*\
  !*** ./src/app/services/document.service.ts ***!
  \**********************************************/
/*! exports provided: DocumentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentService", function() { return DocumentService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./user.service */ "./src/app/services/user.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _websocket_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./websocket.service */ "./src/app/services/websocket.service.ts");
/* harmony import */ var _data_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data.service */ "./src/app/services/data.service.ts");







let DocumentService = 
/**
 * Service für die Verwaltung von Dokumenten spezifischen Daten
 */
class DocumentService {
    constructor(userService, http, websocketService, dataService) {
        this.userService = userService;
        this.http = http;
        this.websocketService = websocketService;
        this.dataService = dataService;
        this.backendUrl = 'https://resources.hucompute.org';
        this.documentCache = new Map();
        this.casOpened = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.viewsLoaded = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.viewOpened = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.toolOpened = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.casChanged = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        // Reset im Falle eines Logout
        const logoutObserver = {
            next: () => {
                this.loadedCAS = undefined;
                this.loadedView = undefined;
                this.casViews = [];
                this.loadedTool = undefined;
                this.documentCache = new Map();
                this.expectedCAS = undefined;
                this.expectedView = undefined;
                this.expectedTool = undefined;
            },
        };
        this.userService.logoutEvent.subscribe(logoutObserver);
        // Teilreset, wenn ein neues Dokument geöffnet wurde
        const casObserver = {
            next: (data) => {
                if (this.expectedCAS === data.casId) {
                    this.loadedCAS = data;
                    this.loadedView = undefined;
                    this.loadedTool = undefined;
                    this.expectedCAS = undefined;
                    this.expectedView = undefined;
                    this.expectedTool = undefined;
                    this.loadViews(data.casId, data.views || []);
                    this.casOpened.next(data);
                }
            },
        };
        this.dataService.casOpened.subscribe(casObserver);
        // Update des geladenen Dokumentes bei Änderungen
        const updateObserver = {
            next: (data) => {
                if (this.loadedTool && this.loadedTool.casId === data.casId) {
                    for (const [type, elements] of Object.entries(data.updates)) {
                        if (!this.loadedTool.toolElements[type]) {
                            this.loadedTool.toolElements[type] = {};
                        }
                        for (const [addr, element] of Object.entries(elements)) {
                            this.loadedTool.toolElements[type][addr] = element;
                        }
                    }
                    this.casChanged.next();
                }
            }
        };
        this.dataService.casChanged.subscribe(updateObserver);
        // Reagiere auf Änderungen der geladenen View
        const viewObserver = {
            next: (res) => {
                if (this.loadedCAS && res.casId === this.loadedCAS.casId && res.view === this.expectedView) {
                    this.loadedView = res;
                    this.expectedView = undefined;
                    this.viewOpened.next(res);
                }
            }
        };
        this.dataService.viewOpened.subscribe(viewObserver);
        // Reagiere auf Änderungen des geladenen Tools
        const toolObserver = {
            next: (res) => {
                if (this.loadedCAS && res.casId === this.loadedCAS.casId && this.loadedView
                    && res.currentView === this.loadedView.view && res.toolName === this.expectedTool) {
                    this.loadedTool = res;
                    this.expectedTool = undefined;
                    this.toolOpened.next(res);
                }
            }
        };
        this.dataService.toolOpened.subscribe(toolObserver);
    }
    /**
     * Lädt die Dokumente und Ordner im Repository des Anwenders, welche unter dem angegebenen root liegen
     */
    getDocuments(root, force = false) {
        return new rxjs__WEBPACK_IMPORTED_MODULE_4__["Observable"]((observer) => {
            const observ = {
                next: (result) => {
                    if (result.success) {
                        this.documentCache.set(root, result.data);
                        observer.next(result.data);
                    }
                    else {
                        observer.next([]);
                    }
                },
                error: (err) => observer.error(err),
                complete: () => observer.complete(),
            };
            if (!force && this.documentCache.has(root)) {
                observer.next(this.documentCache.get(root));
                return;
            }
            this.http.get(this.backendUrl + '/repositories', {
                params: {
                    documents: 'true',
                    recursive: 'false',
                    node: root,
                    session: this.userService.user.session,
                },
                responseType: 'json'
            }).subscribe(observ);
        });
    }
    /**
     * Öffnet das Dokument mit der übergebenen ID
     */
    openCAS(id) {
        console.log('start openCAS');
        const casId = `${id}`;
        if (this.loadedCAS != null && this.loadedCAS.casId === casId) {
            this.casOpened.next(this.loadedCAS);
            return;
        }
        this.expectedCAS = casId;
        this.websocketService.send({ cmd: 'open_cas', data: { casId } });
        console.log('end openCAS');
    }
    /**
     * Öffnet die View, welche per Dokumenten ID und View ID angegeben wurde
     */
    openView(casId, view) {
        if (!this.loadedCAS || this.loadedCAS.casId !== casId) {
            return;
        }
        this.expectedView = view;
        this.websocketService.send({
            cmd: 'open_view',
            data: {
                casId,
                view,
            }
        });
    }
    /**
     * Öffnet Tool mit der übergebenen ID für die angegebene Dokumenten und View ID
     */
    openTool(casId, viewId, toolId) {
        if (!this.loadedCAS || this.loadedCAS.casId !== casId || !this.loadedView || this.loadedView.view !== viewId) {
            return;
        }
        this.expectedTool = toolId;
        this.websocketService.send({
            cmd: 'open_tool',
            data: {
                casId,
                toolName: toolId,
                view: viewId,
            }
        });
    }
    /**
     * Sendet eine Speicheranfrage an das Backend
     */
    saveCas(casId) {
        this.websocketService.send({
            cmd: 'save_cas',
            data: {
                casId,
            }
        });
    }
    /**
     * Das aktuell geladene Dokument
     */
    get currentCAS() {
        return this.loadedCAS;
    }
    /**
     * Die aktuell zur Verfügung stehenden Views
     */
    get loadedViews() {
        return this.casViews;
    }
    /**
     * Der aktuell gewählte View
     */
    get currentView() {
        return this.loadedView;
    }
    /**
     * Die aktuell geladenen Werkzeugdaten
     */
    get currentTool() {
        return this.loadedTool;
    }
    /**
     * Lade für das per ID angegebene Dokument alle Views, welche dem Anwender zur Verfügung stehen
     */
    loadViews(casId, views) {
        const loadedViews = [];
        for (const view of views) {
            if (!view.view) {
                continue;
            }
            let label = view.view;
            if (view.view.startsWith('http')) {
                label = 'CONTENT-DOCUMENT.VIEW-LOADING';
                const observer = {
                    next: (data) => {
                        if (data.success) {
                            loadedViews.push(Object.assign(view, { id: loadedViews.length, label: data.result.description }));
                        }
                    }
                };
                this.http.get(view.view, {
                    params: {
                        session: this.userService.user.session,
                    },
                    responseType: 'json'
                }).subscribe(observer);
            }
            else {
                loadedViews.push(Object.assign(view, { id: loadedViews.length, label }));
            }
        }
        this.casViews = loadedViews;
        this.viewsLoaded.next({ casId, views: loadedViews });
    }
};
DocumentService.ctorParameters = () => [
    { type: _user_service__WEBPACK_IMPORTED_MODULE_2__["UserService"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] },
    { type: _websocket_service__WEBPACK_IMPORTED_MODULE_5__["WebsocketService"] },
    { type: _data_service__WEBPACK_IMPORTED_MODULE_6__["DataService"] }
];
DocumentService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Service für die Verwaltung von Dokumenten spezifischen Daten
     */
], DocumentService);



/***/ }),

/***/ "./src/app/services/menu.service.ts":
/*!******************************************!*\
  !*** ./src/app/services/menu.service.ts ***!
  \******************************************/
/*! exports provided: MenuService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MenuService", function() { return MenuService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/snack-bar */ "./node_modules/@angular/material/esm2015/snack-bar.js");
/* harmony import */ var _components_menu_snack_bar_snack_bar_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/menu/snack-bar/snack-bar.component */ "./src/app/components/menu/snack-bar/snack-bar.component.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");





let MenuService = 
/**
 * Service für allgemeine Funktionen des Menüs
 */
class MenuService {
    constructor(snackbar) {
        this.snackbar = snackbar;
        this.menubarVisibilityChange = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
    }
    /**
     * Blende die allgemeine Menüleiste ein
     */
    showMenubar() {
        this.menubarVisibilityChange.next(true);
    }
    /**
     * Blende die allgemeine Menüleiste aus
     */
    hideMenubar() {
        this.menubarVisibilityChange.next(false);
    }
    get menubarVisibilitySubject() {
        return this.menubarVisibilityChange;
    }
    /**
     * Zeige dem Anwender die übergebene Nachricht an
     */
    showMessage(message) {
        this.snackbar.openFromComponent(_components_menu_snack_bar_snack_bar_component__WEBPACK_IMPORTED_MODULE_3__["SnackBarComponent"], {
            duration: 3000,
            data: message
        });
    }
};
MenuService.ctorParameters = () => [
    { type: _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_2__["MatSnackBar"] }
];
MenuService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Service für allgemeine Funktionen des Menüs
     */
], MenuService);



/***/ }),

/***/ "./src/app/services/task.service.ts":
/*!******************************************!*\
  !*** ./src/app/services/task.service.ts ***!
  \******************************************/
/*! exports provided: TaskService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaskService", function() { return TaskService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let TaskService = 
/**
 * Service für die Verwaltung von Aufgaben (Tasks)
 * TODO: Die entsprechende Schnittstelle ist im Backend noch nicht vorhanden
 */
class TaskService {
    constructor() { }
    getTasks() {
        if (this.loadedTasks == null) {
            this.loadedTasks = [];
        }
        return this.loadedTasks;
    }
    setTaskAsDone(taskId) {
        const [task] = this.loadedTasks.filter(({ id }) => id === taskId);
        if (task) {
            task.isDone = true;
        }
    }
    getTask(taskId) {
        const [retval] = this.loadedTasks.filter(({ id }) => id === taskId);
        return retval;
    }
    getToolTitle(tool) {
        switch (tool) {
            case 'semaf':
                return 'TOOL-SEM-AF.TITLE';
            case 'quickpanel':
                return 'TOOL-QUICKANNO.TITLE';
            case 'nel2panel':
                return 'TOOL-KNOWLEDGEBASE.TITLE';
            default:
                return '';
        }
    }
};
TaskService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Service für die Verwaltung von Aufgaben (Tasks)
     * TODO: Die entsprechende Schnittstelle ist im Backend noch nicht vorhanden
     */
], TaskService);



/***/ }),

/***/ "./src/app/services/tool.service.ts":
/*!******************************************!*\
  !*** ./src/app/services/tool.service.ts ***!
  \******************************************/
/*! exports provided: ToolService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolService", function() { return ToolService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");



let ToolService = 
/**
 * Service für allgemeine Funktionen der Werkzeuge
 */
class ToolService {
    constructor(router) {
        this.router = router;
        /**
         * Liste der in der Anwendung verfügbaren Werkzeuge
         */
        this.implementedTools = [
            { label: 'TOOL-QUICKANNO.TITLE', url: ['/quickanno'], id: 'quickpanel' },
            { label: 'TOOL-KNOWLEDGEBASE.TITLE', url: ['/knowledgebase'], id: 'nel2panel' },
            { label: 'TOOL-SEM-AF.TITLE', url: ['/sem-af'], id: 'semaf' },
        ];
    }
    get toolSelection() {
        return this.implementedTools;
    }
    /**
     * Navigiere zur Ansicht des übergebenen Werkzeuges
     */
    navigateToTool(tool, cas, view, task) {
        if (!tool || !cas || !view) {
            return;
        }
        const [data] = this.implementedTools.filter(({ id }) => id === tool);
        if (!data) {
            return;
        }
        this.router.navigate(data.url, { queryParams: { cas, view, task } });
    }
};
ToolService.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
];
ToolService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Service für allgemeine Funktionen der Werkzeuge
     */
], ToolService);



/***/ }),

/***/ "./src/app/services/user.service.ts":
/*!******************************************!*\
  !*** ./src/app/services/user.service.ts ***!
  \******************************************/
/*! exports provided: UserService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return UserService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-cookie-service */ "./node_modules/ngx-cookie-service/ngx-cookie-service.js");
/* harmony import */ var ts_md5__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ts-md5 */ "./node_modules/ts-md5/dist/md5.js");
/* harmony import */ var ts_md5__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(ts_md5__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _websocket_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./websocket.service */ "./src/app/services/websocket.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js");
/* harmony import */ var _menu_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./menu.service */ "./src/app/services/menu.service.ts");










let UserService = 
/**
 * Service für die Verwaltung von Nutzerdaten
 */
class UserService {
    constructor(translate, http, router, menuService, websocketService, cookieService) {
        this.translate = translate;
        this.http = http;
        this.router = router;
        this.menuService = menuService;
        this.websocketService = websocketService;
        this.cookieService = cookieService;
        this.backendUrl = 'https://authority.hucompute.org';
        this.userData = undefined;
        this.redirectUrl = undefined;
        this.sessionCookieName = 'session';
        this.sessionRestore = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.logoutEvent = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
    }
    /**
     * Sende eine Authentifizierungs Anfrage an das Backend
     */
    login(username, password, pwEncoded = false) {
        return new rxjs__WEBPACK_IMPORTED_MODULE_6__["Observable"]((observer) => {
            this.http.post(this.backendUrl + '/login', undefined, {
                params: {
                    username,
                    password: pwEncoded ? password : ts_md5__WEBPACK_IMPORTED_MODULE_4__["Md5"].hashStr(password).toString(),
                },
                responseType: 'json',
            }).subscribe((data) => {
                if (data.success) {
                    this.loginSuccess(data.result, false);
                }
                observer.next(data.success);
            }, (error) => {
                observer.error(error);
            });
        });
    }
    /**
     * Abmeldung des aktuellen Benutzers
     */
    logout() {
        this.http.post(this.backendUrl + '/logout', undefined, {
            params: {
                session: this.userData.session,
            },
            responseType: 'json',
        });
        this.userData = undefined;
        this.cookieService.delete(this.sessionCookieName);
        this.router.navigate(['/login']);
        this.logoutEvent.next();
    }
    /**
     * Gibt an ob ein Benutzer aktuell angemeldet ist
     */
    get isLoggedIn() {
        return this.userData && this.userData.session != null;
    }
    /**
     * Versucht eine Anmeldung über das in den Cookies gespeicherte Session Token
     */
    tryLogginWithCookie() {
        const cookieData = this.cookieService.get(this.sessionCookieName);
        if (cookieData) {
            const loginObserver = {
                next: (data) => {
                    if (data.success) {
                        this.loginSuccess(data.result, true);
                    }
                    else {
                        this.cookieService.delete(this.sessionCookieName);
                    }
                },
                error: () => this.loginFailed(),
            };
            this.http.get(this.backendUrl + '/checklogin', {
                params: {
                    session: cookieData,
                },
                responseType: 'json',
            }).subscribe(loginObserver);
        }
    }
    /**
     * Lädt Informationen über den angegebenen Benutzer
     */
    getUserInfo(userUrl) {
        return this.http.get(userUrl, {
            params: {
                session: this.userData.session,
            },
            responseType: 'json',
        });
    }
    get user() {
        return this.userData;
    }
    get redirectUrlString() {
        const retval = this.redirectUrl;
        this.redirectUrl = undefined;
        return retval || '';
    }
    set redirectUrlString(value) {
        this.redirectUrl = value;
    }
    /**
     * Blende eine Meldung über die fehlgeschlagene Anmeldung ein
     */
    loginFailed() {
        this.menuService.showMessage({ level: 'error', text: 'MESSAGES.SERVER-ERROR' });
    }
    /**
     * Anmeldung war erfolgreich
     */
    loginSuccess(data, restored = false) {
        this.userData = data;
        this.websocketService.send({ cmd: 'session', data: { session: this.userData.session } });
        this.menuService.showMessage({ level: 'success', text: 'MESSAGES.LOGIN-SUCCESS' });
        if (restored) {
            this.sessionRestore.next(true);
        }
        else {
            this.cookieService.set(this.sessionCookieName, this.userData.session);
        }
    }
};
UserService.ctorParameters = () => [
    { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__["TranslateService"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
    { type: _menu_service__WEBPACK_IMPORTED_MODULE_9__["MenuService"] },
    { type: _websocket_service__WEBPACK_IMPORTED_MODULE_5__["WebsocketService"] },
    { type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_3__["CookieService"] }
];
UserService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Service für die Verwaltung von Nutzerdaten
     */
], UserService);



/***/ }),

/***/ "./src/app/services/websocket.service.ts":
/*!***********************************************!*\
  !*** ./src/app/services/websocket.service.ts ***!
  \***********************************************/
/*! exports provided: WebsocketService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WebsocketService", function() { return WebsocketService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_webSocket__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/webSocket */ "./node_modules/rxjs/_esm2015/webSocket/index.js");
/* harmony import */ var _menu_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./menu.service */ "./src/app/services/menu.service.ts");





var eWSState;
(function (eWSState) {
    eWSState[eWSState["open"] = 0] = "open";
    eWSState[eWSState["pending"] = 1] = "pending";
    eWSState[eWSState["closed"] = 2] = "closed";
})(eWSState || (eWSState = {}));
let WebsocketService = 
/**
 * Service für die grundlegende Kommunikation über Websocket
 */
class WebsocketService {
    constructor(menuService) {
        this.menuService = menuService;
        this.url = 'ws://textannotator.texttechnologylab.org/uima';
        this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.queue = [];
        this.queueWorking = false;
        this.currentState = eWSState.closed;
        this.connect();
    }
    /**
     * Stelle eine Verbindung über Websocket her
     */
    connect() {
        if (this.websocket == null) {
            this.connectToWebsocket();
        }
        return this.subject;
    }
    /**
     * Schicke Daten zum Backend
     */
    send(data) {
        if (this.currentState !== eWSState.open) {
            this.queue.push(data);
            this.connectToWebsocket();
            return;
        }
        if (this.websocket) {
            this.websocket.next(data);
        }
    }
    /**
     * Arbeite die aufgestauten Nachrichten ab und sende diese zum Backend
     */
    workQueue() {
        this.queueWorking = true;
        while (this.queue.length) {
            const data = this.queue.shift();
            this.send(data);
        }
        this.queueWorking = false;
    }
    connectToWebsocket() {
        if (this.currentState !== eWSState.closed) {
            return;
        }
        this.currentState = eWSState.pending;
        this.menuService.showMessage({ level: 'info', text: 'MESSAGES.WEBSOCKET-PENDING' });
        this.websocket = Object(rxjs_webSocket__WEBPACK_IMPORTED_MODULE_3__["webSocket"])({
            url: this.url,
            openObserver: {
                next: () => {
                    this.websocketOpened();
                }
            },
            closeObserver: {
                next: () => {
                    this.menuService.showMessage({ level: 'error', text: 'MESSAGES.WEBSOCKET-CLOSED' });
                    this.currentState = eWSState.closed;
                }
            }
        });
        this.websocket.subscribe((data) => this.subject.next(data));
    }
    websocketOpened() {
        this.menuService.showMessage({ text: 'MESSAGES.WEBSOCKET-OPEN', level: 'info' });
        const [session] = this.queue.filter(({ cmd }) => cmd === 'session');
        this.currentState = eWSState.open;
        if (session) {
            this.send(session);
            this.queue = this.queue.filter(({ cmd }) => cmd !== 'session');
        }
    }
};
WebsocketService.ctorParameters = () => [
    { type: _menu_service__WEBPACK_IMPORTED_MODULE_4__["MenuService"] }
];
WebsocketService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
    /**
     * Service für die grundlegende Kommunikation über Websocket
     */
], WebsocketService);



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.

const environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");





if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_3__["AppModule"])
    .catch(err => console.error(err));


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/runner/work/MobileAnnotator/MobileAnnotator/src/main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main-es2015.js.map